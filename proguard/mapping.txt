android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    android.os.Bundle mExtras -> mExtras
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    int BUILD_VERSION_CODE_KITKAT_WATCH -> BUILD_VERSION_CODE_KITKAT_WATCH
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> val$currentLayerType
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> includeChildForAccessibilitiy
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
    boolean access$300(android.view.View) -> access$300
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> LOG_TAG
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    float mInitialMotionY -> mInitialMotionY
    float mLastMotionY -> mLastMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
android.support.v7.app.ActionBar$Callback -> android.support.v7.app.a:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.b:
    boolean onNavigationItemSelected(int,long) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.c:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mImpl -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> a
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    void superSetContentView(int) -> a
    void superSetContentView(android.view.View) -> a
    void superSetContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void superAddContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> a
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean superOnMenuItemSelected(int,android.view.MenuItem) -> a
    void onBackPressed() -> onBackPressed
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> b
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> c
android.support.v7.app.ActionBarActivityDelegate -> android.support.v7.app.d:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> d
    android.view.MenuInflater mMenuInflater -> e
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    boolean mEnableDefaultActionBarUp -> f
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> c
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> f
    android.view.View onCreatePanelView(int) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onBackPressed() -> g
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> h
    int getHomeAsUpIndicatorAttrId() -> i
    void onContentChanged() -> j
    java.lang.String getUiOptionsFromMetadata() -> k
    android.content.Context getActionBarThemedContext() -> l
android.support.v7.app.ActionBarActivityDelegate$1 -> android.support.v7.app.e:
android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl -> android.support.v7.app.f:
    android.support.v7.app.ActionBarActivityDelegate this$0 -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarActivityDelegateApi20 -> android.support.v7.app.g:
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
android.support.v7.app.ActionBarActivityDelegateApi20$WindowCallbackWrapperApi20 -> android.support.v7.app.h:
    android.support.v7.app.ActionBarActivityDelegateApi20 this$0 -> a
android.support.v7.app.ActionBarActivityDelegateBase -> android.support.v7.app.i:
    int[] ACTION_BAR_DRAWABLE_TOGGLE_ATTRS -> d
    android.support.v7.internal.widget.ActionBarView mActionBarView -> e
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    android.support.v7.view.ActionMode mActionMode -> h
    boolean mSubDecorInstalled -> i
    java.lang.CharSequence mTitleToSet -> j
    boolean mFeatureProgress -> k
    boolean mFeatureIndeterminateProgress -> l
    boolean mClosingActionMenu -> m
    boolean mPanelIsPrepared -> n
    boolean mPanelRefreshContent -> o
    android.os.Bundle mPanelFrozenActionViewState -> p
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> j
    void ensureSubDecor() -> m
    void applyFixedSizeWindow() -> n
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void supportInvalidateOptionsMenu() -> f
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> b
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.content.Context,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onBackPressed() -> g
    int getHomeAsUpIndicatorAttrId() -> i
    boolean initializePanelMenu() -> o
    boolean preparePanel() -> p
android.support.v7.app.ActionBarActivityDelegateBase$1 -> android.support.v7.app.j:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateHC -> android.support.v7.app.k:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarActivityDelegateICS -> android.support.v7.app.l:
    android.view.Menu mMenu -> d
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> j
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    void onTitleChanged(java.lang.CharSequence) -> a
    void onActionModeStarted(android.view.ActionMode) -> a
    void onActionModeFinished(android.view.ActionMode) -> b
    void supportInvalidateOptionsMenu() -> f
    boolean onBackPressed() -> g
    int getHomeAsUpIndicatorAttrId() -> i
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper -> android.support.v7.app.m:
    android.view.Window$Callback mWrapped -> b
    android.support.v7.app.ActionBarActivityDelegateICS this$0 -> c
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.app.ActionBarActivityDelegateJB -> android.support.v7.app.n:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateJBMR2 -> android.support.v7.app.o:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarImplBase -> android.support.v7.app.p:
    android.content.Context mContext -> b
    android.content.Context mThemedContext -> c
    android.support.v7.app.ActionBarActivity mActivity -> d
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> e
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> f
    android.view.ViewGroup mTopVisibilityView -> g
    android.support.v7.internal.widget.ActionBarView mActionView -> h
    android.support.v7.internal.widget.ActionBarContextView mContextView -> i
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> j
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> k
    java.util.ArrayList mTabs -> l
    int mSavedTabPosition -> m
    boolean mDisplayHomeAsUpSet -> n
    java.util.ArrayList mMenuVisibilityListeners -> o
    int mContextDisplayMode -> p
    boolean mHasEmbeddedTabs -> q
    android.os.Handler mHandler -> a
    int mCurWindowVisibility -> r
    boolean mHiddenByApp -> s
    boolean mHiddenBySystem -> t
    boolean mShowingForMode -> u
    boolean mNowShowing -> v
    boolean mShowHideAnimationEnabled -> w
    android.support.v7.app.ActionBar$Callback mCallback -> x
    void init(android.support.v7.app.ActionBarActivity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> f
    void setTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> c
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void showForActionMode() -> d
    void hideForActionMode() -> e
    boolean checkShowingFlags(boolean,boolean,boolean) -> a
    void updateVisibility(boolean) -> g
    void setShowHideAnimationEnabled(boolean) -> c
    void doShow(boolean) -> d
    void doHide(boolean) -> e
    boolean isShowHideAnimationEnabled() -> f
android.support.v7.app.ActionBarImplHC -> android.support.v7.app.q:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> b
    android.view.ActionMode mCurActionMode -> c
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
    boolean isShowHideAnimationEnabled() -> f
    android.view.ActionMode access$002(android.support.v7.app.ActionBarImplHC,android.view.ActionMode) -> a
android.support.v7.app.ActionBarImplHC$CallbackWrapper -> android.support.v7.app.r:
    android.view.ActionMode$Callback mWrappedCallback -> b
    android.support.v7.app.ActionBarImplHC this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.ActionBarImplICS -> android.support.v7.app.s:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBar$Callback mCallback -> b
    android.app.ActionBar mActionBar -> c
    android.widget.ImageView mHomeActionView -> d
    java.util.ArrayList mAddedMenuVisWrappers -> e
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeButtonEnabled(boolean) -> b
    android.widget.ImageView getHomeActionView() -> c
    android.graphics.drawable.Drawable getThemeDefaultUpIndicator() -> d
android.support.v7.app.ActionBarImplJB -> android.support.v7.app.t:
    void setHomeButtonEnabled(boolean) -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    android.content.Context getThemedContext() -> b
    int getDisplayOptions() -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
android.support.v7.app.ActionBarImplJBMR2 -> android.support.v7.app.u:
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
android.support.v7.appcompat.R -> android.support.v7.a.a:
android.support.v7.appcompat.R$anim -> android.support.v7.a.b:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> android.support.v7.a.c:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowSplitActionBar -> windowSplitActionBar
android.support.v7.appcompat.R$bool -> android.support.v7.a.d:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
android.support.v7.appcompat.R$dimen -> android.support.v7.a.e:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
android.support.v7.appcompat.R$id -> android.support.v7.a.f:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int image1 -> image1
    int listMode -> listMode
    int list_item -> list_item
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
android.support.v7.appcompat.R$integer -> android.support.v7.a.g:
    int abc_max_action_buttons -> abc_max_action_buttons
android.support.v7.appcompat.R$layout -> android.support.v7.a.h:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.a.i:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
android.support.v7.appcompat.R$style -> android.support.v7.a.j:
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_DialogWhenLarge -> Theme_Base_AppCompat_DialogWhenLarge
    int Theme_Base_AppCompat_DialogWhenLarge_Base -> Theme_Base_AppCompat_DialogWhenLarge_Base
    int Theme_Base_AppCompat_Dialog_FixedSize -> Theme_Base_AppCompat_Dialog_FixedSize
    int Theme_Base_AppCompat_Dialog_Light_FixedSize -> Theme_Base_AppCompat_Dialog_Light_FixedSize
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_AppCompat_Light_DialogWhenLarge -> Theme_Base_AppCompat_Light_DialogWhenLarge
    int Theme_Base_AppCompat_Light_DialogWhenLarge_Base -> Theme_Base_AppCompat_Light_DialogWhenLarge_Base
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListPopupWindow -> Widget_AppCompat_Base_ListPopupWindow
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListPopupWindow -> Widget_AppCompat_Light_Base_ListPopupWindow
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
android.support.v7.appcompat.R$styleable -> android.support.v7.a.k:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.a:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ActionModeWrapper -> android.support.v7.internal.view.b:
    android.view.MenuInflater mInflater -> a
    android.view.ActionMode mWrappedObject -> b
    void finish() -> a
android.support.v7.internal.view.ActionModeWrapperJB -> android.support.v7.internal.view.c:
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.d:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.e:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.f:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    boolean mAllowTextWithIcon -> e
    boolean mExpandedFormat -> f
    int mMinWidth -> g
    int mSavedPaddingLeft -> h
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod -> android.support.v7.internal.view.menu.b:
    java.util.Locale mLocale -> b
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.view.menu.ActionMenuPresenter -> android.support.v7.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$202(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$1 -> android.support.v7.internal.view.menu.c:
android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.internal.view.menu.d:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.internal.view.menu.e:
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.internal.view.menu.f:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup -> android.support.v7.internal.view.menu.g:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.internal.view.menu.h:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1 -> android.support.v7.internal.view.menu.i:
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.view.menu.ActionMenuView -> android.support.v7.internal.view.menu.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    boolean mReserveOverflow -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter mPresenter -> c
    boolean mFormatItems -> d
    int mFormatItemsWidth -> e
    int mMinCellSize -> f
    int mGeneratedItemPadding -> g
    int mMeasuredExtraWidth -> h
    int mMaxItemHeight -> i
    void setPresenter(android.support.v7.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView -> android.support.v7.internal.view.menu.j:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuView$LayoutParams -> android.support.v7.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.k:
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> a
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> h
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.l:
    java.util.HashMap mMenuItems -> b
    java.util.HashMap mSubMenus -> c
    android.support.v4.internal.view.SupportMenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.m:
    java.lang.Object mWrappedObject -> a
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    int mAnimations -> b
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.n:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.o:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.p:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> a
    int findGroupIndex(int) -> b
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> c
    boolean isQwertyMode() -> b
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> c
    android.content.res.Resources getResources() -> d
    android.content.Context getContext() -> e
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> f
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> g
    void startDispatchingItemsChanged() -> h
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> i
    void flagActionItems() -> j
    java.util.ArrayList getActionItems() -> k
    java.util.ArrayList getNonActionItems() -> l
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> m
    android.graphics.drawable.Drawable getHeaderIcon() -> n
    android.view.View getHeaderView() -> o
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean getOptionalIconsVisible() -> q
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> r
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.q:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.r:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.s:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> b
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.t:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> g
    boolean shouldShowIcon() -> h
    boolean isActionButton() -> i
    boolean requestsActionButton() -> j
    boolean requiresActionButton() -> k
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> l
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    boolean hasCollapsibleActionView() -> m
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.u:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.v:
    boolean mEmulateProviderVisibilityOverride -> b
    boolean mLastRequestVisible -> c
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> d
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
    boolean checkActionProviderOverrideVisibility() -> b
    android.view.MenuItem wrappedSetVisible(boolean) -> b
    boolean access$000(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.w:
    android.support.v4.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1 -> android.support.v7.internal.view.menu.x:
    android.support.v7.internal.view.menu.MenuItemWrapperICS val$this$0 -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper this$1 -> b
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.y:
    android.support.v7.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.z:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.aa:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.ab:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.ac:
    android.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.ad:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ListPopupWindow mPopup -> e
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setForceShowIcon(boolean) -> a
    boolean tryShow() -> a
    void dismiss() -> b
    void onDismiss() -> onDismiss
    boolean isShowing() -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.ae:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.af:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.ag:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.ah:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.ai:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.aj:
    android.view.Menu createMenuWrapper(android.view.Menu) -> a
    android.view.MenuItem createMenuItemWrapper(android.view.MenuItem) -> a
    android.support.v4.internal.view.SupportSubMenu createSupportSubMenuWrapper(android.view.SubMenu) -> a
    android.support.v4.internal.view.SupportMenuItem createSupportMenuItemWrapper(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.ak:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.al:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> b
    boolean isShortcutsVisible() -> c
    android.view.Menu getParentMenu() -> s
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.am:
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.a:
    android.support.v7.internal.view.menu.ActionMenuView mMenuView -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
android.support.v7.internal.widget.AbsActionBarView$1 -> android.support.v7.internal.widget.b:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
android.support.v7.internal.widget.AbsSpinnerICS -> android.support.v7.internal.widget.AbsSpinnerICS:
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void initAbsSpinner() -> o
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> a
    android.view.View getSelectedView() -> c
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$100(android.support.v7.internal.widget.AbsSpinnerICS,android.view.View,boolean) -> a
android.support.v7.internal.widget.AbsSpinnerICS$1 -> android.support.v7.internal.widget.c:
android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin -> android.support.v7.internal.widget.d:
    android.util.SparseArray mScrapHeap -> b
    android.support.v7.internal.widget.AbsSpinnerICS this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
android.support.v7.internal.widget.AbsSpinnerICS$SavedState -> android.support.v7.internal.widget.AbsSpinnerICS$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerICS$SavedState$1 -> android.support.v7.internal.widget.e:
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.support.v7.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void drawBackgroundDrawable(android.graphics.drawable.Drawable,android.graphics.Canvas) -> a
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    android.widget.LinearLayout mTitleLayout -> k
    android.widget.TextView mTitleView -> l
    android.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    boolean mTitleOptional -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> g
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTitleOptional(boolean) -> setTitleOptional
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    void postShowOverflowMenu() -> b
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    android.support.v7.app.ActionBar mActionBar -> c
    android.graphics.Rect mZeroRect -> d
    int[] mActionBarSizeAttr -> a
    void init(android.content.Context) -> a
    void setActionBar(android.support.v7.app.ActionBar) -> setActionBar
android.support.v7.internal.widget.ActionBarView -> android.support.v7.internal.widget.ActionBarView:
    int mNavigationMode -> i
    int mDisplayOptions -> j
    java.lang.CharSequence mTitle -> k
    java.lang.CharSequence mSubtitle -> l
    android.graphics.drawable.Drawable mIcon -> m
    android.graphics.drawable.Drawable mLogo -> n
    android.content.Context mContext -> o
    android.support.v7.internal.widget.ActionBarView$HomeView mHomeLayout -> p
    android.support.v7.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> q
    android.widget.LinearLayout mTitleLayout -> r
    android.widget.TextView mTitleView -> s
    android.widget.TextView mSubtitleView -> t
    android.view.View mTitleUpView -> u
    android.support.v7.internal.widget.SpinnerICS mSpinner -> v
    android.widget.LinearLayout mListNavLayout -> w
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> x
    android.view.View mCustomNavView -> y
    android.support.v7.internal.widget.ProgressBarICS mProgressView -> z
    android.support.v7.internal.widget.ProgressBarICS mIndeterminateProgressView -> A
    int mProgressBarPadding -> B
    int mItemPadding -> C
    int mTitleStyleRes -> D
    int mSubtitleStyleRes -> E
    int mProgressStyle -> F
    int mIndeterminateProgressStyle -> G
    boolean mUserTitle -> H
    boolean mIncludeTabs -> I
    boolean mIsCollapsable -> J
    boolean mIsCollapsed -> K
    android.support.v7.internal.view.menu.MenuBuilder mOptionsMenu -> L
    android.support.v7.internal.widget.ActionBarContextView mContextView -> M
    android.support.v7.internal.view.menu.ActionMenuItem mLogoNavItem -> N
    android.widget.SpinnerAdapter mSpinnerAdapter -> O
    android.support.v7.app.ActionBar$OnNavigationListener mCallback -> P
    java.lang.Runnable mTabSelector -> Q
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> g
    android.view.Window$Callback mWindowCallback -> h
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(android.support.v7.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> m
    void setContextView(android.support.v7.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> l
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    boolean isOverflowMenuShowing() -> d
    boolean hideOverflowMenu() -> c
    void postShowOverflowMenu() -> b
    boolean showOverflowMenu() -> a
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setContentHeight(int) -> setContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    android.support.v7.app.ActionBar$OnNavigationListener access$000(android.support.v7.internal.widget.ActionBarView) -> a
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(android.support.v7.internal.widget.ActionBarView) -> b
    android.support.v7.internal.view.menu.ActionMenuItem access$200(android.support.v7.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(android.support.v7.internal.widget.ActionBarView) -> d
    android.support.v7.internal.widget.ActionBarView$HomeView access$600(android.support.v7.internal.widget.ActionBarView) -> e
    android.support.v7.internal.widget.ActionBarView$HomeView access$700(android.support.v7.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$800(android.support.v7.internal.widget.ActionBarView) -> g
    android.support.v7.internal.widget.ScrollingTabContainerView access$900(android.support.v7.internal.widget.ActionBarView) -> h
    android.support.v7.internal.widget.SpinnerICS access$1000(android.support.v7.internal.widget.ActionBarView) -> i
    android.view.View access$1100(android.support.v7.internal.widget.ActionBarView) -> j
    int access$1200(android.support.v7.internal.widget.ActionBarView) -> k
    void access$1300(android.support.v7.internal.widget.ActionBarView) -> l
    int access$1400(android.support.v7.internal.widget.ActionBarView) -> m
android.support.v7.internal.widget.ActionBarView$1 -> android.support.v7.internal.widget.f:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.ActionBarView$2 -> android.support.v7.internal.widget.g:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$3 -> android.support.v7.internal.widget.h:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> android.support.v7.internal.widget.i:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.widget.ActionBarView$HomeView -> android.support.v7.internal.widget.ActionBarView$HomeView:
    android.widget.ImageView mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    int mUpIndicatorRes -> d
    android.graphics.drawable.Drawable mDefaultUpIndicator -> e
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setUpIndicator(android.graphics.drawable.Drawable) -> b
    void setUpIndicator(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarView$SavedState -> android.support.v7.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ActionBarView$SavedState$1 -> android.support.v7.internal.widget.j:
    android.support.v7.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.AdapterViewICS -> android.support.v7.internal.widget.k:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mOnItemSelectedListener -> s
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mOnItemClickListener -> t
    boolean mDataChanged -> u
    int mNextSelectedPosition -> v
    long mNextSelectedRowId -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    android.view.View mEmptyView -> b
    int mItemCount -> z
    int mOldItemCount -> A
    int mOldSelectedPosition -> B
    long mOldSelectedRowId -> C
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> D
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    long getSelectedItemId() -> g
    android.view.View getSelectedView() -> c
    boolean isInFilterMode() -> h
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> i
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> j
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> k
    void checkSelectionChanged() -> l
    int findSyncPosition() -> m
    int lookForSelectablePosition(int,boolean) -> a
    void setSelectedPositionInt(int) -> c
    void setNextSelectedPositionInt(int) -> d
    void rememberSyncState() -> n
    void access$000(android.support.v7.internal.widget.AdapterViewICS,android.os.Parcelable) -> a
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewICS) -> a
    void access$200(android.support.v7.internal.widget.AdapterViewICS) -> b
android.support.v7.internal.widget.AdapterViewICS$1 -> android.support.v7.internal.widget.l:
android.support.v7.internal.widget.AdapterViewICS$AdapterDataSetObserver -> android.support.v7.internal.widget.m:
    android.os.Parcelable mInstanceState -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener -> android.support.v7.internal.widget.n:
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListenerWrapper -> android.support.v7.internal.widget.o:
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mWrappedListener -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener -> android.support.v7.internal.widget.p:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier -> android.support.v7.internal.widget.q:
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void run() -> run
android.support.v7.internal.widget.CompatTextView -> android.support.v7.internal.widget.CompatTextView:
android.support.v7.internal.widget.CompatTextView$AllCapsTransformationMethod -> android.support.v7.internal.widget.r:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.widget.LinearLayoutICS -> android.support.v7.internal.widget.LinearLayoutICS:
    android.graphics.drawable.Drawable mDivider -> a
    int mDividerWidth -> b
    int mDividerHeight -> c
    int mShowDividers -> d
    int mDividerPadding -> e
    int getSupportDividerWidth() -> getSupportDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void drawSupportDividersVertical(android.graphics.Canvas) -> a
    void drawSupportDividersHorizontal(android.graphics.Canvas) -> b
    void drawSupportHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawSupportVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasSupportDividerBeforeChildAt(int) -> a
android.support.v7.internal.widget.ListPopupWindow -> android.support.v7.internal.widget.ListPopupWindow:
    android.content.Context mContext -> b
    android.widget.PopupWindow mPopup -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView mDropDownList -> e
    int mDropDownHeight -> f
    int mDropDownWidth -> g
    int mDropDownHorizontalOffset -> h
    int mDropDownVerticalOffset -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mDropDownAlwaysVisible -> k
    boolean mForceIgnoreOutsideTouch -> l
    int mListItemExpandMaximum -> a
    android.view.View mPromptView -> m
    int mPromptPosition -> n
    android.database.DataSetObserver mObserver -> o
    android.view.View mDropDownAnchorView -> p
    android.graphics.drawable.Drawable mDropDownListHighlight -> q
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> r
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> s
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> t
    android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> u
    android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener mScrollListener -> v
    android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider mHideSelector -> w
    java.lang.Runnable mShowDropDownRunnable -> x
    android.os.Handler mHandler -> y
    android.graphics.Rect mTempRect -> z
    boolean mModal -> A
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    android.graphics.drawable.Drawable getBackground() -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> b
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setWidth(int) -> d
    void setContentWidth(int) -> e
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> i
    void setInputMethodMode(int) -> f
    void setSelection(int) -> g
    void clearListSelection() -> e
    boolean isShowing() -> f
    boolean isInputMethodNotNeeded() -> g
    android.widget.ListView getListView() -> h
    int buildDropDown() -> j
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView access$700(android.support.v7.internal.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$800(android.support.v7.internal.widget.ListPopupWindow) -> b
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable access$900(android.support.v7.internal.widget.ListPopupWindow) -> c
    android.os.Handler access$1000(android.support.v7.internal.widget.ListPopupWindow) -> d
android.support.v7.internal.widget.ListPopupWindow$1 -> android.support.v7.internal.widget.s:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$2 -> android.support.v7.internal.widget.t:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.internal.widget.ListPopupWindow$DropDownListView -> android.support.v7.internal.widget.u:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    boolean access$502(android.support.v7.internal.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.internal.widget.v:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.internal.widget.w:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.internal.widget.x:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.internal.widget.y:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.internal.widget.z:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> android.support.v7.internal.widget.aa:
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.ProgressBarICS -> android.support.v7.internal.widget.ProgressBarICS:
    int[] android_R_styleable_ProgressBar -> f
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> g
    int mSecondaryProgress -> h
    int mMax -> i
    int mBehavior -> j
    int mDuration -> k
    boolean mIndeterminate -> l
    boolean mOnlyIndeterminate -> m
    android.view.animation.Transformation mTransformation -> n
    android.view.animation.AlphaAnimation mAnimation -> o
    android.graphics.drawable.Drawable mIndeterminateDrawable -> p
    android.graphics.drawable.Drawable mProgressDrawable -> q
    android.graphics.drawable.Drawable mCurrentDrawable -> r
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> s
    android.view.animation.Interpolator mInterpolator -> t
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable mRefreshProgressRunnable -> u
    long mUiThreadId -> v
    boolean mShouldStartAnimationDrawable -> w
    long mLastDrawTime -> x
    boolean mInDrawing -> y
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void access$000(android.support.v7.internal.widget.ProgressBarICS,int,int,boolean,boolean) -> a
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable access$102(android.support.v7.internal.widget.ProgressBarICS,android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable) -> a
android.support.v7.internal.widget.ProgressBarICS$1 -> android.support.v7.internal.widget.ab:
android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable -> android.support.v7.internal.widget.ac:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    android.support.v7.internal.widget.ProgressBarICS this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
android.support.v7.internal.widget.ProgressBarICS$SavedState -> android.support.v7.internal.widget.ProgressBarICS$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ProgressBarICS$SavedState$1 -> android.support.v7.internal.widget.ad:
    android.support.v7.internal.widget.ProgressBarICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ProgressBarICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> d
    android.widget.LinearLayout mTabLayout -> e
    android.support.v7.internal.widget.SpinnerICS mTabSpinner -> f
    boolean mAllowCollapse -> g
    android.view.LayoutInflater mInflater -> h
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> i
    int mSelectedTabIndex -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.internal.widget.SpinnerICS createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    android.widget.LinearLayout access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.ae:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.af:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.ag:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    android.support.v7.app.ActionBar$Tab mTab -> a
    android.widget.TextView mTextView -> b
    android.widget.ImageView mIconView -> c
    android.view.View mCustomView -> d
    android.support.v7.internal.widget.ScrollingTabContainerView mParent -> e
    void attach(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.internal.widget.SpinnerICS -> android.support.v7.internal.widget.ah:
    android.support.v7.internal.widget.SpinnerICS$SpinnerPopup mPopup -> F
    android.support.v7.internal.widget.SpinnerICS$DropDownAdapter mTempAdapter -> G
    int mDropDownWidth -> E
    int mGravity -> H
    android.graphics.Rect mTempRect -> I
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> e
    void setUpChild(android.view.View) -> c
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$200(android.support.v7.internal.widget.SpinnerICS) -> a
android.support.v7.internal.widget.SpinnerICS$1 -> android.support.v7.internal.widget.ai:
android.support.v7.internal.widget.SpinnerICS$DialogPopup -> android.support.v7.internal.widget.aj:
    android.app.AlertDialog mPopup -> b
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> a
    void dismiss() -> d
    boolean isShowing() -> f
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.widget.SpinnerICS$DropDownAdapter -> android.support.v7.internal.widget.ak:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerICS$DropdownPopup -> android.support.v7.internal.widget.al:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> b
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    android.widget.ListAdapter access$100(android.support.v7.internal.widget.SpinnerICS$DropdownPopup) -> a
android.support.v7.internal.widget.SpinnerICS$DropdownPopup$1 -> android.support.v7.internal.widget.am:
    android.support.v7.internal.widget.SpinnerICS val$this$0 -> a
    android.support.v7.internal.widget.SpinnerICS$DropdownPopup this$1 -> b
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.SpinnerICS$SpinnerPopup -> android.support.v7.internal.widget.an:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> f
    void setPromptText(java.lang.CharSequence) -> a
android.support.v7.view.ActionMode -> android.support.v7.b.a:
    void finish() -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.b.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> b
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> c
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> d
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> e
    android.view.View$OnClickListener mOnSearchClickListener -> f
    boolean mIconifiedByDefault -> g
    boolean mIconified -> h
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> i
    android.view.View mSearchButton -> j
    android.view.View mSubmitButton -> k
    android.view.View mSubmitArea -> l
    android.widget.ImageView mCloseButton -> m
    android.view.View mSearchEditFrame -> n
    android.view.View mVoiceButton -> o
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> p
    android.widget.ImageView mSearchHintIcon -> q
    boolean mSubmitButtonEnabled -> r
    java.lang.CharSequence mQueryHint -> s
    boolean mQueryRefinement -> t
    boolean mClearingFocus -> u
    int mMaxWidth -> v
    boolean mVoiceButtonEnabled -> w
    boolean mExpandedInActionView -> x
    int mCollapsedImeOptions -> y
    android.app.SearchableInfo mSearchable -> z
    android.os.Bundle mAppSearchData -> A
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> B
    java.lang.Runnable mUpdateDrawableStateRunnable -> C
    java.lang.Runnable mReleaseCursorRunnable -> D
    android.content.Intent mVoiceWebSearchIntent -> E
    android.content.Intent mVoiceAppSearchIntent -> F
    java.util.WeakHashMap mOutsideDrawablesCache -> G
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> e
    boolean isSubmitAreaEnabled() -> f
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> g
    void updateCloseButton() -> h
    void postUpdateFocusedState() -> i
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> j
    void updateSearchAutoComplete() -> k
    void updateVoiceButton(boolean) -> c
    void onCloseClicked() -> l
    void onSearchClicked() -> m
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void forceSuggestionQuery() -> n
    boolean isLandscapeMode(android.content.Context) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.a:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.b:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.c:
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.d:
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.e:
    android.app.SearchManager mSearchManager -> a
    android.support.v7.widget.SearchView mSearchView -> b
    android.app.SearchableInfo mSearchable -> c
    android.content.Context mProviderContext -> d
    java.util.WeakHashMap mOutsideDrawablesCache -> e
    boolean mClosed -> f
    int mQueryRefinement -> g
    android.content.res.ColorStateList mUrlColor -> h
    int mText1Col -> i
    int mText2Col -> j
    int mText2UrlCol -> k
    int mIconName1Col -> l
    int mIconName2Col -> m
    int mFlagsCol -> n
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> a
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> b
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> c
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.f:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
cn.jpush.a.a.a -> cn.jpush.a.a.a:
cn.jpush.a.a.aa -> cn.jpush.a.a.aa:
    int a -> a
    cn.jpush.a.a.ad b -> b
    cn.jpush.a.a.ab c -> c
    cn.jpush.a.a.aa e() -> e
    cn.jpush.a.a.z a() -> a
    cn.jpush.a.a.z f() -> f
    cn.jpush.a.a.aa c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.aa a(cn.jpush.a.a.ad) -> a
    cn.jpush.a.a.aa a(cn.jpush.a.a.ab) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.z a(cn.jpush.a.a.aa) -> a
    cn.jpush.a.a.aa b() -> b
cn.jpush.a.a.ab -> cn.jpush.a.a.ab:
    cn.jpush.a.a.ab a -> a
    int b -> b
    cn.jpush.a.a.az c -> c
    cn.jpush.a.a.bb d -> d
    cn.jpush.a.a.aw e -> e
    cn.jpush.a.a.as f -> f
    cn.jpush.a.a.d g -> g
    cn.jpush.a.a.h h -> h
    cn.jpush.a.a.j i -> i
    cn.jpush.a.a.o j -> j
    cn.jpush.a.a.s k -> k
    cn.jpush.a.a.m l -> l
    cn.jpush.a.a.q m -> m
    cn.jpush.a.a.u n -> n
    cn.jpush.a.a.ao o -> o
    cn.jpush.a.a.ak p -> p
    cn.jpush.a.a.aq q -> q
    cn.jpush.a.a.am r -> r
    cn.jpush.a.a.b s -> s
    cn.jpush.a.a.f t -> t
    cn.jpush.a.a.af u -> u
    cn.jpush.a.a.bd v -> v
    byte w -> w
    int x -> x
    cn.jpush.a.a.ab a() -> a
    boolean b() -> b
    cn.jpush.a.a.az d() -> d
    boolean e() -> e
    cn.jpush.a.a.bb f() -> f
    boolean g() -> g
    cn.jpush.a.a.aw h() -> h
    boolean i() -> i
    cn.jpush.a.a.as j() -> j
    boolean k() -> k
    cn.jpush.a.a.d l() -> l
    boolean m() -> m
    cn.jpush.a.a.h n() -> n
    boolean o() -> o
    cn.jpush.a.a.j p() -> p
    boolean q() -> q
    cn.jpush.a.a.o r() -> r
    boolean s() -> s
    cn.jpush.a.a.s t() -> t
    boolean u() -> u
    cn.jpush.a.a.m v() -> v
    boolean w() -> w
    cn.jpush.a.a.q x() -> x
    boolean y() -> y
    cn.jpush.a.a.u z() -> z
    boolean A() -> A
    cn.jpush.a.a.ao B() -> B
    boolean C() -> C
    cn.jpush.a.a.ak D() -> D
    boolean E() -> E
    cn.jpush.a.a.aq F() -> F
    boolean G() -> G
    cn.jpush.a.a.am H() -> H
    boolean I() -> I
    cn.jpush.a.a.b J() -> J
    boolean K() -> K
    cn.jpush.a.a.f L() -> L
    boolean M() -> M
    cn.jpush.a.a.af N() -> N
    boolean O() -> O
    cn.jpush.a.a.bd P() -> P
    boolean Q() -> Q
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ac R() -> R
    cn.jpush.a.a.ac a(cn.jpush.a.a.ab) -> a
    cn.jpush.a.a.az a(cn.jpush.a.a.ab,cn.jpush.a.a.az) -> a
    cn.jpush.a.a.bb a(cn.jpush.a.a.ab,cn.jpush.a.a.bb) -> a
    cn.jpush.a.a.aw a(cn.jpush.a.a.ab,cn.jpush.a.a.aw) -> a
    cn.jpush.a.a.as a(cn.jpush.a.a.ab,cn.jpush.a.a.as) -> a
    cn.jpush.a.a.d a(cn.jpush.a.a.ab,cn.jpush.a.a.d) -> a
    cn.jpush.a.a.h a(cn.jpush.a.a.ab,cn.jpush.a.a.h) -> a
    cn.jpush.a.a.j a(cn.jpush.a.a.ab,cn.jpush.a.a.j) -> a
    cn.jpush.a.a.o a(cn.jpush.a.a.ab,cn.jpush.a.a.o) -> a
    cn.jpush.a.a.s a(cn.jpush.a.a.ab,cn.jpush.a.a.s) -> a
    cn.jpush.a.a.m a(cn.jpush.a.a.ab,cn.jpush.a.a.m) -> a
    cn.jpush.a.a.q a(cn.jpush.a.a.ab,cn.jpush.a.a.q) -> a
    cn.jpush.a.a.u a(cn.jpush.a.a.ab,cn.jpush.a.a.u) -> a
    cn.jpush.a.a.ao a(cn.jpush.a.a.ab,cn.jpush.a.a.ao) -> a
    cn.jpush.a.a.ak a(cn.jpush.a.a.ab,cn.jpush.a.a.ak) -> a
    cn.jpush.a.a.aq a(cn.jpush.a.a.ab,cn.jpush.a.a.aq) -> a
    cn.jpush.a.a.am a(cn.jpush.a.a.ab,cn.jpush.a.a.am) -> a
    cn.jpush.a.a.b a(cn.jpush.a.a.ab,cn.jpush.a.a.b) -> a
    cn.jpush.a.a.f a(cn.jpush.a.a.ab,cn.jpush.a.a.f) -> a
    cn.jpush.a.a.af a(cn.jpush.a.a.ab,cn.jpush.a.a.af) -> a
    cn.jpush.a.a.bd a(cn.jpush.a.a.ab,cn.jpush.a.a.bd) -> a
    int a(cn.jpush.a.a.ab,int) -> a
cn.jpush.a.a.ac -> cn.jpush.a.a.ac:
    int a -> a
    cn.jpush.a.a.az b -> b
    cn.jpush.a.a.bb c -> c
    cn.jpush.a.a.aw d -> d
    cn.jpush.a.a.as e -> e
    cn.jpush.a.a.d f -> f
    cn.jpush.a.a.h g -> g
    cn.jpush.a.a.j h -> h
    cn.jpush.a.a.o i -> i
    cn.jpush.a.a.s j -> j
    cn.jpush.a.a.m k -> k
    cn.jpush.a.a.q l -> l
    cn.jpush.a.a.u m -> m
    cn.jpush.a.a.ao n -> n
    cn.jpush.a.a.ak o -> o
    cn.jpush.a.a.aq p -> p
    cn.jpush.a.a.am q -> q
    cn.jpush.a.a.b r -> r
    cn.jpush.a.a.f s -> s
    cn.jpush.a.a.af t -> t
    cn.jpush.a.a.bd u -> u
    cn.jpush.a.a.ac f() -> f
    cn.jpush.a.a.ab a() -> a
    cn.jpush.a.a.ab b() -> b
    cn.jpush.a.a.ac a(cn.jpush.a.a.ab) -> a
    cn.jpush.a.a.ac c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.ac a(cn.jpush.a.a.az) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.bb) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.aw) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.as) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.d) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.h) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.j) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.o) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.s) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.m) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.q) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.u) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.ao) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.ak) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.aq) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.am) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.b) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.f) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.af) -> a
    cn.jpush.a.a.ac a(cn.jpush.a.a.bd) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ac e() -> e
cn.jpush.a.a.ad -> cn.jpush.a.a.ad:
    cn.jpush.a.a.ad a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.google.protobuf.jpush.c f -> f
    cn.jpush.a.a.x g -> g
    int h -> h
    byte i -> i
    int j -> j
    cn.jpush.a.a.ad a() -> a
    boolean b() -> b
    int d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    com.google.protobuf.jpush.c j() -> j
    boolean k() -> k
    cn.jpush.a.a.x l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ae p() -> p
    cn.jpush.a.a.ae a(cn.jpush.a.a.ad) -> a
    int a(cn.jpush.a.a.ad,int) -> a
    int b(cn.jpush.a.a.ad,int) -> b
    long a(cn.jpush.a.a.ad,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.ad,com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.x a(cn.jpush.a.a.ad,cn.jpush.a.a.x) -> a
    int c(cn.jpush.a.a.ad,int) -> c
    int d(cn.jpush.a.a.ad,int) -> d
cn.jpush.a.a.ae -> cn.jpush.a.a.ae:
    int a -> a
    int b -> b
    int c -> c
    long d -> d
    com.google.protobuf.jpush.c e -> e
    cn.jpush.a.a.x f -> f
    int g -> g
    cn.jpush.a.a.ae f() -> f
    cn.jpush.a.a.ad a() -> a
    cn.jpush.a.a.ad b() -> b
    cn.jpush.a.a.ae a(cn.jpush.a.a.ad) -> a
    cn.jpush.a.a.ae c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.ae a(int) -> a
    cn.jpush.a.a.ae b(int) -> b
    cn.jpush.a.a.ae a(long) -> a
    cn.jpush.a.a.ae a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ae e() -> e
cn.jpush.a.a.af -> cn.jpush.a.a.af:
    cn.jpush.a.a.af a -> a
    int b -> b
    int c -> c
    com.google.protobuf.jpush.c d -> d
    byte e -> e
    int f -> f
    cn.jpush.a.a.af a() -> a
    boolean b() -> b
    int d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ag g() -> g
    cn.jpush.a.a.ag a(cn.jpush.a.a.af) -> a
    int a(cn.jpush.a.a.af,int) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.af,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.a.a.af,int) -> b
cn.jpush.a.a.ag -> cn.jpush.a.a.ag:
    int a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    cn.jpush.a.a.ag e() -> e
    cn.jpush.a.a.af a() -> a
    cn.jpush.a.a.ag a(cn.jpush.a.a.af) -> a
    cn.jpush.a.a.ag c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ag b() -> b
cn.jpush.a.a.ah -> cn.jpush.a.a.ah:
cn.jpush.a.a.ai -> cn.jpush.a.a.ai:
    cn.jpush.a.a.ai a -> a
    int b -> b
    long c -> c
    long d -> d
    long e -> e
    int f -> f
    cn.jpush.a.a.au g -> g
    int h -> h
    int i -> i
    byte j -> j
    int k -> k
    cn.jpush.a.a.ai a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    long f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    int j() -> j
    boolean k() -> k
    cn.jpush.a.a.au l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    int p() -> p
    boolean q() -> q
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.aj r() -> r
    long a(cn.jpush.a.a.ai,long) -> a
    long b(cn.jpush.a.a.ai,long) -> b
    long c(cn.jpush.a.a.ai,long) -> c
    int a(cn.jpush.a.a.ai,int) -> a
    cn.jpush.a.a.au a(cn.jpush.a.a.ai,cn.jpush.a.a.au) -> a
    int b(cn.jpush.a.a.ai,int) -> b
    int c(cn.jpush.a.a.ai,int) -> c
    int d(cn.jpush.a.a.ai,int) -> d
cn.jpush.a.a.aj -> cn.jpush.a.a.aj:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
    cn.jpush.a.a.au f -> f
    int g -> g
    int h -> h
    cn.jpush.a.a.aj f() -> f
    cn.jpush.a.a.ai a() -> a
    cn.jpush.a.a.ai b() -> b
    cn.jpush.a.a.aj c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.aj a(long) -> a
    cn.jpush.a.a.aj b(long) -> b
    cn.jpush.a.a.aj c(long) -> c
    cn.jpush.a.a.aj a(int) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.aj e() -> e
cn.jpush.a.a.ak -> cn.jpush.a.a.ak:
    cn.jpush.a.a.ak a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.a.a.ak a() -> a
    java.util.List b() -> b
    boolean d() -> d
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.al e() -> e
    cn.jpush.a.a.al a(cn.jpush.a.a.ak) -> a
    java.util.List a(cn.jpush.a.a.ak,java.util.List) -> a
    java.util.List b(cn.jpush.a.a.ak) -> b
cn.jpush.a.a.al -> cn.jpush.a.a.al:
    int a -> a
    java.util.List b -> b
    cn.jpush.a.a.al f() -> f
    cn.jpush.a.a.ak a() -> a
    cn.jpush.a.a.ak b() -> b
    cn.jpush.a.a.al a(cn.jpush.a.a.ak) -> a
    cn.jpush.a.a.al c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.a.a.al a(cn.jpush.a.a.ai) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.al e() -> e
cn.jpush.a.a.am -> cn.jpush.a.a.am:
    cn.jpush.a.a.am a -> a
    int b -> b
    long c -> c
    int d -> d
    int e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.am a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    int h() -> h
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.an i() -> i
    cn.jpush.a.a.an a(cn.jpush.a.a.am) -> a
    long a(cn.jpush.a.a.am,long) -> a
    int a(cn.jpush.a.a.am,int) -> a
    int b(cn.jpush.a.a.am,int) -> b
    int c(cn.jpush.a.a.am,int) -> c
cn.jpush.a.a.an -> cn.jpush.a.a.an:
    int a -> a
    long b -> b
    int c -> c
    int d -> d
    cn.jpush.a.a.an e() -> e
    cn.jpush.a.a.am a() -> a
    cn.jpush.a.a.an a(cn.jpush.a.a.am) -> a
    cn.jpush.a.a.an c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.an b() -> b
cn.jpush.a.a.ao -> cn.jpush.a.a.ao:
    cn.jpush.a.a.ao a -> a
    int b -> b
    long c -> c
    int d -> d
    long e -> e
    long f -> f
    java.util.List g -> g
    com.google.protobuf.jpush.c h -> h
    int i -> i
    int j -> j
    int k -> k
    byte l -> l
    int m -> m
    cn.jpush.a.a.ao a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    long j() -> j
    boolean k() -> k
    com.google.protobuf.jpush.c l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    int p() -> p
    boolean q() -> q
    int r() -> r
    boolean s() -> s
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ap t() -> t
    cn.jpush.a.a.ap a(cn.jpush.a.a.ao) -> a
    long a(cn.jpush.a.a.ao,long) -> a
    int a(cn.jpush.a.a.ao,int) -> a
    long b(cn.jpush.a.a.ao,long) -> b
    long c(cn.jpush.a.a.ao,long) -> c
    java.util.List a(cn.jpush.a.a.ao,java.util.List) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.ao,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.a.a.ao,int) -> b
    int c(cn.jpush.a.a.ao,int) -> c
    int d(cn.jpush.a.a.ao,int) -> d
    int e(cn.jpush.a.a.ao,int) -> e
    java.util.List b(cn.jpush.a.a.ao) -> b
cn.jpush.a.a.ap -> cn.jpush.a.a.ap:
    int a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    java.util.List f -> f
    com.google.protobuf.jpush.c g -> g
    int h -> h
    int i -> i
    int j -> j
    cn.jpush.a.a.ap f() -> f
    cn.jpush.a.a.ao a() -> a
    cn.jpush.a.a.ao b() -> b
    cn.jpush.a.a.ap a(cn.jpush.a.a.ao) -> a
    cn.jpush.a.a.ap c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.ap a(long) -> a
    cn.jpush.a.a.ap a(int) -> a
    cn.jpush.a.a.ap b(long) -> b
    cn.jpush.a.a.ap c(long) -> c
    void g() -> g
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ap e() -> e
cn.jpush.a.a.aq -> cn.jpush.a.a.aq:
    cn.jpush.a.a.aq a -> a
    int b -> b
    long c -> c
    int d -> d
    long e -> e
    long f -> f
    com.google.protobuf.jpush.c g -> g
    byte h -> h
    int i -> i
    cn.jpush.a.a.aq a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    long j() -> j
    boolean k() -> k
    com.google.protobuf.jpush.c l() -> l
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ar m() -> m
    cn.jpush.a.a.ar a(cn.jpush.a.a.aq) -> a
    long a(cn.jpush.a.a.aq,long) -> a
    int a(cn.jpush.a.a.aq,int) -> a
    long b(cn.jpush.a.a.aq,long) -> b
    long c(cn.jpush.a.a.aq,long) -> c
    com.google.protobuf.jpush.c a(cn.jpush.a.a.aq,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.a.a.aq,int) -> b
cn.jpush.a.a.ar -> cn.jpush.a.a.ar:
    int a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    com.google.protobuf.jpush.c f -> f
    cn.jpush.a.a.ar e() -> e
    cn.jpush.a.a.aq a() -> a
    cn.jpush.a.a.ar a(cn.jpush.a.a.aq) -> a
    cn.jpush.a.a.ar c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ar b() -> b
cn.jpush.a.a.as -> cn.jpush.a.a.as:
    cn.jpush.a.a.as a -> a
    int b -> b
    long c -> c
    cn.jpush.a.a.au d -> d
    long e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.as a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    cn.jpush.a.a.au f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.at j() -> j
    cn.jpush.a.a.at a(cn.jpush.a.a.as) -> a
    long a(cn.jpush.a.a.as,long) -> a
    cn.jpush.a.a.au a(cn.jpush.a.a.as,cn.jpush.a.a.au) -> a
    long b(cn.jpush.a.a.as,long) -> b
    int a(cn.jpush.a.a.as,int) -> a
cn.jpush.a.a.at -> cn.jpush.a.a.at:
    int a -> a
    long b -> b
    cn.jpush.a.a.au c -> c
    long d -> d
    cn.jpush.a.a.at f() -> f
    cn.jpush.a.a.as a() -> a
    cn.jpush.a.a.as b() -> b
    cn.jpush.a.a.at a(cn.jpush.a.a.as) -> a
    cn.jpush.a.a.at c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.at a(long) -> a
    cn.jpush.a.a.at a(cn.jpush.a.a.au) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.at e() -> e
cn.jpush.a.a.au -> cn.jpush.a.a.au:
    cn.jpush.a.a.au a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.au a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.av j() -> j
    cn.jpush.a.a.av a(cn.jpush.a.a.au) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.au,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.au,com.google.protobuf.jpush.c) -> b
    com.google.protobuf.jpush.c c(cn.jpush.a.a.au,com.google.protobuf.jpush.c) -> c
    int a(cn.jpush.a.a.au,int) -> a
cn.jpush.a.a.av -> cn.jpush.a.a.av:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    cn.jpush.a.a.av f() -> f
    cn.jpush.a.a.au a() -> a
    cn.jpush.a.a.au b() -> b
    cn.jpush.a.a.av a(cn.jpush.a.a.au) -> a
    cn.jpush.a.a.av c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.av a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.av e() -> e
cn.jpush.a.a.aw -> cn.jpush.a.a.aw:
    cn.jpush.a.a.aw a -> a
    int b -> b
    long c -> c
    cn.jpush.a.a.au d -> d
    long e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.aw a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    cn.jpush.a.a.au f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ax j() -> j
    cn.jpush.a.a.ax a(cn.jpush.a.a.aw) -> a
    long a(cn.jpush.a.a.aw,long) -> a
    cn.jpush.a.a.au a(cn.jpush.a.a.aw,cn.jpush.a.a.au) -> a
    long b(cn.jpush.a.a.aw,long) -> b
    int a(cn.jpush.a.a.aw,int) -> a
cn.jpush.a.a.ax -> cn.jpush.a.a.ax:
    int a -> a
    long b -> b
    cn.jpush.a.a.au c -> c
    long d -> d
    cn.jpush.a.a.ax f() -> f
    cn.jpush.a.a.aw a() -> a
    cn.jpush.a.a.aw b() -> b
    cn.jpush.a.a.ax a(cn.jpush.a.a.aw) -> a
    cn.jpush.a.a.ax c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.ax a(long) -> a
    cn.jpush.a.a.ax a(cn.jpush.a.a.au) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ax e() -> e
cn.jpush.a.a.ay -> cn.jpush.a.a.ay:
cn.jpush.a.a.az -> cn.jpush.a.a.az:
    cn.jpush.a.a.az a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    int e -> e
    com.google.protobuf.jpush.c f -> f
    byte g -> g
    int h -> h
    cn.jpush.a.a.az a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    int h() -> h
    boolean i() -> i
    com.google.protobuf.jpush.c j() -> j
    boolean k() -> k
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.ba l() -> l
    cn.jpush.a.a.ba a(cn.jpush.a.a.az) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.az,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.az,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.a.a.az,int) -> a
    com.google.protobuf.jpush.c c(cn.jpush.a.a.az,com.google.protobuf.jpush.c) -> c
    int b(cn.jpush.a.a.az,int) -> b
cn.jpush.a.a.b -> cn.jpush.a.a.b:
    cn.jpush.a.a.b a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.a.a.b a() -> a
    boolean b() -> b
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.c d() -> d
    cn.jpush.a.a.c a(cn.jpush.a.a.b) -> a
    java.util.List a(cn.jpush.a.a.b,java.util.List) -> a
    java.util.List b(cn.jpush.a.a.b) -> b
cn.jpush.a.a.ba -> cn.jpush.a.a.ba:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    int d -> d
    com.google.protobuf.jpush.c e -> e
    cn.jpush.a.a.ba f() -> f
    cn.jpush.a.a.az a() -> a
    cn.jpush.a.a.az b() -> b
    cn.jpush.a.a.ba a(cn.jpush.a.a.az) -> a
    cn.jpush.a.a.ba c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.ba a(com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.ba b(com.google.protobuf.jpush.c) -> b
    cn.jpush.a.a.ba a(int) -> a
    cn.jpush.a.a.ba c(com.google.protobuf.jpush.c) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.ba e() -> e
cn.jpush.a.a.bb -> cn.jpush.a.a.bb:
    cn.jpush.a.a.bb a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    byte d -> d
    int e -> e
    cn.jpush.a.a.bb a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.bc f() -> f
    cn.jpush.a.a.bc a(cn.jpush.a.a.bb) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.bb,com.google.protobuf.jpush.c) -> a
    int a(cn.jpush.a.a.bb,int) -> a
cn.jpush.a.a.bc -> cn.jpush.a.a.bc:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    cn.jpush.a.a.bc f() -> f
    cn.jpush.a.a.bb a() -> a
    cn.jpush.a.a.bb b() -> b
    cn.jpush.a.a.bc a(cn.jpush.a.a.bb) -> a
    cn.jpush.a.a.bc c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.bc a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.bc e() -> e
cn.jpush.a.a.bd -> cn.jpush.a.a.bd:
    cn.jpush.a.a.bd a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    byte d -> d
    int e -> e
    cn.jpush.a.a.bd a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.be f() -> f
    cn.jpush.a.a.be a(cn.jpush.a.a.bd) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.bd,com.google.protobuf.jpush.c) -> a
    int a(cn.jpush.a.a.bd,int) -> a
cn.jpush.a.a.be -> cn.jpush.a.a.be:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    cn.jpush.a.a.be f() -> f
    cn.jpush.a.a.bd a() -> a
    cn.jpush.a.a.bd b() -> b
    cn.jpush.a.a.be a(cn.jpush.a.a.bd) -> a
    cn.jpush.a.a.be c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.be a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.be e() -> e
cn.jpush.a.a.c -> cn.jpush.a.a.c:
    int a -> a
    java.util.List b -> b
    cn.jpush.a.a.c f() -> f
    cn.jpush.a.a.b a() -> a
    cn.jpush.a.a.b b() -> b
    cn.jpush.a.a.c a(cn.jpush.a.a.b) -> a
    cn.jpush.a.a.c c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.a.a.c a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.c e() -> e
cn.jpush.a.a.d -> cn.jpush.a.a.d:
    cn.jpush.a.a.d a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    int f -> f
    com.google.protobuf.jpush.c g -> g
    byte h -> h
    int i -> i
    cn.jpush.a.a.d a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    int j() -> j
    boolean k() -> k
    com.google.protobuf.jpush.c l() -> l
    boolean m() -> m
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.e n() -> n
    cn.jpush.a.a.e a(cn.jpush.a.a.d) -> a
    long a(cn.jpush.a.a.d,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.d,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.d,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.a.a.d,int) -> a
    com.google.protobuf.jpush.c c(cn.jpush.a.a.d,com.google.protobuf.jpush.c) -> c
    int b(cn.jpush.a.a.d,int) -> b
cn.jpush.a.a.e -> cn.jpush.a.a.e:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    int e -> e
    com.google.protobuf.jpush.c f -> f
    cn.jpush.a.a.e f() -> f
    cn.jpush.a.a.d a() -> a
    cn.jpush.a.a.d b() -> b
    cn.jpush.a.a.e a(cn.jpush.a.a.d) -> a
    cn.jpush.a.a.e c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.e a(long) -> a
    cn.jpush.a.a.e a(com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.e b(com.google.protobuf.jpush.c) -> b
    cn.jpush.a.a.e a(int) -> a
    cn.jpush.a.a.e c(com.google.protobuf.jpush.c) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.e e() -> e
cn.jpush.a.a.f -> cn.jpush.a.a.f:
    cn.jpush.a.a.f a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.a.a.f a() -> a
    boolean b() -> b
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.g d() -> d
    cn.jpush.a.a.g a(cn.jpush.a.a.f) -> a
    java.util.List a(cn.jpush.a.a.f,java.util.List) -> a
    java.util.List b(cn.jpush.a.a.f) -> b
cn.jpush.a.a.g -> cn.jpush.a.a.g:
    int a -> a
    java.util.List b -> b
    cn.jpush.a.a.g f() -> f
    cn.jpush.a.a.f a() -> a
    cn.jpush.a.a.f b() -> b
    cn.jpush.a.a.g a(cn.jpush.a.a.f) -> a
    cn.jpush.a.a.g c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.a.a.g a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.g e() -> e
cn.jpush.a.a.h -> cn.jpush.a.a.h:
    cn.jpush.a.a.h a -> a
    int b -> b
    long c -> c
    byte d -> d
    int e -> e
    cn.jpush.a.a.h a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.i f() -> f
    cn.jpush.a.a.i a(cn.jpush.a.a.h) -> a
    long a(cn.jpush.a.a.h,long) -> a
    int a(cn.jpush.a.a.h,int) -> a
cn.jpush.a.a.i -> cn.jpush.a.a.i:
    int a -> a
    long b -> b
    cn.jpush.a.a.i f() -> f
    cn.jpush.a.a.h a() -> a
    cn.jpush.a.a.h b() -> b
    cn.jpush.a.a.i a(cn.jpush.a.a.h) -> a
    cn.jpush.a.a.i c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.i a(long) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.i e() -> e
cn.jpush.a.a.j -> cn.jpush.a.a.j:
    cn.jpush.a.a.j a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.j a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.k j() -> j
    cn.jpush.a.a.k a(cn.jpush.a.a.j) -> a
    long a(cn.jpush.a.a.j,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.j,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.j,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.a.a.j,int) -> a
cn.jpush.a.a.k -> cn.jpush.a.a.k:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    cn.jpush.a.a.k f() -> f
    cn.jpush.a.a.j a() -> a
    cn.jpush.a.a.j b() -> b
    cn.jpush.a.a.k a(cn.jpush.a.a.j) -> a
    cn.jpush.a.a.k c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.k a(long) -> a
    cn.jpush.a.a.k a(com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.k b(com.google.protobuf.jpush.c) -> b
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.k e() -> e
cn.jpush.a.a.l -> cn.jpush.a.a.l:
cn.jpush.a.a.m -> cn.jpush.a.a.m:
    cn.jpush.a.a.m a -> a
    int b -> b
    long c -> c
    int d -> d
    java.util.List e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.m a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.n h() -> h
    cn.jpush.a.a.n a(cn.jpush.a.a.m) -> a
    long a(cn.jpush.a.a.m,long) -> a
    int a(cn.jpush.a.a.m,int) -> a
    java.util.List a(cn.jpush.a.a.m,java.util.List) -> a
    int b(cn.jpush.a.a.m,int) -> b
    java.util.List b(cn.jpush.a.a.m) -> b
cn.jpush.a.a.n -> cn.jpush.a.a.n:
    int a -> a
    long b -> b
    int c -> c
    java.util.List d -> d
    cn.jpush.a.a.n f() -> f
    cn.jpush.a.a.m a() -> a
    cn.jpush.a.a.m b() -> b
    cn.jpush.a.a.n a(cn.jpush.a.a.m) -> a
    cn.jpush.a.a.n c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.n a(long) -> a
    cn.jpush.a.a.n a(int) -> a
    void g() -> g
    cn.jpush.a.a.n a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.n e() -> e
cn.jpush.a.a.o -> cn.jpush.a.a.o:
    cn.jpush.a.a.o a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    int e -> e
    int f -> f
    long g -> g
    byte h -> h
    int i -> i
    cn.jpush.a.a.o a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    int h() -> h
    boolean i() -> i
    int j() -> j
    boolean k() -> k
    long l() -> l
    boolean m() -> m
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.p n() -> n
    cn.jpush.a.a.p a(cn.jpush.a.a.o) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.o,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.o,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.a.a.o,int) -> a
    int b(cn.jpush.a.a.o,int) -> b
    long a(cn.jpush.a.a.o,long) -> a
    int c(cn.jpush.a.a.o,int) -> c
cn.jpush.a.a.p -> cn.jpush.a.a.p:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    int d -> d
    int e -> e
    long f -> f
    cn.jpush.a.a.p f() -> f
    cn.jpush.a.a.o a() -> a
    cn.jpush.a.a.o b() -> b
    cn.jpush.a.a.p a(cn.jpush.a.a.o) -> a
    cn.jpush.a.a.p c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.p a(com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.p b(com.google.protobuf.jpush.c) -> b
    cn.jpush.a.a.p a(int) -> a
    cn.jpush.a.a.p b(int) -> b
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.p e() -> e
cn.jpush.a.a.q -> cn.jpush.a.a.q:
    cn.jpush.a.a.q a -> a
    int b -> b
    long c -> c
    int d -> d
    java.util.List e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.q a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.r h() -> h
    cn.jpush.a.a.r a(cn.jpush.a.a.q) -> a
    long a(cn.jpush.a.a.q,long) -> a
    int a(cn.jpush.a.a.q,int) -> a
    java.util.List a(cn.jpush.a.a.q,java.util.List) -> a
    int b(cn.jpush.a.a.q,int) -> b
    java.util.List b(cn.jpush.a.a.q) -> b
cn.jpush.a.a.r -> cn.jpush.a.a.r:
    int a -> a
    long b -> b
    int c -> c
    java.util.List d -> d
    cn.jpush.a.a.r f() -> f
    cn.jpush.a.a.q a() -> a
    cn.jpush.a.a.q b() -> b
    cn.jpush.a.a.r a(cn.jpush.a.a.q) -> a
    cn.jpush.a.a.r c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.r a(long) -> a
    cn.jpush.a.a.r a(int) -> a
    void g() -> g
    cn.jpush.a.a.r a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.r e() -> e
cn.jpush.a.a.s -> cn.jpush.a.a.s:
    cn.jpush.a.a.s a -> a
    int b -> b
    long c -> c
    byte d -> d
    int e -> e
    cn.jpush.a.a.s a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.t f() -> f
    cn.jpush.a.a.t a(cn.jpush.a.a.s) -> a
    long a(cn.jpush.a.a.s,long) -> a
    int a(cn.jpush.a.a.s,int) -> a
cn.jpush.a.a.t -> cn.jpush.a.a.t:
    int a -> a
    long b -> b
    cn.jpush.a.a.t f() -> f
    cn.jpush.a.a.s a() -> a
    cn.jpush.a.a.s b() -> b
    cn.jpush.a.a.t a(cn.jpush.a.a.s) -> a
    cn.jpush.a.a.t c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.t a(long) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.t e() -> e
cn.jpush.a.a.u -> cn.jpush.a.a.u:
    cn.jpush.a.a.u a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    byte f -> f
    int g -> g
    cn.jpush.a.a.u a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.v j() -> j
    cn.jpush.a.a.v a(cn.jpush.a.a.u) -> a
    long a(cn.jpush.a.a.u,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.a.a.u,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.a.a.u,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.a.a.u,int) -> a
cn.jpush.a.a.v -> cn.jpush.a.a.v:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    cn.jpush.a.a.v f() -> f
    cn.jpush.a.a.u a() -> a
    cn.jpush.a.a.u b() -> b
    cn.jpush.a.a.v a(cn.jpush.a.a.u) -> a
    cn.jpush.a.a.v c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.a.a.v a(long) -> a
    cn.jpush.a.a.v a(com.google.protobuf.jpush.c) -> a
    cn.jpush.a.a.v b(com.google.protobuf.jpush.c) -> b
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.v e() -> e
cn.jpush.a.a.w -> cn.jpush.a.a.w:
cn.jpush.a.a.x -> cn.jpush.a.a.x:
    cn.jpush.a.a.x a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.a.a.x a() -> a
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.y b() -> b
    cn.jpush.a.a.y a(cn.jpush.a.a.x) -> a
    java.util.List a(cn.jpush.a.a.x,java.util.List) -> a
    java.util.List b(cn.jpush.a.a.x) -> b
cn.jpush.a.a.y -> cn.jpush.a.a.y:
    int a -> a
    java.util.List b -> b
    cn.jpush.a.a.y e() -> e
    cn.jpush.a.a.x a() -> a
    cn.jpush.a.a.y a(cn.jpush.a.a.x) -> a
    cn.jpush.a.a.y c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void f() -> f
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.a.a.y b() -> b
cn.jpush.a.a.z -> cn.jpush.a.a.z:
    cn.jpush.a.a.z a -> a
    int b -> b
    cn.jpush.a.a.ad c -> c
    cn.jpush.a.a.ab d -> d
    byte e -> e
    int f -> f
    cn.jpush.a.a.z a() -> a
    boolean b() -> b
    cn.jpush.a.a.ad d() -> d
    boolean e() -> e
    cn.jpush.a.a.ab f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.a.a.z a(byte[]) -> a
    cn.jpush.a.a.aa h() -> h
    cn.jpush.a.a.ad a(cn.jpush.a.a.z,cn.jpush.a.a.ad) -> a
    cn.jpush.a.a.ab a(cn.jpush.a.a.z,cn.jpush.a.a.ab) -> a
    int a(cn.jpush.a.a.z,int) -> a
cn.jpush.android.a -> cn.jpush.android.a:
    java.lang.String[] z -> z
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    long d() -> d
    java.lang.String e() -> e
    void a(java.lang.String) -> a
    int f() -> f
    void a(int) -> a
    boolean g() -> g
    void h() -> h
    boolean b(java.lang.String) -> b
    cn.jpush.android.service.a a(android.content.Context) -> a
    void a(android.content.Context,cn.jpush.android.service.a) -> a
    int i() -> i
    void b(int) -> b
    long j() -> j
    void a(long) -> a
    long k() -> k
    boolean l() -> l
    void a(boolean) -> a
    int m() -> m
    void n() -> n
    java.lang.String o() -> o
    void c(java.lang.String) -> c
    int p() -> p
    void c(int) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String q() -> q
    void f(java.lang.String) -> f
    long r() -> r
    void b(long) -> b
    long s() -> s
    void a(java.lang.Long) -> a
    void a(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean t() -> t
    void u() -> u
    java.lang.String v() -> v
    void o(java.lang.String) -> o
    java.lang.String w() -> w
    void p(java.lang.String) -> p
    java.lang.String x() -> x
    java.lang.String y() -> y
    void g(java.lang.String) -> g
    java.lang.String z() -> z
    void h(java.lang.String) -> h
    java.lang.String A() -> A
    void i(java.lang.String) -> i
    boolean B() -> B
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.lang.String C() -> C
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    java.lang.String D() -> D
    void a(android.content.Context,int) -> a
    int b(android.content.Context) -> b
    void b(android.content.Context,int) -> b
    int c(android.content.Context) -> c
    void a(android.content.Context,boolean) -> a
    boolean d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    void b(android.content.Context,java.lang.String) -> b
    void b(android.content.Context,boolean) -> b
    boolean g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    void c(android.content.Context,java.lang.String) -> c
    java.lang.String i(android.content.Context) -> i
    void d(android.content.Context,java.lang.String) -> d
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String e(android.content.Context,java.lang.String) -> e
    void c(android.content.Context,int) -> c
    void j(android.content.Context) -> j
cn.jpush.android.a.a -> cn.jpush.android.a.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    double f -> f
    double g -> g
    java.lang.String z -> z
    int a() -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.json.JSONArray b() -> b
cn.jpush.android.a.b -> cn.jpush.android.a.b:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    double g -> g
    android.telephony.PhoneStateListener h -> h
    double i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    android.telephony.TelephonyManager n -> n
    java.lang.String o -> o
    java.util.ArrayList p -> p
    android.content.Context q -> q
    java.lang.String[] z -> z
    int a() -> a
    org.json.JSONArray b() -> b
    java.lang.String h() -> h
    org.json.JSONArray c() -> c
    int[] d() -> d
    boolean e() -> e
    boolean f() -> f
    float g() -> g
    int a(cn.jpush.android.a.b,int) -> a
cn.jpush.android.a.c -> cn.jpush.android.a.c:
    cn.jpush.android.a.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
cn.jpush.android.a.d -> cn.jpush.android.a.d:
    java.lang.String a -> a
    boolean e -> e
    int b -> b
    boolean c -> c
    boolean f -> f
    int g -> g
    cn.jpush.android.a.b h -> h
    cn.jpush.android.a.g i -> i
    android.content.Context j -> j
    boolean d -> d
    int[] k -> k
    cn.jpush.android.a.f l -> l
    boolean m -> m
    android.content.BroadcastReceiver n -> n
    long o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    cn.jpush.android.a.j s -> s
    int t -> t
    java.util.Date u -> u
    org.json.JSONArray v -> v
    boolean w -> w
    boolean x -> x
    boolean y -> y
    java.lang.String z -> z
    org.json.JSONArray A -> A
    java.lang.String[] B -> B
    java.lang.String a() -> a
    org.json.JSONArray b() -> b
    void a(org.json.JSONArray) -> a
    org.json.JSONArray c() -> c
    void b(org.json.JSONArray) -> b
    void d() -> d
    void e() -> e
    void f() -> f
    boolean a(android.content.Context) -> a
    void g() -> g
    android.content.Context a(cn.jpush.android.a.d) -> a
    cn.jpush.android.a.b b(cn.jpush.android.a.d) -> b
    cn.jpush.android.a.f c(cn.jpush.android.a.d) -> c
    int d(cn.jpush.android.a.d) -> d
    int a(cn.jpush.android.a.d,int) -> a
    cn.jpush.android.a.j e(cn.jpush.android.a.d) -> e
    void a(cn.jpush.android.a.d,java.lang.Object) -> a
    boolean f(cn.jpush.android.a.d) -> f
    int g(cn.jpush.android.a.d) -> g
    int[] h(cn.jpush.android.a.d) -> h
    boolean i(cn.jpush.android.a.d) -> i
    boolean a(cn.jpush.android.a.d,android.content.Context) -> a
    org.json.JSONArray a(cn.jpush.android.a.d,org.json.JSONArray) -> a
    android.content.BroadcastReceiver j(cn.jpush.android.a.d) -> j
    long k(cn.jpush.android.a.d) -> k
    boolean l(cn.jpush.android.a.d) -> l
    boolean a(cn.jpush.android.a.d,boolean) -> a
cn.jpush.android.a.e -> cn.jpush.android.a.e:
    cn.jpush.android.a.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.a.f -> cn.jpush.android.a.f:
    float b -> b
    org.json.JSONArray c -> c
    cn.jpush.android.a.d a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.a.g -> cn.jpush.android.a.g:
    android.content.Context c -> c
    android.location.LocationManager d -> d
    android.location.Location e -> e
    java.lang.String f -> f
    double a -> a
    double b -> b
    long g -> g
    android.location.LocationListener h -> h
    java.lang.String[] z -> z
    boolean a() -> a
    void b() -> b
    void a(android.location.Location) -> a
    void c() -> c
    java.lang.String d() -> d
    long e() -> e
    void a(cn.jpush.android.a.g,android.location.Location) -> a
cn.jpush.android.a.h -> cn.jpush.android.a.h:
    cn.jpush.android.a.g a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
cn.jpush.android.a.i -> cn.jpush.android.a.i:
    android.content.Context e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String[] B -> B
    boolean a(org.json.JSONArray,org.json.JSONArray,java.lang.String) -> a
    void d() -> d
cn.jpush.android.a.j -> cn.jpush.android.a.j:
    android.net.wifi.WifiManager a -> a
    android.content.Context b -> b
    java.lang.String[] z -> z
    java.util.List d() -> d
    boolean a() -> a
    android.net.wifi.WifiManager b() -> b
    org.json.JSONArray c() -> c
cn.jpush.android.a.k -> cn.jpush.android.a.k:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    cn.jpush.android.a.j d -> d
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.json.JSONObject a() -> a
    int compareTo(java.lang.Object) -> compareTo
cn.jpush.android.api.BasicPushNotificationBuilder -> cn.jpush.android.api.BasicPushNotificationBuilder:
    int notificationDefaults -> notificationDefaults
    int notificationFlags -> notificationFlags
    int statusBarDrawable -> statusBarDrawable
    java.lang.String developerArg0 -> developerArg0
    android.content.Context a -> a
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(android.app.Notification) -> a
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
    cn.jpush.android.api.PushNotificationBuilder a(java.lang.String) -> a
cn.jpush.android.api.CustomPushNotificationBuilder -> cn.jpush.android.api.CustomPushNotificationBuilder:
    int layout -> layout
    int layoutIconId -> layoutIconId
    int layoutTitleId -> layoutTitleId
    int layoutContentId -> layoutContentId
    int layoutIconDrawable -> layoutIconDrawable
    java.lang.String[] z -> z
    android.widget.RemoteViews b(java.lang.String) -> b
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
cn.jpush.android.api.DefaultPushNotificationBuilder -> cn.jpush.android.api.DefaultPushNotificationBuilder:
    java.lang.String b -> b
    java.lang.String[] z -> z
    java.lang.String a() -> a
    android.widget.RemoteViews b(java.lang.String) -> b
    void a(android.app.Notification) -> a
    android.app.Notification a(java.lang.String,java.util.Map) -> a
cn.jpush.android.api.InstrumentedActivity -> cn.jpush.android.api.InstrumentedActivity:
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
cn.jpush.android.api.InstrumentedListActivity -> cn.jpush.android.api.InstrumentedListActivity:
    void onStart() -> onStart
    void onStop() -> onStop
    void onResume() -> onResume
    void onPause() -> onPause
cn.jpush.android.api.JPushInterface -> cn.jpush.android.api.JPushInterface:
    java.lang.String ACTION_CONNECTION_CHANGE -> ACTION_CONNECTION_CHANGE
    java.lang.String ACTION_REGISTRATION_ID -> ACTION_REGISTRATION_ID
    java.lang.String ACTION_STOPPUSH -> ACTION_STOPPUSH
    java.lang.String ACTION_RESTOREPUSH -> ACTION_RESTOREPUSH
    java.lang.String ACTION_MESSAGE_RECEIVED -> ACTION_MESSAGE_RECEIVED
    java.lang.String ACTION_NOTIFICATION_RECEIVED -> ACTION_NOTIFICATION_RECEIVED
    java.lang.String ACTION_NOTIFICATION_OPENED -> ACTION_NOTIFICATION_OPENED
    java.lang.String ACTION_NOTIFICATION_RECEIVED_PROXY -> ACTION_NOTIFICATION_RECEIVED_PROXY
    java.lang.String ACTION_STATUS -> ACTION_STATUS
    java.lang.String ACTION_ACTIVITY_OPENDED -> ACTION_ACTIVITY_OPENDED
    java.lang.String EXTRA_CONNECTION_CHANGE -> EXTRA_CONNECTION_CHANGE
    java.lang.String EXTRA_REGISTRATION_ID -> EXTRA_REGISTRATION_ID
    java.lang.String EXTRA_APP_KEY -> EXTRA_APP_KEY
    java.lang.String EXTRA_NOTIFICATION_DEVELOPER_ARG0 -> EXTRA_NOTIFICATION_DEVELOPER_ARG0
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_PUSH_ID -> EXTRA_PUSH_ID
    java.lang.String EXTRA_MSG_ID -> EXTRA_MSG_ID
    java.lang.String EXTRA_NOTI_TYPE -> EXTRA_NOTI_TYPE
    java.lang.String EXTRA_ALERT -> EXTRA_ALERT
    java.lang.String EXTRA_MESSAGE -> EXTRA_MESSAGE
    java.lang.String EXTRA_CONTENT_TYPE -> EXTRA_CONTENT_TYPE
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    java.lang.String EXTRA_NOTIFICATION_ID -> EXTRA_NOTIFICATION_ID
    java.lang.String EXTRA_ACTIVITY_PARAM -> EXTRA_ACTIVITY_PARAM
    java.lang.String EXTRA_RICHPUSH_FILE_PATH -> EXTRA_RICHPUSH_FILE_PATH
    java.lang.String EXTRA_RICHPUSH_FILE_TYPE -> EXTRA_RICHPUSH_FILE_TYPE
    java.lang.String EXTRA_RICHPUSH_HTML_PATH -> EXTRA_RICHPUSH_HTML_PATH
    java.lang.String EXTRA_RICHPUSH_HTML_RES -> EXTRA_RICHPUSH_HTML_RES
    java.lang.String EXTRA_STATUS -> EXTRA_STATUS
    java.lang.Integer a -> a
    java.lang.String ACTION_RICHPUSH_CALLBACK -> ACTION_RICHPUSH_CALLBACK
    cn.jpush.android.api.e b -> b
    java.util.concurrent.ConcurrentLinkedQueue c -> c
    java.lang.String[] z -> z
    void init(android.content.Context) -> init
    void resumePush(android.content.Context) -> resumePush
    void stopPush(android.content.Context) -> stopPush
    boolean isPushStopped(android.content.Context) -> isPushStopped
    void setDebugMode(boolean) -> setDebugMode
    void setPushTime(android.content.Context,java.util.Set,int,int) -> setPushTime
    void setSilenceTime(android.content.Context,int,int,int,int) -> setSilenceTime
    java.lang.String getRegistrationID(android.content.Context) -> getRegistrationID
    void a(android.content.Context) -> a
    java.lang.String getUdid(android.content.Context) -> getUdid
    void setLatestNotificationNumber(android.content.Context,int) -> setLatestNotificationNumber
    void setDefaultPushNotificationBuilder(cn.jpush.android.api.BasicPushNotificationBuilder) -> setDefaultPushNotificationBuilder
    void clearAllNotifications(android.content.Context) -> clearAllNotifications
    void clearNotificationById(android.content.Context,int) -> clearNotificationById
    void setPushNotificationBuilder(java.lang.Integer,cn.jpush.android.api.BasicPushNotificationBuilder) -> setPushNotificationBuilder
    boolean a(int) -> a
    cn.jpush.android.api.PushNotificationBuilder b(int) -> b
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set) -> setAliasAndTags
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setAliasAndTags
    void setTags(android.content.Context,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setTags
    void setAlias(android.content.Context,java.lang.String,cn.jpush.android.api.TagAliasCallback) -> setAlias
    java.util.Set filterValidTags(java.util.Set) -> filterValidTags
    void reportNotificationOpened(android.content.Context,java.lang.String) -> reportNotificationOpened
    boolean getConnectionState(android.content.Context) -> getConnectionState
    void onResume(android.content.Context) -> onResume
    void onPause(android.content.Context) -> onPause
    void onFragmentResume(android.content.Context,java.lang.String) -> onFragmentResume
    void onFragmentPause(android.content.Context,java.lang.String) -> onFragmentPause
    void onKillProcess(android.content.Context) -> onKillProcess
    void setStatisticsSessionTimeout(long) -> setStatisticsSessionTimeout
    void setStatisticsEnable(boolean) -> setStatisticsEnable
    void initCrashHandler(android.content.Context) -> initCrashHandler
    void addLocalNotification(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> addLocalNotification
    void removeLocalNotification(android.content.Context,long) -> removeLocalNotification
    void clearLocalNotifications(android.content.Context) -> clearLocalNotifications
    void a(android.content.Context,boolean,java.lang.String) -> a
    java.lang.String a(java.util.Set) -> a
    cn.jpush.android.api.PushNotificationBuilder a(java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback,boolean) -> a
    void requestPermission(android.content.Context) -> requestPermission
cn.jpush.android.api.PushNotificationBuilder -> cn.jpush.android.api.PushNotificationBuilder:
    android.app.Notification a(java.lang.String,java.util.Map) -> a
    java.lang.String a() -> a
cn.jpush.android.api.TagAliasCallback -> cn.jpush.android.api.TagAliasCallback:
    void gotResult(int,java.lang.String,java.util.Set) -> gotResult
cn.jpush.android.api.a -> cn.jpush.android.api.a:
    java.lang.String a -> a
    long b -> b
cn.jpush.android.api.b -> cn.jpush.android.api.b:
    java.lang.String a -> a
    java.util.Set b -> b
    cn.jpush.android.api.TagAliasCallback c -> c
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
cn.jpush.android.api.c -> cn.jpush.android.api.c:
    cn.jpush.android.api.c b -> b
    java.lang.Thread$UncaughtExceptionHandler c -> c
    android.content.Context d -> d
    boolean a -> a
    java.lang.String[] z -> z
    cn.jpush.android.api.c a() -> a
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
    org.json.JSONArray d(android.content.Context) -> d
    void b(android.content.Context) -> b
    org.json.JSONArray a(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String) -> a
    org.json.JSONArray a(android.content.Context,java.lang.Throwable,java.lang.String) -> a
    org.json.JSONArray a(org.json.JSONArray,int) -> a
    org.json.JSONObject c(android.content.Context) -> c
cn.jpush.android.api.d -> cn.jpush.android.api.d:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
cn.jpush.android.api.e -> cn.jpush.android.api.e:
    java.lang.String c -> c
    cn.jpush.android.api.e d -> d
    boolean a -> a
    boolean b -> b
    java.util.concurrent.ExecutorService e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.ArrayList h -> h
    long i -> i
    long j -> j
    long k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    long q -> q
    java.lang.ref.WeakReference r -> r
    org.json.JSONObject s -> s
    java.lang.Object t -> t
    java.lang.String[] z -> z
    void a(long) -> a
    boolean a() -> a
    void a(boolean) -> a
    cn.jpush.android.api.e b() -> b
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    boolean c(android.content.Context,java.lang.String) -> c
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,long) -> a
    org.json.JSONObject d(android.content.Context) -> d
    boolean a(java.lang.String) -> a
    void a(cn.jpush.android.api.e,android.content.Context) -> a
    void b(cn.jpush.android.api.e,android.content.Context) -> b
cn.jpush.android.api.f -> cn.jpush.android.api.f:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.g -> cn.jpush.android.api.g:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.h -> cn.jpush.android.api.h:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.i -> cn.jpush.android.api.i:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.j -> cn.jpush.android.api.j:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.k -> cn.jpush.android.api.k:
    boolean b -> b
    boolean a -> a
    java.lang.String c -> c
    java.util.HashMap d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void a(android.app.Application) -> a
    java.lang.String a(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(boolean) -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c(java.lang.String) -> c
    java.lang.String f() -> f
cn.jpush.android.api.l -> cn.jpush.android.api.l:
    java.lang.String[] z -> z
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
cn.jpush.android.api.m -> cn.jpush.android.api.m:
    java.util.Queue a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context,cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.lang.String) -> a
    android.app.Notification a(android.content.Context,int,android.content.Intent,cn.jpush.android.data.d,boolean,boolean) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void b(android.content.Context,cn.jpush.android.data.d) -> b
    cn.jpush.android.data.d c(android.content.Context,cn.jpush.android.data.d) -> c
    cn.jpush.android.data.d d(android.content.Context,cn.jpush.android.data.d) -> d
    void a(android.content.Context,cn.jpush.android.data.d,boolean,boolean) -> a
    int a(cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.d) -> a
    void a(android.content.Intent,java.util.Map,int) -> a
    int a(java.lang.String,int) -> a
    int b(int) -> b
    int a(int) -> a
    java.util.HashMap a(java.lang.String,java.lang.String[]) -> a
    int c(int) -> c
    void a(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent) -> a
cn.jpush.android.api.n -> cn.jpush.android.api.n:
    android.content.Context a -> a
    cn.jpush.android.data.d b -> b
    void run() -> run
cn.jpush.android.api.o -> cn.jpush.android.api.o:
    cn.jpush.android.api.p a -> a
    int b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    void a(boolean,java.lang.String) -> a
cn.jpush.android.api.p -> cn.jpush.android.api.p:
    android.app.NotificationManager a -> a
    android.app.Notification b -> b
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.api.q -> cn.jpush.android.api.q:
    int b -> b
    int c -> c
    cn.jpush.android.b.a.e a -> a
    void a(android.view.WindowManager,android.webkit.WebView,android.widget.ImageButton) -> a
cn.jpush.android.b -> cn.jpush.android.b:
    void a(int,long,boolean,float,double,java.lang.String) -> a
    int a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    long a(java.lang.String,long) -> a
    void b(java.lang.String,long) -> b
    boolean a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
cn.jpush.android.b.a.a -> cn.jpush.android.b.a.a:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
cn.jpush.android.b.a.b -> cn.jpush.android.b.a.b:
    java.lang.String TAG -> TAG
    java.lang.String z -> z
    void createShortcut(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> createShortcut
    void click(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> click
    void download(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> download
    void startActivityByName(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByName
    void startActivityByIntent(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByIntent
    void triggerNativeAction(android.webkit.WebView,java.lang.String) -> triggerNativeAction
    void startMainActivity(android.webkit.WebView,java.lang.String) -> startMainActivity
    void download(android.webkit.WebView,java.lang.String,java.lang.String) -> download
    void download(android.webkit.WebView,java.lang.String) -> download
    void close(android.webkit.WebView) -> close
    void showToast(android.webkit.WebView,java.lang.String) -> showToast
    void executeMsgMessage(android.webkit.WebView,java.lang.String) -> executeMsgMessage
    void startActivityByNameWithSystemAlert(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByNameWithSystemAlert
cn.jpush.android.b.a.c -> cn.jpush.android.b.a.c:
    java.lang.String a -> a
    cn.jpush.android.b.a.d b -> b
    boolean c -> c
    java.lang.String[] z -> z
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
cn.jpush.android.b.a.d -> cn.jpush.android.b.a.d:
    java.util.HashMap a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.gson.jpush.k d -> d
    java.lang.String[] z -> z
    java.lang.String a(java.lang.reflect.Method) -> a
    java.lang.String a() -> a
    java.lang.String a(android.webkit.WebView,java.lang.String) -> a
    java.lang.String a(java.lang.String,int,java.lang.Object) -> a
cn.jpush.android.b.a.e -> cn.jpush.android.b.a.e:
    android.content.Context a -> a
    android.view.WindowManager b -> b
    android.webkit.WebView c -> c
    android.widget.ImageButton d -> d
    java.lang.String[] z -> z
    void a(java.lang.String,java.lang.String) -> a
cn.jpush.android.b.a.f -> cn.jpush.android.b.a.f:
    java.lang.ref.WeakReference a -> a
    cn.jpush.android.data.d b -> b
    java.lang.String[] z -> z
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String,java.lang.String) -> b
    void f(java.lang.String) -> f
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String) -> c
    void a() -> a
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
cn.jpush.android.c -> cn.jpush.android.c:
    java.lang.String z -> z
    cn.jpush.android.b a(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.jpush.android.d -> cn.jpush.android.d:
    android.os.IBinder a -> a
    java.lang.String z -> z
    android.os.IBinder asBinder() -> asBinder
    void a(int,long,boolean,float,double,java.lang.String) -> a
    int a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    long a(java.lang.String,long) -> a
    void b(java.lang.String,long) -> b
    boolean a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
cn.jpush.android.data.JPushLocalNotification -> cn.jpush.android.data.JPushLocalNotification:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String[] z -> z
    java.lang.String toJSON() -> toJSON
    void a(java.lang.String,java.lang.String,org.json.JSONObject) -> a
    void setNotificationId(long) -> setNotificationId
    long getNotificationId() -> getNotificationId
    void setBroadcastTime(long) -> setBroadcastTime
    void setBroadcastTime(java.util.Date) -> setBroadcastTime
    void setBroadcastTime(int,int,int,int,int,int) -> setBroadcastTime
    long getBroadcastTime() -> getBroadcastTime
    void setExtras(java.lang.String) -> setExtras
    java.lang.String getExtras() -> getExtras
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    long getBuilderId() -> getBuilderId
    void setBuilderId(long) -> setBuilderId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cn.jpush.android.data.JPushView -> cn.jpush.android.data.JPushView:
    cn.jpush.android.b.a.f a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
cn.jpush.android.data.a -> cn.jpush.android.data.a:
    org.json.JSONObject a -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.data.a) -> a
cn.jpush.android.data.b -> cn.jpush.android.data.b:
    void a(android.content.Context) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
cn.jpush.android.data.c -> cn.jpush.android.data.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    cn.jpush.android.data.c c -> c
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    cn.jpush.android.data.c a(android.content.Context) -> a
    void a(android.content.Context,cn.jpush.android.data.d,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
cn.jpush.android.data.d -> cn.jpush.android.data.d:
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    int f -> f
    int g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    boolean q -> q
    java.lang.String r -> r
    boolean s -> s
    java.lang.String t -> t
    boolean u -> u
    java.util.List v -> v
    boolean w -> w
    int x -> x
    java.lang.String y -> y
    int z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.util.List C -> C
    int D -> D
    int E -> E
    int F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    int I -> I
    int J -> J
    int K -> K
    boolean L -> L
    boolean M -> M
    boolean N -> N
    boolean a -> a
    boolean O -> O
    int P -> P
    java.lang.String Q -> Q
    java.util.ArrayList R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String[] W -> W
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    java.lang.String d() -> d
    boolean b(android.content.Context,org.json.JSONObject) -> b
    boolean e() -> e
    void a(boolean) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(android.content.Context,cn.jpush.android.data.d) -> a
    boolean a(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
cn.jpush.android.data.e -> cn.jpush.android.data.e:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cn.jpush.android.data.f -> cn.jpush.android.data.f:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int a() -> a
    org.json.JSONObject b() -> b
cn.jpush.android.data.g -> cn.jpush.android.data.g:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.h c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(long,int,int,int,java.lang.String,long,long) -> a
    android.database.Cursor a(long,int) -> a
    boolean b(long,int,int,int,java.lang.String,long,long) -> b
    android.database.Cursor a(int,long) -> a
    boolean c() -> c
    android.database.Cursor a(long,long) -> a
    void a(android.database.Cursor,cn.jpush.android.data.i) -> a
cn.jpush.android.data.h -> cn.jpush.android.data.h:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.i -> cn.jpush.android.data.i:
    long a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    long f -> f
    long g -> g
    java.lang.String[] z -> z
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
    void c(int) -> c
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    long e() -> e
    void b(long) -> b
    long f() -> f
    void c(long) -> c
    java.lang.String toString() -> toString
cn.jpush.android.data.j -> cn.jpush.android.data.j:
    java.lang.String a -> a
    java.lang.String W -> W
    boolean X -> X
    boolean Y -> Y
    int Z -> Z
    boolean aa -> aa
    int ab -> ab
    java.lang.String ac -> ac
    cn.jpush.android.data.m ad -> ad
    java.lang.String ae -> ae
    boolean af -> af
    boolean ag -> ag
    java.lang.String ah -> ah
    boolean ai -> ai
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    void a(cn.jpush.android.data.j,cn.jpush.android.data.j,android.content.Context) -> a
cn.jpush.android.data.k -> cn.jpush.android.data.k:
    cn.jpush.android.data.j a -> a
    android.content.Context b -> b
    int c -> c
    cn.jpush.android.data.j d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.l -> cn.jpush.android.data.l:
    android.content.Context a -> a
    int b -> b
    cn.jpush.android.data.j c -> c
    cn.jpush.android.data.j d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.m -> cn.jpush.android.data.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
    java.util.ArrayList k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    cn.jpush.android.data.j o -> o
    java.lang.String[] z -> z
    org.json.JSONObject a() -> a
    java.lang.String toString() -> toString
cn.jpush.android.data.n -> cn.jpush.android.data.n:
    java.lang.String a -> a
    java.lang.String W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    java.util.ArrayList aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.o -> cn.jpush.android.data.o:
    cn.jpush.android.data.n a -> a
    android.content.Context b -> b
    cn.jpush.android.data.n c -> c
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.p -> cn.jpush.android.data.p:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.q c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> a
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> b
    boolean a(java.lang.String) -> a
    void c() -> c
    android.database.Cursor b(java.lang.String) -> b
    cn.jpush.android.data.r a(android.database.Cursor) -> a
    android.database.Cursor d() -> d
    android.database.Cursor e() -> e
    int a(boolean) -> a
cn.jpush.android.data.q -> cn.jpush.android.data.q:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.r -> cn.jpush.android.data.r:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    int f() -> f
    void a(int) -> a
    int g() -> g
    void b(int) -> b
    int h() -> h
    void c(int) -> c
    int i() -> i
    void d(int) -> d
    int j() -> j
    void e(int) -> e
    int k() -> k
    void f(int) -> f
    java.lang.String toString() -> toString
cn.jpush.android.data.s -> cn.jpush.android.data.s:
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.t -> cn.jpush.android.data.t:
    int a -> a
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String[] ab -> ab
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.e -> cn.jpush.android.e:
    boolean a -> a
    java.util.concurrent.atomic.AtomicBoolean p -> p
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    long g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    cn.jpush.android.b o -> o
    android.content.ServiceConnection q -> q
    java.lang.String[] z -> z
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    android.content.pm.ApplicationInfo c(android.content.Context) -> c
cn.jpush.android.f -> cn.jpush.android.f:
    java.lang.String[] z -> z
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cn.jpush.android.g -> cn.jpush.android.g:
cn.jpush.android.helpers.ConnectingHelper -> cn.jpush.android.helpers.ConnectingHelper:
    java.util.List a -> a
    java.lang.String[] z -> z
    boolean register(android.content.Context,long,boolean) -> register
    int login(android.content.Context,long) -> login
    short getIMLoginFlag() -> getIMLoginFlag
    void sendServerTimer(android.content.Context,long) -> sendServerTimer
    void sendConnectionChanged(android.content.Context,cn.jpush.android.service.a) -> sendConnectionChanged
    int a(long,java.lang.String,int) -> a
    boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo) -> openConnection
    int a(long) -> a
    cn.jpush.android.service.SisInfo sendSis(android.content.Context) -> sendSis
    cn.jpush.android.service.SisInfo a(android.content.Context,boolean,int,int) -> a
    cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String) -> parseSisInfo
    byte[] a(android.content.Context,java.lang.String,long) -> a
    java.net.InetAddress a(java.lang.String) -> a
    void sendConnectionToHandler(android.os.Message,long) -> sendConnectionToHandler
cn.jpush.android.helpers.a -> cn.jpush.android.helpers.a:
    java.lang.String a -> a
    java.net.InetAddress b -> b
    java.lang.String[] z -> z
    void run() -> run
    java.net.InetAddress a() -> a
cn.jpush.android.helpers.b -> cn.jpush.android.helpers.b:
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    long a(android.content.Context,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,int) -> b
    void a(android.content.Context,java.lang.String,boolean) -> a
    boolean b(android.content.Context,java.lang.String,boolean) -> b
cn.jpush.android.helpers.c -> cn.jpush.android.helpers.c:
    android.content.Context a -> a
    java.lang.String[] z -> z
    void a(int,long,boolean,float,double,java.lang.String) -> a
    int a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    long a(java.lang.String,long) -> a
    void b(java.lang.String,long) -> b
    boolean a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
cn.jpush.android.helpers.d -> cn.jpush.android.helpers.d:
    java.util.Queue a -> a
    java.lang.String[] z -> z
    cn.jpush.android.data.a a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.a) -> a
    void a(android.content.Context,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    boolean a(boolean,int,android.content.Context) -> a
cn.jpush.android.helpers.e -> cn.jpush.android.helpers.e:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
cn.jpush.android.helpers.f -> cn.jpush.android.helpers.f:
    java.util.Queue a -> a
    com.google.gson.jpush.ab b -> b
    java.lang.String[] z -> z
    void a(android.content.Context,android.os.Handler,long,cn.jpush.b.a.a.h) -> a
    long a(java.lang.String) -> a
cn.jpush.android.helpers.g -> cn.jpush.android.helpers.g:
    android.content.Context a -> a
    cn.jpush.android.data.d b -> b
    void run() -> run
cn.jpush.android.helpers.h -> cn.jpush.android.helpers.h:
    int a -> a
    java.lang.String[] z -> z
    void a(java.lang.String,int,android.content.Context) -> a
    void a(java.lang.String,int,java.lang.String,android.content.Context) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,boolean,java.lang.String,boolean,boolean) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
cn.jpush.android.helpers.i -> cn.jpush.android.helpers.i:
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    boolean a(int) -> a
    void c(android.content.Context) -> c
cn.jpush.android.helpers.j -> cn.jpush.android.helpers.j:
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
cn.jpush.android.service.AlarmReceiver -> cn.jpush.android.service.AlarmReceiver:
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.DaemonService -> cn.jpush.android.service.DaemonService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
cn.jpush.android.service.DownloadService -> cn.jpush.android.service.DownloadService:
    android.os.Bundle b -> b
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    android.app.NotificationManager c -> c
    cn.jpush.android.data.d d -> d
    cn.jpush.android.service.g e -> e
    android.app.Notification f -> f
    android.app.Notification$Builder g -> g
    android.widget.RemoteViews h -> h
    java.lang.Integer i -> i
    java.lang.Integer j -> j
    java.lang.Integer k -> k
    java.lang.Integer l -> l
    java.lang.Integer m -> m
    android.os.Handler n -> n
    java.lang.String[] z -> z
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void a(cn.jpush.android.data.d,int,long,long) -> a
    void a(cn.jpush.android.data.d,boolean) -> a
    boolean a() -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.service.DownloadService) -> a
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d,int,long,long) -> a
    android.os.Handler b(cn.jpush.android.service.DownloadService) -> b
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d) -> a
    android.app.NotificationManager c(cn.jpush.android.service.DownloadService) -> c
    void a(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.d,int) -> a
cn.jpush.android.service.PushProtocol -> cn.jpush.android.service.PushProtocol:
    java.lang.String z -> z
    long InitConn() -> InitConn
    int HbJPush(long,long,int,long,short) -> HbJPush
    int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> RegPush
    int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short) -> LogPush
    int MsgResponse(long,int,long,byte,long,long,int) -> MsgResponse
    int RecvPush(long,byte[],int) -> RecvPush
    int IMProtocol(long,byte[],int) -> IMProtocol
    int TagAlias(long,long,int,long,java.lang.String,java.lang.String) -> TagAlias
    int Close(long) -> Close
    int InitPush(long,java.lang.String,int) -> InitPush
    int GetSdkVersion() -> GetSdkVersion
cn.jpush.android.service.PushReceiver -> cn.jpush.android.service.PushReceiver:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.PushService -> cn.jpush.android.service.PushService:
    boolean e -> e
    cn.jpush.android.service.n f -> f
    java.util.concurrent.ExecutorService g -> g
    cn.jpush.android.service.k h -> h
    cn.jpush.android.service.m i -> i
    boolean j -> j
    int k -> k
    int l -> l
    long a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    long m -> m
    cn.jpush.android.c n -> n
    java.lang.String[] z -> z
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void a(long) -> a
    void c() -> c
    void a(java.util.concurrent.ExecutorService) -> a
    boolean d() -> d
    boolean e() -> e
    cn.jpush.android.service.n a(cn.jpush.android.service.PushService) -> a
    void b(cn.jpush.android.service.PushService) -> b
    java.util.concurrent.ExecutorService c(cn.jpush.android.service.PushService) -> c
    void a(cn.jpush.android.service.PushService,java.util.concurrent.ExecutorService) -> a
    void a(cn.jpush.android.service.PushService,boolean) -> a
    void a(cn.jpush.android.service.PushService,long) -> a
    void b(cn.jpush.android.service.PushService,long) -> b
    void c(cn.jpush.android.service.PushService,long) -> c
    void a(cn.jpush.android.service.PushService,long,int) -> a
    void d(cn.jpush.android.service.PushService) -> d
cn.jpush.android.service.ServiceInterface -> cn.jpush.android.service.ServiceInterface:
    java.util.concurrent.ConcurrentHashMap a -> a
    java.util.concurrent.atomic.AtomicBoolean b -> b
    cn.jpush.android.service.q c -> c
    boolean d -> d
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,cn.jpush.android.api.b) -> a
    void b(android.content.Context) -> b
    cn.jpush.android.api.b a(long) -> a
    void b(long) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void c(android.content.Context) -> c
    void c(android.content.Context,int) -> c
    void a(android.content.Context,boolean) -> a
    void a(android.content.Context,java.lang.Integer,cn.jpush.android.api.BasicPushNotificationBuilder) -> a
    void d(android.content.Context,int) -> d
    void d(android.content.Context) -> d
    java.lang.String a() -> a
    boolean a(android.content.Context,int,int,int,int) -> a
    boolean e(android.content.Context) -> e
    int i(android.content.Context) -> i
    boolean f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void b(android.content.Context,boolean) -> b
    boolean b() -> b
cn.jpush.android.service.SisInfo -> cn.jpush.android.service.SisInfo:
    java.lang.String TAG -> TAG
    com.google.gson.jpush.k _gson -> _gson
    java.util.List ips -> ips
    java.util.List ssl_ips -> ssl_ips
    java.util.List udp_report -> udp_report
    java.util.List op_conns -> op_conns
    java.util.List ssl_op_conns -> ssl_op_conns
    java.lang.String user -> user
    java.lang.String mainConnIp -> mainConnIp
    int mainConnPort -> mainConnPort
    java.util.List optionConnIp -> optionConnIp
    java.util.List optionConnPort -> optionConnPort
    java.lang.String originSis -> originSis
    boolean invalidSis -> invalidSis
    java.lang.String IPV4_REGEX -> IPV4_REGEX
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.lang.String[] z -> z
    cn.jpush.android.service.SisInfo fromJson(java.lang.String) -> fromJson
    java.lang.String getMainConnIp() -> getMainConnIp
    int getMainConnPort() -> getMainConnPort
    java.util.List getOptionConnIp() -> getOptionConnIp
    java.util.List getOptionConnPort() -> getOptionConnPort
    boolean isInvalidSis() -> isInvalidSis
    java.lang.String getOriginSis() -> getOriginSis
    void parseAndSet(java.lang.String) -> parseAndSet
    void configure() -> configure
    boolean isValidIPV4(java.lang.String) -> isValidIPV4
cn.jpush.android.service.a -> cn.jpush.android.service.a:
    cn.jpush.android.service.a a -> a
    cn.jpush.android.service.a b -> b
    cn.jpush.android.service.a c -> c
    cn.jpush.android.service.a[] d -> d
    java.lang.String[] z -> z
    cn.jpush.android.service.a[] values() -> values
    cn.jpush.android.service.a valueOf(java.lang.String) -> valueOf
cn.jpush.android.service.b -> cn.jpush.android.service.b:
    cn.jpush.android.service.c c -> c
    long d -> d
    long e -> e
    android.os.Bundle f -> f
    boolean a -> a
    boolean b -> b
    java.lang.String[] z -> z
    int a(android.content.Context,cn.jpush.android.service.d,cn.jpush.android.data.d) -> a
    void a(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,org.apache.http.HttpEntity) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    org.apache.http.client.methods.HttpGet a(java.lang.String,long) -> a
    long a(org.apache.http.HttpResponse) -> a
    int a(long) -> a
    boolean a(int) -> a
    long a(cn.jpush.android.service.b) -> a
    long b(cn.jpush.android.service.b) -> b
    cn.jpush.android.service.c c(cn.jpush.android.service.b) -> c
cn.jpush.android.service.c -> cn.jpush.android.service.c:
    cn.jpush.android.service.d b -> b
    cn.jpush.android.service.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.d -> cn.jpush.android.service.d:
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
    void a(long,long) -> a
cn.jpush.android.service.e -> cn.jpush.android.service.e:
    boolean a -> a
    int b -> b
    cn.jpush.android.service.DownloadService c -> c
    java.lang.String[] z -> z
    void a(long,long) -> a
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
cn.jpush.android.service.f -> cn.jpush.android.service.f:
    cn.jpush.android.service.DownloadService a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.g -> cn.jpush.android.service.g:
    android.content.Context b -> b
    cn.jpush.android.service.DownloadService a -> a
    java.lang.String z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.h -> cn.jpush.android.service.h:
    cn.jpush.android.service.h a -> a
    java.util.concurrent.ExecutorService b -> b
    android.os.Handler c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    cn.jpush.android.data.g f -> f
    cn.jpush.android.data.i g -> g
    java.lang.String[] z -> z
    cn.jpush.android.service.h a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void a(long,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(cn.jpush.android.service.h,android.content.Context) -> a
    cn.jpush.android.data.g a() -> a
    android.content.Context a(cn.jpush.android.service.h) -> a
    cn.jpush.android.data.g a(cn.jpush.android.data.g) -> a
    cn.jpush.android.data.i b() -> b
    java.lang.String b(cn.jpush.android.service.h) -> b
    void a(cn.jpush.android.service.h,android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.i -> cn.jpush.android.service.i:
    android.content.Context a -> a
    cn.jpush.android.service.h b -> b
    void run() -> run
cn.jpush.android.service.j -> cn.jpush.android.service.j:
    long a -> a
    cn.jpush.android.service.h b -> b
    void run() -> run
cn.jpush.android.service.k -> cn.jpush.android.service.k:
    java.util.concurrent.atomic.AtomicLong a -> a
    android.content.Context c -> c
    android.os.Handler d -> d
    boolean e -> e
    boolean f -> f
    java.util.concurrent.atomic.AtomicBoolean b -> b
    java.lang.String[] z -> z
    void a() -> a
    void run() -> run
    void b() -> b
cn.jpush.android.service.l -> cn.jpush.android.service.l:
    long a -> a
    cn.jpush.android.service.PushService b -> b
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.service.m -> cn.jpush.android.service.m:
    java.lang.ref.WeakReference a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.n -> cn.jpush.android.service.n:
    java.util.Map a -> a
    java.util.Deque b -> b
    java.util.Deque c -> c
    android.content.Context d -> d
    android.os.Handler e -> e
    android.os.Handler f -> f
    boolean g -> g
    int h -> h
    java.lang.String[] z -> z
    void run() -> run
    void a(long,java.lang.Object) -> a
    void a(cn.jpush.b.a.a.g,int) -> a
    void a() -> a
    void b() -> b
    void a(cn.jpush.android.service.p) -> a
    void b(cn.jpush.android.service.p) -> b
    void c(cn.jpush.android.service.p) -> c
    cn.jpush.android.service.p a(java.lang.Long) -> a
    void d(cn.jpush.android.service.p) -> d
    void c() -> c
    void d() -> d
    java.util.Map a(cn.jpush.android.service.n) -> a
    void a(cn.jpush.android.service.n,cn.jpush.android.service.p) -> a
    void b(cn.jpush.android.service.n,cn.jpush.android.service.p) -> b
    void a(cn.jpush.android.service.n,cn.jpush.b.a.a.g,int) -> a
    void a(cn.jpush.android.service.n,long,java.lang.Object) -> a
    void b(cn.jpush.android.service.n) -> b
cn.jpush.android.service.o -> cn.jpush.android.service.o:
    java.lang.ref.WeakReference a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.p -> cn.jpush.android.service.p:
    cn.jpush.b.a.a.g a -> a
    int b -> b
    int c -> c
    java.lang.String[] z -> z
    void a() -> a
    java.lang.String toString() -> toString
cn.jpush.android.service.q -> cn.jpush.android.service.q:
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.r -> cn.jpush.android.service.r:
    java.lang.String a -> a
    int b -> b
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
cn.jpush.android.service.s -> cn.jpush.android.service.s:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    long c -> c
    java.lang.String[] z -> z
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
    org.json.JSONObject a(java.lang.String) -> a
    org.json.JSONObject b(java.lang.String) -> b
cn.jpush.android.service.t -> cn.jpush.android.service.t:
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.u -> cn.jpush.android.service.u:
    cn.jpush.android.service.u a -> a
    android.os.PowerManager$WakeLock b -> b
    cn.jpush.android.service.u a() -> a
    android.os.PowerManager$WakeLock b() -> b
    void a(android.os.PowerManager$WakeLock) -> a
cn.jpush.android.ui.FullScreenView -> cn.jpush.android.ui.FullScreenView:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.webkit.WebView mWebView -> mWebView
    android.widget.RelativeLayout rlTitleBar -> rlTitleBar
    android.widget.TextView tvTitle -> tvTitle
    android.widget.ImageButton imgBtnBack -> imgBtnBack
    cn.jpush.android.b.a.f webViewHelper -> webViewHelper
    android.view.View$OnClickListener btnBackClickListener -> btnBackClickListener
    java.lang.String[] z -> z
    void initModule(android.content.Context,cn.jpush.android.data.d) -> initModule
    boolean webviewCanGoBack() -> webviewCanGoBack
    void webviewGoBack() -> webviewGoBack
    void loadUrl(java.lang.String) -> loadUrl
    void resume() -> resume
    void pause() -> pause
    void destory() -> destory
    android.content.Context access$000(cn.jpush.android.ui.FullScreenView) -> access$000
cn.jpush.android.ui.ListViewActivity -> cn.jpush.android.ui.ListViewActivity:
    cn.jpush.android.data.d a -> a
    java.lang.String z -> z
    void onCreate(android.os.Bundle) -> onCreate
cn.jpush.android.ui.MyFloatView -> cn.jpush.android.ui.MyFloatView:
    boolean a -> a
    android.view.WindowManager c -> c
    cn.jpush.android.data.d b -> b
    android.view.WindowManager$LayoutParams d -> d
    boolean e -> e
    float f -> f
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float l -> l
    float m -> m
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.jpush.android.ui.PopWinActivity -> cn.jpush.android.ui.PopWinActivity:
    java.lang.String b -> b
    android.webkit.WebView c -> c
    cn.jpush.android.b.a.f a -> a
    cn.jpush.android.data.d d -> d
    java.lang.String[] z -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
cn.jpush.android.ui.PushActivity -> cn.jpush.android.ui.PushActivity:
    java.lang.String a -> a
    cn.jpush.android.ui.FullScreenView b -> b
    android.os.Handler c -> c
    java.lang.String[] z -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void a() -> a
    void a(cn.jpush.android.ui.PushActivity,cn.jpush.android.data.d) -> a
cn.jpush.android.ui.a -> cn.jpush.android.ui.a:
    cn.jpush.android.ui.FullScreenView a -> a
    void onClick(android.view.View) -> onClick
cn.jpush.android.ui.b -> cn.jpush.android.ui.b:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
cn.jpush.android.ui.c -> cn.jpush.android.ui.c:
    java.util.List a -> a
    cn.jpush.android.ui.ListViewActivity b -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.jpush.android.ui.d -> cn.jpush.android.ui.d:
    android.content.Context a -> a
    java.lang.String[] z -> z
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.jpush.android.ui.e -> cn.jpush.android.ui.e:
    cn.jpush.android.ui.PushActivity a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.util.JLogger -> cn.jpush.android.util.JLogger:
    java.text.SimpleDateFormat a -> a
    cn.jpush.android.util.v b -> b
    java.lang.String z -> z
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void a(int,java.lang.String,java.lang.String) -> a
    void parseModalJson(java.lang.String,android.content.Context) -> parseModalJson
    void reportByHeartbeats() -> reportByHeartbeats
cn.jpush.android.util.JRecorder -> cn.jpush.android.util.JRecorder:
    java.util.concurrent.ExecutorService a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    java.util.ArrayList e -> e
    boolean f -> f
    java.lang.String[] z -> z
    cn.jpush.android.util.JRecorder getIncreamentsRecorder(android.content.Context) -> getIncreamentsRecorder
    cn.jpush.android.util.JRecorder getSuperpositionRecorder(android.content.Context) -> getSuperpositionRecorder
    void record(int) -> record
    void parseRecordCommand(java.lang.String) -> parseRecordCommand
    org.json.JSONObject a(java.util.ArrayList) -> a
    void b() -> b
    void a(cn.jpush.android.util.JRecorder,double) -> a
    boolean a(boolean) -> a
    android.content.Context a() -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.TestLogger -> cn.jpush.android.util.TestLogger:
    java.lang.String[] z -> z
    void setTestLogger() -> setTestLogger
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.a -> cn.jpush.android.util.a:
    int a -> a
    java.util.List b -> b
    javax.security.auth.x500.X500Principal c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    java.util.ArrayList h -> h
    java.util.ArrayList i -> i
    java.util.ArrayList j -> j
    cn.jpush.android.service.PushReceiver k -> k
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean k(android.content.Context,java.lang.String) -> k
    boolean d(android.content.Context,java.lang.String) -> d
    boolean a(android.content.Context,java.lang.Class) -> a
    boolean b(android.content.Context,java.lang.Class) -> b
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean d(android.content.Context,java.lang.String,java.lang.String) -> d
    boolean b(android.content.Context,java.lang.String,boolean) -> b
    void e(android.content.Context,java.lang.String) -> e
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    boolean f(android.content.Context,java.lang.String) -> f
    int a(android.content.Context,float) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.content.Intent l(android.content.Context,java.lang.String) -> l
    android.content.Intent a(android.content.Context,cn.jpush.android.data.d,boolean) -> a
    android.content.Intent a(android.content.Context,cn.jpush.android.data.d) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String g(android.content.Context,java.lang.String) -> g
    java.lang.String u(android.content.Context) -> u
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    void e(android.content.Context) -> e
    void h(android.content.Context,java.lang.String) -> h
    int f(android.content.Context) -> f
    boolean d(java.lang.String) -> d
    boolean g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String v(android.content.Context) -> v
    java.lang.String i(android.content.Context) -> i
    java.lang.String i(android.content.Context,java.lang.String) -> i
    java.lang.String w(android.content.Context) -> w
    java.lang.String x(android.content.Context) -> x
    java.lang.String e() -> e
    java.lang.String m(android.content.Context,java.lang.String) -> m
    java.lang.String e(java.lang.String) -> e
    java.lang.String j(android.content.Context) -> j
    void j(android.content.Context,java.lang.String) -> j
    java.lang.String n(android.content.Context,java.lang.String) -> n
    java.lang.String o(android.content.Context,java.lang.String) -> o
    java.lang.String y(android.content.Context) -> y
    void k(android.content.Context) -> k
    void b() -> b
    boolean z(android.content.Context) -> z
    org.json.JSONArray l(android.content.Context) -> l
    org.json.JSONObject a(java.lang.String,org.json.JSONArray) -> a
    org.json.JSONObject a(java.lang.String,java.lang.String) -> a
    boolean m(android.content.Context) -> m
    boolean n(android.content.Context) -> n
    void a(android.content.Context,boolean) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,byte[]) -> a
    void a(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void b(android.content.Context,cn.jpush.android.data.d) -> b
    boolean o(android.content.Context) -> o
    void A(android.content.Context) -> A
    void p(android.content.Context) -> p
    java.lang.String c() -> c
    int c(java.lang.String) -> c
    java.lang.String q(android.content.Context) -> q
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,int) -> b
    java.lang.String r(android.content.Context) -> r
    java.lang.String d() -> d
    int f(java.lang.String) -> f
    void s(android.content.Context) -> s
    java.util.List t(android.content.Context) -> t
    void a(android.webkit.WebSettings) -> a
    boolean p(android.content.Context,java.lang.String) -> p
    char[] z(java.lang.String) -> z
    java.lang.String z(char[]) -> z
cn.jpush.android.util.aa -> cn.jpush.android.util.aa:
    long a -> a
    double b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.android.util.ab -> cn.jpush.android.util.ab:
    cn.jpush.android.util.s a -> a
    java.text.SimpleDateFormat b -> b
    java.util.ArrayList c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String[] z -> z
    void a(cn.jpush.android.util.s) -> a
    boolean a(int) -> a
    void a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    void b(java.lang.String,java.lang.String) -> b
    void c() -> c
    void c(java.lang.String,java.lang.String) -> c
    void d() -> d
    void d(java.lang.String,java.lang.String) -> d
    void e() -> e
    void e(java.lang.String,java.lang.String) -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void i() -> i
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
cn.jpush.android.util.ac -> cn.jpush.android.util.ac:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String toString() -> toString
cn.jpush.android.util.ad -> cn.jpush.android.util.ad:
    java.util.regex.Pattern a -> a
    java.util.regex.Pattern b -> b
    java.util.regex.Pattern c -> c
    java.util.regex.Pattern d -> d
    java.util.regex.Pattern e -> e
    java.util.regex.Pattern f -> f
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int a(java.util.Set) -> a
cn.jpush.android.util.ae -> cn.jpush.android.util.ae:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.concurrent.ExecutorService g -> g
    org.json.JSONObject a -> a
    java.lang.Object h -> h
    java.lang.String[] z -> z
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.lang.String b(java.lang.String) -> b
    java.util.ArrayList a(org.json.JSONArray,int) -> a
    void a(java.io.Closeable) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    void c(android.content.Context,org.json.JSONObject) -> c
    void b(android.content.Context) -> b
    void a(android.content.Context,int) -> a
    void a(android.content.Context,org.json.JSONObject,java.util.ArrayList) -> a
    void a(android.content.Context,org.json.JSONObject,org.json.JSONArray,java.util.ArrayList) -> a
    boolean a(org.json.JSONObject,android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context,org.json.JSONArray) -> b
cn.jpush.android.util.af -> cn.jpush.android.util.af:
    android.content.Context a -> a
    org.json.JSONArray b -> b
    void run() -> run
cn.jpush.android.util.ag -> cn.jpush.android.util.ag:
    java.lang.String a -> a
    java.lang.String[] z -> z
    java.util.Set a(android.app.ActivityManager) -> a
    org.json.JSONArray a(android.app.ActivityManager,android.content.pm.PackageManager) -> a
    java.lang.String a(java.lang.String,int) -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.ah -> cn.jpush.android.util.ah:
    android.content.SharedPreferences a -> a
    java.lang.String[] z -> z
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,long) -> a
    long b(android.content.Context,java.lang.String,long) -> b
    void a(android.content.Context,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,int) -> b
    void a(android.content.Context,java.lang.String,boolean) -> a
    boolean b(android.content.Context,java.lang.String,boolean) -> b
cn.jpush.android.util.ai -> cn.jpush.android.util.ai:
    java.lang.String a -> a
    android.content.SharedPreferences b -> b
    cn.jpush.android.util.ai c -> c
    java.lang.String z -> z
    cn.jpush.android.util.ai a() -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
cn.jpush.android.util.aj -> cn.jpush.android.util.aj:
    java.lang.String a -> a
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
cn.jpush.android.util.ak -> cn.jpush.android.util.ak:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    long d -> d
    java.lang.String[] z -> z
    void a() -> a
cn.jpush.android.util.b -> cn.jpush.android.util.b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int[] f -> f
cn.jpush.android.util.c -> cn.jpush.android.util.c:
    boolean a -> a
    java.lang.String z -> z
    java.lang.String a(byte[],int) -> a
cn.jpush.android.util.d -> cn.jpush.android.util.d:
    byte[] a -> a
    int b -> b
cn.jpush.android.util.e -> cn.jpush.android.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
cn.jpush.android.util.f -> cn.jpush.android.util.f:
    android.content.SharedPreferences a -> a
    java.lang.String z -> z
    void k(android.content.Context) -> k
    void n(java.lang.String) -> n
    void c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String,java.lang.String) -> d
    void a(java.lang.String,int) -> a
    int b(java.lang.String,int) -> b
    void a(java.lang.String,long) -> a
    long b(java.lang.String,long) -> b
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String c(android.content.Context,java.lang.String,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,java.lang.String,long) -> a
cn.jpush.android.util.g -> cn.jpush.android.util.g:
    java.lang.String[] z -> z
    int a(java.nio.ByteBuffer,cn.jpush.b.a.a.h) -> a
    short b(java.nio.ByteBuffer,cn.jpush.b.a.a.h) -> b
    java.nio.ByteBuffer a(java.nio.ByteBuffer,byte[],cn.jpush.b.a.a.h) -> a
    java.lang.Byte c(java.nio.ByteBuffer,cn.jpush.b.a.a.h) -> c
    long d(java.nio.ByteBuffer,cn.jpush.b.a.a.h) -> d
    void a(java.lang.Throwable,cn.jpush.b.a.a.h,java.nio.ByteBuffer) -> a
cn.jpush.android.util.h -> cn.jpush.android.util.h:
    java.lang.String[] z -> z
    byte[] a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean a(java.lang.String,java.io.File) -> a
cn.jpush.android.util.i -> cn.jpush.android.util.i:
    java.util.ArrayList a(org.json.JSONArray) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.jpush.android.util.j -> cn.jpush.android.util.j:
    java.lang.String a -> a
    java.lang.String z -> z
    java.lang.String a() -> a
cn.jpush.android.util.k -> cn.jpush.android.util.k:
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.l -> cn.jpush.android.util.l:
    java.lang.String a -> a
    java.util.Map b -> b
    java.lang.String[] z -> z
    java.util.Map c(android.content.Context) -> c
    void a(android.content.Context,java.util.Map) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context) -> b
cn.jpush.android.util.m -> cn.jpush.android.util.m:
    java.lang.String a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    java.lang.String c(android.content.Context,java.lang.String) -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean a(java.io.File) -> a
    void d(android.content.Context) -> d
cn.jpush.android.util.n -> cn.jpush.android.util.n:
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.jpush.android.util.o -> cn.jpush.android.util.o:
    java.lang.String[] z -> z
    void a(java.lang.String) -> a
    java.util.ArrayList a(java.io.InputStream) -> a
    boolean a(java.lang.String,java.lang.String,android.content.Context) -> a
    boolean a(java.lang.String,byte[],android.content.Context) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
cn.jpush.android.util.p -> cn.jpush.android.util.p:
    boolean a -> a
    java.lang.String[] z -> z
    java.lang.String a(java.lang.String,int,long) -> a
    byte[] a(java.lang.String,int,long,int) -> a
    byte[] b(java.lang.String,int,long) -> b
    void a(java.lang.String,java.lang.String,cn.jpush.android.util.r) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    boolean a(java.lang.String) -> a
    int a(android.content.Context,org.json.JSONObject,boolean) -> a
cn.jpush.android.util.q -> cn.jpush.android.util.q:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.util.r c -> c
    void run() -> run
cn.jpush.android.util.r -> cn.jpush.android.util.r:
    void a(boolean,java.lang.String) -> a
cn.jpush.android.util.s -> cn.jpush.android.util.s:
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.t -> cn.jpush.android.util.t:
    java.lang.String[] z -> z
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void a(android.content.Context) -> a
    org.json.JSONObject a(cn.jpush.android.data.r) -> a
    org.json.JSONObject b(cn.jpush.android.data.r) -> b
    void a(android.content.Context,int,long,int) -> a
cn.jpush.android.util.u -> cn.jpush.android.util.u:
    java.lang.String[] a(android.content.Context) -> a
    java.util.ArrayList a(android.content.Context,boolean) -> a
cn.jpush.android.util.v -> cn.jpush.android.util.v:
    int c -> c
    int d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    int a -> a
    boolean b -> b
    android.content.Context i -> i
    java.util.ArrayList j -> j
    java.lang.String[] z -> z
    void a(cn.jpush.android.data.f) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String) -> a
    org.json.JSONObject d() -> d
cn.jpush.android.util.w -> cn.jpush.android.util.w:
    int a -> a
    cn.jpush.android.util.JRecorder b -> b
    void run() -> run
cn.jpush.android.util.x -> cn.jpush.android.util.x:
    void run() -> run
cn.jpush.android.util.y -> cn.jpush.android.util.y:
    org.json.JSONObject a -> a
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.util.z -> cn.jpush.android.util.z:
    int a -> a
    java.util.ArrayList b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.b.a.a.a -> cn.jpush.b.a.a.a:
    int a -> a
    int b -> b
    int c -> c
    long d -> d
    java.lang.String[] z -> z
    int a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.a.b -> cn.jpush.b.a.a.b:
    int a -> a
    cn.jpush.b.a.b.j b -> b
    java.lang.String[] z -> z
    cn.jpush.b.a.b.j a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.a.c -> cn.jpush.b.a.a.c:
    int a -> a
    cn.jpush.b.a.b.j b -> b
    java.lang.String[] z -> z
    cn.jpush.b.a.b.j a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.a.d -> cn.jpush.b.a.a.d:
    java.lang.String[] z -> z
    cn.jpush.b.a.a.h a(byte[]) -> a
cn.jpush.b.a.a.e -> cn.jpush.b.a.a.e:
    int a -> a
    int b -> b
    int c -> c
    java.lang.Long d -> d
    int e -> e
    long f -> f
    boolean g -> g
    java.lang.String[] z -> z
    java.lang.Long a() -> a
    long b() -> b
    byte[] c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.a.f -> cn.jpush.b.a.a.f:
    boolean a -> a
    cn.jpush.b.a.a.e e -> e
    java.nio.ByteBuffer f -> f
    java.lang.String[] z -> z
    int d() -> d
    cn.jpush.b.a.a.e e() -> e
    void c() -> c
    void b() -> b
    void a(byte[]) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void a(java.lang.String) -> a
    byte[] f() -> f
    byte[] a() -> a
    java.lang.String toString() -> toString
cn.jpush.b.a.a.g -> cn.jpush.b.a.a.g:
    void d(int) -> d
    void b(long) -> b
cn.jpush.b.a.a.h -> cn.jpush.b.a.a.h:
    int g -> g
    java.lang.String h -> h
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.a.i -> cn.jpush.b.a.a.i:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    int a() -> a
    int g() -> g
    java.lang.String toString() -> toString
cn.jpush.b.a.a.j -> cn.jpush.b.a.a.j:
    int a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    int a() -> a
    long g() -> g
    java.lang.String h() -> h
    java.lang.String toString() -> toString
cn.jpush.b.a.a.k -> cn.jpush.b.a.a.k:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String i -> i
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    long a() -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String toString() -> toString
cn.jpush.b.a.a.l -> cn.jpush.b.a.a.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] z -> z
    void c() -> c
    void b() -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
cn.jpush.b.a.a.m -> cn.jpush.b.a.a.m:
    int a -> a
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.b.a.b.a -> cn.jpush.b.a.b.a:
    java.util.List a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.b -> cn.jpush.b.a.b.b:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.c -> cn.jpush.b.a.b.c:
    long a -> a
    java.util.List b -> b
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.d -> cn.jpush.b.a.b.d:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.e -> cn.jpush.b.a.b.e:
    java.util.List a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.f -> cn.jpush.b.a.b.f:
    long a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.g -> cn.jpush.b.a.b.g:
    long a -> a
    java.util.List b -> b
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.h -> cn.jpush.b.a.b.h:
    long a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.i -> cn.jpush.b.a.b.i:
    long a -> a
    java.lang.String b -> b
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.j -> cn.jpush.b.a.b.j:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.Object e -> e
    cn.jpush.a.a.af f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String[] z -> z
    cn.jpush.a.a.z a() -> a
    int b() -> b
    java.lang.String toString() -> toString
cn.jpush.b.a.b.k -> cn.jpush.b.a.b.k:
    com.google.gson.jpush.k f -> f
    long g -> g
    long h -> h
    java.lang.String z -> z
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
    cn.jpush.b.a.a.b a(java.lang.String) -> a
    cn.jpush.b.a.b.k a(java.lang.String,int) -> a
cn.jpush.b.a.b.l -> cn.jpush.b.a.b.l:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.m -> cn.jpush.b.a.b.m:
    java.lang.String a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.n -> cn.jpush.b.a.b.n:
    java.lang.String[] z -> z
    void a(android.content.Context,android.os.Handler,cn.jpush.b.a.a.h,byte[]) -> a
    void a(android.os.Handler,long,cn.jpush.b.a.b.j) -> a
cn.jpush.b.a.b.o -> cn.jpush.b.a.b.o:
    java.lang.String a -> a
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.p -> cn.jpush.b.a.b.p:
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.q -> cn.jpush.b.a.b.q:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.b.r -> cn.jpush.b.a.b.r:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.jpush.b.a.b.j a(long,java.lang.String) -> a
cn.jpush.b.a.c.a -> cn.jpush.b.a.c.a:
    java.lang.String z -> z
    byte[] a(java.nio.ByteBuffer) -> a
    byte[] a(java.lang.String) -> a
    void a(byte[],int,int) -> a
    void a(byte[],java.lang.String,int) -> a
    java.lang.String a(java.nio.ByteBuffer,cn.jpush.b.a.a.h) -> a
    java.lang.String b(java.nio.ByteBuffer) -> b
cn.jpush.b.a.c.b -> cn.jpush.b.a.c.b:
    java.lang.String z -> z
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
cn.jpush.b.a.c.c -> cn.jpush.b.a.c.c:
    java.lang.String z -> z
    java.lang.String a(byte[]) -> a
com.amap.api.fence.Fence -> com.amap.api.fence.Fence:
    android.app.PendingIntent a -> a
    java.lang.String b -> b
    double c -> c
    double d -> d
    float e -> e
    long f -> f
    long i -> i
    int j -> j
    int g -> g
    long h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int a() -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.fence.a -> com.amap.api.fence.a:
    com.amap.api.fence.Fence a(android.os.Parcel) -> a
    com.amap.api.fence.Fence[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    int LOCATION_SUCCESS -> LOCATION_SUCCESS
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_FAILURE_WIFI_INFO -> ERROR_CODE_FAILURE_WIFI_INFO
    int ERROR_CODE_FAILURE_LOCATION_PARAMETER -> ERROR_CODE_FAILURE_LOCATION_PARAMETER
    int ERROR_CODE_FAILURE_CONNECTION -> ERROR_CODE_FAILURE_CONNECTION
    int ERROR_CODE_FAILURE_PARSER -> ERROR_CODE_FAILURE_PARSER
    int ERROR_CODE_FAILURE_LOCATION -> ERROR_CODE_FAILURE_LOCATION
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_INIT -> ERROR_CODE_FAILURE_INIT
    int ERROR_CODE_SERVICE_FAIL -> ERROR_CODE_SERVICE_FAIL
    int ERROR_CODE_FAILURE_CELL -> ERROR_CODE_FAILURE_CELL
    int ERROR_CODE_FAILURE_LOCATION_PERMISSION -> ERROR_CODE_FAILURE_LOCATION_PERMISSION
    int LOCATION_TYPE_GPS -> LOCATION_TYPE_GPS
    int LOCATION_TYPE_SAME_REQ -> LOCATION_TYPE_SAME_REQ
    int LOCATION_TYPE_FAST -> LOCATION_TYPE_FAST
    int LOCATION_TYPE_FIX_CACHE -> LOCATION_TYPE_FIX_CACHE
    int LOCATION_TYPE_WIFI -> LOCATION_TYPE_WIFI
    int LOCATION_TYPE_CELL -> LOCATION_TYPE_CELL
    int LOCATION_TYPE_AMAP -> LOCATION_TYPE_AMAP
    int LOCATION_TYPE_OFFLINE -> LOCATION_TYPE_OFFLINE
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    int p -> p
    double q -> q
    double r -> r
    int s -> s
    java.lang.String t -> t
    int getLocationType() -> getLocationType
    void setLocationType(int) -> setLocationType
    java.lang.String getLocationDetail() -> getLocationDetail
    void setLocationDetail(java.lang.String) -> setLocationDetail
    int getErrorCode() -> getErrorCode
    void setErrorCode(int) -> setErrorCode
    java.lang.String getErrorInfo() -> getErrorInfo
    void setErrorInfo(java.lang.String) -> setErrorInfo
    java.lang.String getCountry() -> getCountry
    void setCountry(java.lang.String) -> setCountry
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getPoiName() -> getPoiName
    void setPoiName(java.lang.String) -> setPoiName
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    int getSatellites() -> getSatellites
    void setSatellites(int) -> setSatellites
    java.lang.String getStreet() -> getStreet
    void setStreet(java.lang.String) -> setStreet
    java.lang.String getStreetNum() -> getStreetNum
    void setNumber(java.lang.String) -> setNumber
    void setOffset(boolean) -> setOffset
    boolean isOffset() -> isOffset
    java.lang.String getAoiName() -> getAoiName
    void setAoiName(java.lang.String) -> setAoiName
    java.lang.String toString() -> toString
    java.lang.String toStr() -> toStr
    java.lang.String toStr(int) -> toStr
    float getAccuracy() -> getAccuracy
    float getBearing() -> getBearing
    double getAltitude() -> getAltitude
    float getSpeed() -> getSpeed
    java.lang.String getProvider() -> getProvider
com.amap.api.location.AMapLocationClient -> com.amap.api.location.AMapLocationClient:
    com.amap.api.location.AMapLocationClient$a a -> a
    android.content.Context b -> b
    com.amap.api.location.LocationManagerBase c -> c
    com.amap.api.location.AMapLocationClientOption d -> d
    com.amap.api.location.AMapLocationListener e -> e
    com.amap.api.location.AMapLocationClient f -> f
    void setLocationOption(com.amap.api.location.AMapLocationClientOption) -> setLocationOption
    void setLocationListener(com.amap.api.location.AMapLocationListener) -> setLocationListener
    void startLocation() -> startLocation
    void stopLocation() -> stopLocation
    void addGeoFenceAlert(java.lang.String,double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent,java.lang.String) -> removeGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    com.amap.api.location.AMapLocation getLastKnownLocation() -> getLastKnownLocation
    void startAssistantLocation() -> startAssistantLocation
    void stopAssistantLocation() -> stopAssistantLocation
    java.lang.String getVersion() -> getVersion
    void setApiKey(java.lang.String) -> setApiKey
    boolean isStarted() -> isStarted
    void unRegisterLocationListener(com.amap.api.location.AMapLocationListener) -> unRegisterLocationListener
    void onDestroy() -> onDestroy
com.amap.api.location.AMapLocationClient$a -> com.amap.api.location.AMapLocationClient$a:
    com.amap.api.location.AMapLocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.AMapLocationClientOption -> com.amap.api.location.AMapLocationClientOption:
    long a -> a
    long b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean isMockEnable() -> isMockEnable
    void setMockEnable(boolean) -> setMockEnable
    long getInterval() -> getInterval
    com.amap.api.location.AMapLocationClientOption setInterval(long) -> setInterval
    boolean isOnceLocation() -> isOnceLocation
    com.amap.api.location.AMapLocationClientOption setOnceLocation(boolean) -> setOnceLocation
    boolean isNeedAddress() -> isNeedAddress
    com.amap.api.location.AMapLocationClientOption setNeedAddress(boolean) -> setNeedAddress
    boolean isWifiActiveScan() -> isWifiActiveScan
    void setWifiActiveScan(boolean) -> setWifiActiveScan
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode getLocationMode() -> getLocationMode
    com.amap.api.location.AMapLocationClientOption setLocationMode(com.amap.api.location.AMapLocationClientOption$AMapLocationMode) -> setLocationMode
    boolean isKillProcess() -> isKillProcess
    com.amap.api.location.AMapLocationClientOption setKillProcess(boolean) -> setKillProcess
    boolean isGpsFirst() -> isGpsFirst
    com.amap.api.location.AMapLocationClientOption setGpsFirst(boolean) -> setGpsFirst
    com.amap.api.location.AMapLocationClientOption clone() -> clone
    long getHttpTimeOut() -> getHttpTimeOut
    void setHttpTimeOut(long) -> setHttpTimeOut
    boolean isOffset() -> isOffset
    com.amap.api.location.AMapLocationClientOption setOffset(boolean) -> setOffset
    com.amap.api.location.AMapLocationClientOption a(com.amap.api.location.AMapLocationClientOption) -> a
    java.lang.Object clone() -> clone
com.amap.api.location.AMapLocationClientOption$AMapLocationMode -> com.amap.api.location.AMapLocationClientOption$AMapLocationMode:
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode Battery_Saving -> Battery_Saving
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode Device_Sensors -> Device_Sensors
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode Hight_Accuracy -> Hight_Accuracy
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode[] a -> a
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode[] values() -> values
    com.amap.api.location.AMapLocationClientOption$AMapLocationMode valueOf(java.lang.String) -> valueOf
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.APSService -> com.amap.api.location.APSService:
    android.os.Messenger a -> a
    com.amap.api.location.APSServiceBase b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate(android.content.Context) -> onCreate
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.amap.api.location.APSServiceBase -> com.amap.api.location.APSServiceBase:
    int INIT -> INIT
    int LOCATION -> LOCATION
    int STARTSCOKET -> STARTSCOKET
    int STOPSCOKET -> STOPSCOKET
    int GPSFUSION -> GPSFUSION
    int OFFLOCFUSION -> OFFLOCFUSION
    int STARTCOLL -> STARTCOLL
    android.os.Handler getHandler() -> getHandler
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.amap.api.location.CoordUtil -> com.amap.api.location.CoordUtil:
    int convertToGcj(double[],double[]) -> convertToGcj
com.amap.api.location.CoordinateConverter -> com.amap.api.location.CoordinateConverter:
    android.content.Context b -> b
    com.amap.api.location.CoordinateConverter$CoordType c -> c
    com.amap.api.location.DPoint d -> d
    com.amap.api.location.DPoint a -> a
    com.amap.api.location.CoordinateConverter from(com.amap.api.location.CoordinateConverter$CoordType) -> from
    com.amap.api.location.CoordinateConverter coord(com.amap.api.location.DPoint) -> coord
    com.amap.api.location.DPoint convert() -> convert
    boolean isAMapDataAvailable(double,double) -> isAMapDataAvailable
com.amap.api.location.CoordinateConverter$CoordType -> com.amap.api.location.CoordinateConverter$CoordType:
    com.amap.api.location.CoordinateConverter$CoordType BAIDU -> BAIDU
    com.amap.api.location.CoordinateConverter$CoordType MAPBAR -> MAPBAR
    com.amap.api.location.CoordinateConverter$CoordType MAPABC -> MAPABC
    com.amap.api.location.CoordinateConverter$CoordType SOSOMAP -> SOSOMAP
    com.amap.api.location.CoordinateConverter$CoordType ALIYUN -> ALIYUN
    com.amap.api.location.CoordinateConverter$CoordType GOOGLE -> GOOGLE
    com.amap.api.location.CoordinateConverter$CoordType GPS -> GPS
    com.amap.api.location.CoordinateConverter$CoordType[] a -> a
    com.amap.api.location.CoordinateConverter$CoordType[] values() -> values
    com.amap.api.location.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.amap.api.location.DPoint -> com.amap.api.location.DPoint:
    double a -> a
    double b -> b
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
com.amap.api.location.LocationManagerBase -> com.amap.api.location.LocationManagerBase:
    int SET_OPTION -> SET_OPTION
    int SET_LISTENER -> SET_LISTENER
    int START_LOCATION -> START_LOCATION
    int STOP_LOCATION -> STOP_LOCATION
    int REMOVE_LISTENER -> REMOVE_LISTENER
    int ADD_GEOFENCE -> ADD_GEOFENCE
    int REMOVE_GEOFENCE -> REMOVE_GEOFENCE
    int START_SOCKET -> START_SOCKET
    int STOP_SOCKET -> STOP_SOCKET
    int REMOVE_GEOFENCE_ONE -> REMOVE_GEOFENCE_ONE
    int DESTROY -> DESTROY
    void setLocationOption(com.amap.api.location.AMapLocationClientOption) -> setLocationOption
    void setLocationListener(com.amap.api.location.AMapLocationListener) -> setLocationListener
    void startLocation() -> startLocation
    void stopLocation() -> stopLocation
    void addGeoFenceAlert(java.lang.String,double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent,java.lang.String) -> removeGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    com.amap.api.location.AMapLocation getLastKnownLocation() -> getLastKnownLocation
    void startAssistantLocation() -> startAssistantLocation
    void stopAssistantLocation() -> stopAssistantLocation
    java.lang.String getVersion() -> getVersion
    boolean isStarted() -> isStarted
    void unRegisterLocationListener(com.amap.api.location.AMapLocationListener) -> unRegisterLocationListener
    void onDestroy() -> onDestroy
com.amap.api.location.a -> com.amap.api.location.a:
    int[] a -> a
com.amap.api.mapcore.AMapDelegateImp -> com.amap.api.mapcore.AMapDelegateImp:
    int n -> n
    int o -> o
    int p -> p
    android.graphics.Bitmap q -> q
    android.graphics.Bitmap r -> r
    int s -> s
    int t -> t
    float a -> a
    float b -> b
    float c -> c
    boolean u -> u
    boolean v -> v
    boolean w -> w
    boolean x -> x
    com.amap.api.maps.model.MyTrafficStyle y -> y
    int[] z -> z
    java.util.concurrent.CopyOnWriteArrayList A -> A
    java.util.concurrent.CopyOnWriteArrayList B -> B
    com.amap.api.mapcore.aw d -> d
    com.amap.api.mapcore.av e -> e
    com.amap.api.mapcore.bs f -> f
    com.amap.api.mapcore.bo g -> g
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime C -> C
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode D -> D
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState E -> E
    int F -> F
    com.autonavi.amap.mapcore.MapCore G -> G
    android.content.Context H -> H
    com.amap.api.mapcore.a I -> I
    com.autonavi.amap.mapcore.MapProjection J -> J
    android.view.GestureDetector K -> K
    android.view.ScaleGestureDetector L -> L
    com.amap.api.mapcore.util.d M -> M
    android.view.SurfaceHolder N -> N
    com.amap.api.mapcore.az O -> O
    com.amap.api.mapcore.br P -> P
    com.amap.api.mapcore.as Q -> Q
    com.amap.api.mapcore.r R -> R
    com.amap.api.mapcore.bj S -> S
    com.amap.api.mapcore.n T -> T
    com.amap.api.mapcore.ar U -> U
    com.amap.api.maps.AMap$OnMyLocationChangeListener V -> V
    com.amap.api.maps.AMap$OnMarkerClickListener W -> W
    com.amap.api.maps.AMap$OnPolylineClickListener X -> X
    com.amap.api.maps.AMap$OnMarkerDragListener Y -> Y
    com.amap.api.maps.AMap$OnMapLoadedListener Z -> Z
    com.amap.api.maps.AMap$OnCameraChangeListener aa -> aa
    com.amap.api.maps.AMap$OnMapClickListener ab -> ab
    com.amap.api.maps.AMap$OnMapTouchListener ac -> ac
    com.amap.api.maps.AMap$OnPOIClickListener ad -> ad
    com.amap.api.maps.AMap$OnMapLongClickListener ae -> ae
    com.amap.api.maps.AMap$OnInfoWindowClickListener af -> af
    com.amap.api.maps.AMap$InfoWindowAdapter ag -> ag
    com.amap.api.maps.AMap$InfoWindowAdapter ah -> ah
    android.view.View ai -> ai
    com.amap.api.mapcore.ah aj -> aj
    com.amap.api.mapcore.bh ak -> ak
    com.amap.api.mapcore.am al -> al
    com.amap.api.mapcore.aq am -> am
    com.amap.api.maps.LocationSource an -> an
    android.graphics.Rect ao -> ao
    com.amap.api.mapcore.l ap -> ap
    com.amap.api.mapcore.util.c aq -> aq
    com.amap.api.mapcore.bb ar -> ar
    com.amap.api.mapcore.o as -> as
    int at -> at
    int au -> au
    com.amap.api.maps.AMap$CancelableCallback av -> av
    int aw -> aw
    android.graphics.drawable.Drawable ax -> ax
    android.location.Location ay -> ay
    com.amap.api.maps.AMap$onMapPrintScreenListener az -> az
    com.amap.api.maps.AMap$OnMapScreenShotListener aA -> aA
    android.os.Handler aB -> aB
    com.amap.api.mapcore.util.f aC -> aC
    com.amap.api.mapcore.p aD -> aD
    java.util.Timer aE -> aE
    com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver aF -> aF
    double aG -> aG
    boolean aH -> aH
    boolean aI -> aI
    boolean aJ -> aJ
    boolean aK -> aK
    boolean aL -> aL
    boolean aM -> aM
    boolean aN -> aN
    boolean aO -> aO
    java.lang.Boolean aP -> aP
    boolean aQ -> aQ
    boolean aR -> aR
    boolean aS -> aS
    android.os.Handler aT -> aT
    com.amap.api.mapcore.w h -> h
    com.autonavi.amap.mapcore.GLMapResManager i -> i
    com.amap.api.mapcore.ae j -> j
    int aU -> aU
    com.amap.api.mapcore.t aV -> aV
    boolean aW -> aW
    boolean aX -> aX
    boolean aY -> aY
    boolean aZ -> aZ
    android.os.Handler ba -> ba
    java.lang.Runnable bb -> bb
    java.lang.Runnable k -> k
    boolean bc -> bc
    boolean bd -> bd
    boolean be -> be
    boolean bf -> bf
    com.amap.api.maps.model.Marker bg -> bg
    com.amap.api.mapcore.ah bh -> bh
    boolean bi -> bi
    boolean bj -> bj
    boolean bk -> bk
    int bl -> bl
    boolean bm -> bm
    java.lang.Thread bn -> bn
    com.amap.api.maps.model.LatLngBounds bo -> bo
    android.os.Handler l -> l
    boolean bp -> bp
    boolean bq -> bq
    int br -> br
    int bs -> bs
    android.os.Handler bt -> bt
    java.lang.Runnable bu -> bu
    java.lang.Runnable bv -> bv
    com.amap.api.maps.CustomRenderer m -> m
    com.amap.api.mapcore.AMapDelegateImp$a bw -> bw
    com.autonavi.amap.mapcore.MapCore a() -> a
    int b() -> b
    com.autonavi.amap.mapcore.MapProjection c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.mapcore.v) -> a
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void ab() -> ab
    void ac() -> ac
    void ad() -> ad
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a(float) -> a
    void a(android.location.Location) -> a
    void a(boolean) -> a
    void h() -> h
    void b(boolean) -> b
    void c(boolean) -> c
    void i() -> i
    void d(boolean) -> d
    void j() -> j
    boolean a(java.lang.String) -> a
    void e(boolean) -> e
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    android.graphics.Rect k() -> k
    int l() -> l
    int m() -> m
    int n() -> n
    int o() -> o
    void a(com.amap.api.maps.model.MyTrafficStyle) -> a
    void ae() -> ae
    void af() -> af
    void ag() -> ag
    int p() -> p
    void q() -> q
    void f(boolean) -> f
    com.amap.api.maps.model.CameraPosition r() -> r
    float s() -> s
    float t() -> t
    void a(com.amap.api.mapcore.p) -> a
    void b(com.amap.api.mapcore.p) -> b
    void a(com.amap.api.mapcore.p,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.p,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void u() -> u
    com.amap.api.mapcore.al a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ai a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    com.amap.api.mapcore.ak a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.ac a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.af a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.Text a(com.amap.api.maps.model.TextOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void v() -> v
    void g(boolean) -> g
    int w() -> w
    void b(int) -> b
    void a(com.autonavi.amap.mapcore.GLMapResManager$MapViewMode,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime) -> a
    void a(com.autonavi.amap.mapcore.GLMapResManager$MapViewMode,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime,com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState) -> a
    boolean x() -> x
    void h(boolean) -> h
    void i(boolean) -> i
    void j(boolean) -> j
    void k(boolean) -> k
    boolean y() -> y
    void l(boolean) -> l
    android.location.Location z() -> z
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.aq A() -> A
    com.amap.api.mapcore.am B() -> B
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.maps.AMap$OnCameraChangeListener C() -> C
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnPOIClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnPolylineClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    android.view.View D() -> D
    float b(float) -> b
    float c(int) -> c
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.IPoint) -> b
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    com.amap.api.maps.model.LatLng ah() -> ah
    com.amap.api.maps.model.CameraPosition m(boolean) -> m
    void ai() -> ai
    void b(android.view.MotionEvent) -> b
    boolean a(android.view.MotionEvent) -> a
    void a(com.amap.api.mapcore.ah) -> a
    void E() -> E
    float F() -> F
    void G() -> G
    com.amap.api.maps.model.LatLngBounds H() -> H
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
    android.graphics.Point I() -> I
    android.graphics.Bitmap a(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float J() -> J
    void n(boolean) -> n
    void a(boolean,com.amap.api.maps.model.CameraPosition) -> a
    void f(int) -> f
    int K() -> K
    java.util.List L() -> L
    void M() -> M
    void N() -> N
    boolean O() -> O
    void P() -> P
    void a(int,int) -> a
    void g(int) -> g
    int Q() -> Q
    boolean R() -> R
    com.amap.api.mapcore.o S() -> S
    void o(boolean) -> o
    void T() -> T
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    boolean a(java.io.File) -> a
    void U() -> U
    void h(int) -> h
    void a(com.amap.api.mapcore.util.f) -> a
    com.amap.api.maps.model.Poi a(int,int,int) -> a
    void a(com.amap.api.maps.CustomRenderer) -> a
    android.content.Context V() -> V
    void a(java.lang.Runnable) -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void W() -> W
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime X() -> X
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode Y() -> Y
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState Z() -> Z
    void aj() -> aj
    void i(int) -> i
    java.lang.Runnable a(com.amap.api.mapcore.AMapDelegateImp) -> a
    android.os.Handler b(com.amap.api.mapcore.AMapDelegateImp) -> b
    java.lang.Runnable c(com.amap.api.mapcore.AMapDelegateImp) -> c
    void d(com.amap.api.mapcore.AMapDelegateImp) -> d
    void e(com.amap.api.mapcore.AMapDelegateImp) -> e
    com.amap.api.mapcore.a f(com.amap.api.mapcore.AMapDelegateImp) -> f
    com.autonavi.amap.mapcore.MapCore g(com.amap.api.mapcore.AMapDelegateImp) -> g
    com.amap.api.mapcore.bb h(com.amap.api.mapcore.AMapDelegateImp) -> h
    boolean a(com.amap.api.mapcore.AMapDelegateImp,boolean) -> a
    boolean i(com.amap.api.mapcore.AMapDelegateImp) -> i
    com.autonavi.amap.mapcore.MapProjection j(com.amap.api.mapcore.AMapDelegateImp) -> j
    int a(com.amap.api.mapcore.AMapDelegateImp,int) -> a
    int b(com.amap.api.mapcore.AMapDelegateImp,int) -> b
    int k(com.amap.api.mapcore.AMapDelegateImp) -> k
    int l(com.amap.api.mapcore.AMapDelegateImp) -> l
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime) -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewMode) -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState) -> a
    boolean b(com.amap.api.mapcore.AMapDelegateImp,boolean) -> b
    com.autonavi.amap.mapcore.MapCore a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.MapCore) -> a
    com.amap.api.mapcore.bj m(com.amap.api.mapcore.AMapDelegateImp) -> m
    boolean n(com.amap.api.mapcore.AMapDelegateImp) -> n
    boolean c(com.amap.api.mapcore.AMapDelegateImp,boolean) -> c
    boolean d(com.amap.api.mapcore.AMapDelegateImp,boolean) -> d
    boolean o(com.amap.api.mapcore.AMapDelegateImp) -> o
    int p(com.amap.api.mapcore.AMapDelegateImp) -> p
    com.amap.api.mapcore.n q(com.amap.api.mapcore.AMapDelegateImp) -> q
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode r(com.amap.api.mapcore.AMapDelegateImp) -> r
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime s(com.amap.api.mapcore.AMapDelegateImp) -> s
    void t(com.amap.api.mapcore.AMapDelegateImp) -> t
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState u(com.amap.api.mapcore.AMapDelegateImp) -> u
    com.amap.api.mapcore.ar v(com.amap.api.mapcore.AMapDelegateImp) -> v
    boolean w(com.amap.api.mapcore.AMapDelegateImp) -> w
    boolean x(com.amap.api.mapcore.AMapDelegateImp) -> x
    boolean e(com.amap.api.mapcore.AMapDelegateImp,boolean) -> e
    double aa() -> aa
    com.amap.api.mapcore.aq y(com.amap.api.mapcore.AMapDelegateImp) -> y
    int z(com.amap.api.mapcore.AMapDelegateImp) -> z
    int c(com.amap.api.mapcore.AMapDelegateImp,int) -> c
    boolean A(com.amap.api.mapcore.AMapDelegateImp) -> A
    int B(com.amap.api.mapcore.AMapDelegateImp) -> B
    int C(com.amap.api.mapcore.AMapDelegateImp) -> C
    void D(com.amap.api.mapcore.AMapDelegateImp) -> D
    boolean f(com.amap.api.mapcore.AMapDelegateImp,boolean) -> f
    boolean E(com.amap.api.mapcore.AMapDelegateImp) -> E
    boolean g(com.amap.api.mapcore.AMapDelegateImp,boolean) -> g
    com.amap.api.mapcore.util.c F(com.amap.api.mapcore.AMapDelegateImp) -> F
    int d(com.amap.api.mapcore.AMapDelegateImp,int) -> d
    int e(com.amap.api.mapcore.AMapDelegateImp,int) -> e
    com.amap.api.maps.AMap$CancelableCallback a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$CancelableCallback) -> a
    android.view.View G(com.amap.api.mapcore.AMapDelegateImp) -> G
    com.amap.api.mapcore.ah H(com.amap.api.mapcore.AMapDelegateImp) -> H
    boolean h(com.amap.api.mapcore.AMapDelegateImp,boolean) -> h
    com.amap.api.mapcore.bh I(com.amap.api.mapcore.AMapDelegateImp) -> I
    int J(com.amap.api.mapcore.AMapDelegateImp) -> J
    int K(com.amap.api.mapcore.AMapDelegateImp) -> K
    com.amap.api.mapcore.o L(com.amap.api.mapcore.AMapDelegateImp) -> L
    com.amap.api.mapcore.ah a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.mapcore.ah) -> a
    com.amap.api.maps.AMap$OnMarkerDragListener M(com.amap.api.mapcore.AMapDelegateImp) -> M
    com.amap.api.mapcore.ah N(com.amap.api.mapcore.AMapDelegateImp) -> N
    com.amap.api.maps.model.Marker a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.model.Marker) -> a
    com.amap.api.maps.model.Marker O(com.amap.api.mapcore.AMapDelegateImp) -> O
    boolean i(com.amap.api.mapcore.AMapDelegateImp,boolean) -> i
    com.amap.api.maps.AMap$OnMapLongClickListener P(com.amap.api.mapcore.AMapDelegateImp) -> P
    boolean j(com.amap.api.mapcore.AMapDelegateImp,boolean) -> j
    boolean Q(com.amap.api.mapcore.AMapDelegateImp) -> Q
    com.amap.api.maps.AMap$OnInfoWindowClickListener R(com.amap.api.mapcore.AMapDelegateImp) -> R
    com.amap.api.maps.AMap$OnMarkerClickListener S(com.amap.api.mapcore.AMapDelegateImp) -> S
    com.amap.api.maps.AMap$OnMapClickListener T(com.amap.api.mapcore.AMapDelegateImp) -> T
    com.amap.api.maps.AMap$OnPolylineClickListener U(com.amap.api.mapcore.AMapDelegateImp) -> U
    com.amap.api.maps.model.Poi a(com.amap.api.mapcore.AMapDelegateImp,int,int,int) -> a
    com.amap.api.maps.AMap$OnPOIClickListener V(com.amap.api.mapcore.AMapDelegateImp) -> V
    boolean W(com.amap.api.mapcore.AMapDelegateImp) -> W
    boolean k(com.amap.api.mapcore.AMapDelegateImp,boolean) -> k
    boolean l(com.amap.api.mapcore.AMapDelegateImp,boolean) -> l
    android.content.Context X(com.amap.api.mapcore.AMapDelegateImp) -> X
    java.lang.Boolean Y(com.amap.api.mapcore.AMapDelegateImp) -> Y
    com.amap.api.maps.AMap$OnCameraChangeListener Z(com.amap.api.mapcore.AMapDelegateImp) -> Z
    com.amap.api.mapcore.p aa(com.amap.api.mapcore.AMapDelegateImp) -> aa
    com.amap.api.maps.AMap$OnMapLoadedListener ab(com.amap.api.mapcore.AMapDelegateImp) -> ab
    com.amap.api.mapcore.r ac(com.amap.api.mapcore.AMapDelegateImp) -> ac
    com.amap.api.mapcore.br ad(com.amap.api.mapcore.AMapDelegateImp) -> ad
    com.amap.api.maps.AMap$onMapPrintScreenListener ae(com.amap.api.mapcore.AMapDelegateImp) -> ae
    com.amap.api.maps.AMap$OnMapScreenShotListener af(com.amap.api.mapcore.AMapDelegateImp) -> af
    com.amap.api.maps.AMap$onMapPrintScreenListener a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    com.amap.api.maps.AMap$OnMapScreenShotListener a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    com.amap.api.maps.AMap$CancelableCallback ag(com.amap.api.mapcore.AMapDelegateImp) -> ag
    boolean ah(com.amap.api.mapcore.AMapDelegateImp) -> ah
    boolean m(com.amap.api.mapcore.AMapDelegateImp,boolean) -> m
    boolean ai(com.amap.api.mapcore.AMapDelegateImp) -> ai
    boolean n(com.amap.api.mapcore.AMapDelegateImp,boolean) -> n
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.model.LatLngBounds) -> a
    void a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.MapProjection,int,int,com.autonavi.amap.mapcore.DPoint) -> a
    boolean a(com.amap.api.mapcore.AMapDelegateImp,java.io.File) -> a
    com.amap.api.mapcore.util.f aj(com.amap.api.mapcore.AMapDelegateImp) -> aj
    com.amap.api.maps.AMap$OnMapTouchListener ak(com.amap.api.mapcore.AMapDelegateImp) -> ak
    boolean al(com.amap.api.mapcore.AMapDelegateImp) -> al
com.amap.api.mapcore.AMapDelegateImp$1 -> com.amap.api.mapcore.AMapDelegateImp$1:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$10 -> com.amap.api.mapcore.AMapDelegateImp$10:
    boolean a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$11 -> com.amap.api.mapcore.AMapDelegateImp$11:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$12 -> com.amap.api.mapcore.AMapDelegateImp$12:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$13 -> com.amap.api.mapcore.AMapDelegateImp$13:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$14 -> com.amap.api.mapcore.AMapDelegateImp$14:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$15 -> com.amap.api.mapcore.AMapDelegateImp$15:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$16 -> com.amap.api.mapcore.AMapDelegateImp$16:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$17 -> com.amap.api.mapcore.AMapDelegateImp$17:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$18 -> com.amap.api.mapcore.AMapDelegateImp$18:
    com.amap.api.maps.model.LatLngBounds a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.amap.api.maps.AMap$CancelableCallback f -> f
    com.amap.api.mapcore.AMapDelegateImp g -> g
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.mapcore.AMapDelegateImp$2 -> com.amap.api.mapcore.AMapDelegateImp$2:
    com.amap.api.maps.model.LatLngBounds$Builder a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$3 -> com.amap.api.mapcore.AMapDelegateImp$3:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime a -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode b -> b
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState c -> c
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime d -> d
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode e -> e
    com.amap.api.mapcore.AMapDelegateImp f -> f
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$3$1 -> com.amap.api.mapcore.AMapDelegateImp$3$1:
    com.amap.api.mapcore.AMapDelegateImp$3 a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$4 -> com.amap.api.mapcore.AMapDelegateImp$4:
    boolean a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$5 -> com.amap.api.mapcore.AMapDelegateImp$5:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$6 -> com.amap.api.mapcore.AMapDelegateImp$6:
    boolean a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$7 -> com.amap.api.mapcore.AMapDelegateImp$7:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$8 -> com.amap.api.mapcore.AMapDelegateImp$8:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$9 -> com.amap.api.mapcore.AMapDelegateImp$9:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver -> com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.amap.api.mapcore.AMapDelegateImp$a -> com.amap.api.mapcore.AMapDelegateImp$a:
    boolean b -> b
    boolean c -> c
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode d -> d
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime e -> e
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState f -> f
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$b -> com.amap.api.mapcore.AMapDelegateImp$b:
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    java.lang.Float a -> a
    java.lang.Float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    float d -> d
    com.amap.api.mapcore.p e -> e
    com.amap.api.mapcore.AMapDelegateImp f -> f
    void a(float,float,float,float,float) -> a
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$c -> com.amap.api.mapcore.AMapDelegateImp$c:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.amap.api.mapcore.AMapDelegateImp$c$1 -> com.amap.api.mapcore.AMapDelegateImp$c$1:
    com.amap.api.mapcore.ah a -> a
    com.amap.api.mapcore.AMapDelegateImp$c b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$c$2 -> com.amap.api.mapcore.AMapDelegateImp$c$2:
    android.view.MotionEvent a -> a
    com.amap.api.mapcore.AMapDelegateImp$c b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$c$2$1 -> com.amap.api.mapcore.AMapDelegateImp$c$2$1:
    com.amap.api.maps.model.Poi a -> a
    com.amap.api.mapcore.AMapDelegateImp$c$2 b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$d -> com.amap.api.mapcore.AMapDelegateImp$d:
    com.autonavi.amap.mapcore.FPoint a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.p d -> d
    com.amap.api.mapcore.AMapDelegateImp e -> e
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.amap.api.mapcore.AMapDelegateImp$e -> com.amap.api.mapcore.AMapDelegateImp$e:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a(int) -> a
com.amap.api.mapcore.AMapDelegateImp$e$1 -> com.amap.api.mapcore.AMapDelegateImp$e$1:
    com.amap.api.mapcore.AMapDelegateImp$e a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$f -> com.amap.api.mapcore.AMapDelegateImp$f:
    float a -> a
    float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.p d -> d
    com.amap.api.mapcore.AMapDelegateImp e -> e
    boolean a(com.amap.api.mapcore.util.d) -> a
    boolean b(com.amap.api.mapcore.util.d) -> b
    void c(com.amap.api.mapcore.util.d) -> c
com.amap.api.mapcore.AMapDelegateImp$g -> com.amap.api.mapcore.AMapDelegateImp$g:
    float c -> c
    com.autonavi.amap.mapcore.IPoint d -> d
    com.amap.api.mapcore.p a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.amap.api.mapcore.AMapDelegateImp$h -> com.amap.api.mapcore.AMapDelegateImp$h:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$i -> com.amap.api.mapcore.AMapDelegateImp$i:
    android.content.Context b -> b
    com.amap.api.maps.AMap$OnCacheRemoveListener c -> c
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AutoTestConfig -> com.amap.api.mapcore.AutoTestConfig:
    int a -> a
    int ZoomControllerViewId -> ZoomControllerViewId
    int ScaleControlsViewId -> ScaleControlsViewId
    int MyLocationViewId -> MyLocationViewId
    int CompassViewId -> CompassViewId
com.amap.api.mapcore.a -> com.amap.api.mapcore.a:
    com.amap.api.mapcore.AMapDelegateImp f -> f
    float g -> g
    com.autonavi.amap.mapcore.IPoint a -> a
    float b -> b
    float c -> c
    float d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int h -> h
    int i -> i
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void a(com.autonavi.amap.mapcore.MapCore) -> a
    void b(com.amap.api.mapcore.p) -> b
    float a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,int,int) -> a
    void a(com.amap.api.mapcore.p) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.p) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float,int,int) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    void b(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.p) -> b
    void c(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.p) -> c
    void d(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.p) -> d
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,int,int) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection,int,int) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    void a(int,int) -> a
    void requestRender() -> requestRender
    void onIndoorBuildingActivity(com.autonavi.amap.mapcore.MapCore,byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
com.amap.api.mapcore.aa -> com.amap.api.mapcore.aa:
    com.amap.api.mapcore.ab a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    java.lang.String m -> m
    java.nio.FloatBuffer n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    void g() -> g
    void q() -> q
    void r() -> r
    void s() -> s
    void a(com.autonavi.amap.mapcore.DPoint,double,double,double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void t() -> t
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void j() -> j
    boolean a() -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void b(float,float) -> b
    void p() -> p
    boolean k() -> k
com.amap.api.mapcore.ab -> com.amap.api.mapcore.ab:
    void a(com.amap.api.maps.CustomRenderer) -> a
    void a(com.amap.api.mapcore.v) -> a
    com.autonavi.amap.mapcore.MapProjection c() -> c
    int l() -> l
    int m() -> m
    int b() -> b
    int p() -> p
    android.view.View D() -> D
    android.graphics.Rect k() -> k
    void f(boolean) -> f
    void a(android.location.Location) -> a
    boolean a(java.lang.String) -> a
    void M() -> M
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    float F() -> F
    int K() -> K
    void f(int) -> f
    com.amap.api.maps.model.CameraPosition r() -> r
    float s() -> s
    float t() -> t
    void a(com.amap.api.mapcore.p) -> a
    void b(com.amap.api.mapcore.p) -> b
    void a(com.amap.api.mapcore.p,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.p,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void u() -> u
    com.amap.api.mapcore.al a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.ak a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.af a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.Text a(com.amap.api.maps.model.TextOptions) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void v() -> v
    void g(boolean) -> g
    int w() -> w
    void b(int) -> b
    boolean x() -> x
    void h(boolean) -> h
    void j(boolean) -> j
    void k(boolean) -> k
    boolean y() -> y
    void l(boolean) -> l
    void o(boolean) -> o
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    android.location.Location z() -> z
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.aq A() -> A
    com.amap.api.mapcore.am B() -> B
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnPolylineClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    void a(com.amap.api.mapcore.ah) -> a
    void E() -> E
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void q() -> q
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void h() -> h
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float J() -> J
    com.amap.api.maps.model.LatLngBounds H() -> H
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
    void f() -> f
    void g() -> g
    boolean a(android.view.MotionEvent) -> a
    void e(boolean) -> e
    void a(com.amap.api.maps.model.MyTrafficStyle) -> a
    void a(float) -> a
    java.util.List L() -> L
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    float c(int) -> c
    void N() -> N
    void a(int,int) -> a
    com.amap.api.maps.model.CameraPosition m(boolean) -> m
    void g(int) -> g
    int Q() -> Q
    boolean R() -> R
    com.amap.api.mapcore.ac a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.o S() -> S
    com.amap.api.mapcore.ai a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    void T() -> T
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    void i(boolean) -> i
    void h(int) -> h
    void a(com.amap.api.maps.AMap$OnPOIClickListener) -> a
    android.graphics.Point I() -> I
    void W() -> W
    void i(int) -> i
    void e() -> e
    void d() -> d
com.amap.api.mapcore.ac -> com.amap.api.mapcore.ac:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
com.amap.api.mapcore.ad -> com.amap.api.mapcore.ad:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.ae -> com.amap.api.mapcore.ae:
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setRenderMode(int) -> setRenderMode
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean isEnabled() -> isEnabled
    void setVisibility(int) -> setVisibility
    void requestRender() -> requestRender
com.amap.api.mapcore.af -> com.amap.api.mapcore.af:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void p() -> p
com.amap.api.mapcore.ag -> com.amap.api.mapcore.ag:
    com.amap.api.mapcore.ab a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
    void a(int) -> a
com.amap.api.mapcore.ah -> com.amap.api.mapcore.ah:
    boolean b() -> b
    boolean c() -> c
    android.graphics.Rect d() -> d
    com.amap.api.maps.model.LatLng e() -> e
    com.autonavi.amap.mapcore.FPoint f() -> f
    com.amap.api.maps.model.LatLng g() -> g
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(float,float) -> a
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void b(boolean) -> b
    void c(boolean) -> c
    boolean o() -> o
    void p() -> p
    boolean a(com.amap.api.mapcore.ah) -> a
    int q() -> q
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.ab) -> a
    boolean r() -> r
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    void a(float) -> a
    float u() -> u
    void a(int) -> a
    int v() -> v
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    boolean x() -> x
    void y() -> y
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    int B() -> B
    int C() -> C
    int D() -> D
    int E() -> E
    void a(int,int) -> a
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
    void J() -> J
com.amap.api.mapcore.ai -> com.amap.api.mapcore.ai:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    void b(int) -> b
    int i() -> i
    int l() -> l
    void a(java.util.List) -> a
    java.util.List m() -> m
com.amap.api.mapcore.aj -> com.amap.api.mapcore.aj:
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean a() -> a
    boolean k() -> k
com.amap.api.mapcore.ak -> com.amap.api.mapcore.ak:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    void a(java.util.List) -> a
    java.util.List l() -> l
    int m() -> m
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.al -> com.amap.api.mapcore.al:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(java.util.List) -> a
    java.util.List l() -> l
    boolean m() -> m
    void b(boolean) -> b
    void c(boolean) -> c
    boolean n() -> n
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    boolean b(com.amap.api.maps.model.LatLng) -> b
    void c(float) -> c
    void o() -> o
com.amap.api.mapcore.am -> com.amap.api.mapcore.am:
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    com.amap.api.maps.model.VisibleRegion a() -> a
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
com.amap.api.mapcore.an -> com.amap.api.mapcore.an:
com.amap.api.mapcore.an$a -> com.amap.api.mapcore.an$a:
    com.amap.api.mapcore.an$a a -> a
    com.amap.api.mapcore.an$a b -> b
    com.amap.api.mapcore.an$a c -> c
    com.amap.api.mapcore.an$a[] d -> d
    com.amap.api.mapcore.an$a[] values() -> values
    com.amap.api.mapcore.an$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.ao -> com.amap.api.mapcore.ao:
    void c(java.lang.String) -> c
    java.lang.String a() -> a
    void b(int) -> b
    int K() -> K
    void c(int) -> c
    int L() -> L
    void d(int) -> d
    int M() -> M
    void a(android.graphics.Typeface) -> a
    android.graphics.Typeface N() -> N
    void b(int,int) -> b
    int O() -> O
    int P() -> P
com.amap.api.mapcore.ap -> com.amap.api.mapcore.ap:
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ap) -> a
    int f() -> f
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(boolean) -> b
    void g() -> g
    void c(boolean) -> c
    void h() -> h
com.amap.api.mapcore.aq -> com.amap.api.mapcore.aq:
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
com.amap.api.mapcore.ar -> com.amap.api.mapcore.ar:
    java.lang.String a -> a
    android.content.Context c -> c
    android.widget.LinearLayout d -> d
    int e -> e
    java.util.List f -> f
    int g -> g
    int h -> h
    android.graphics.Bitmap i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int b -> b
    int o -> o
    java.lang.Runnable p -> p
    int q -> q
    com.amap.api.mapcore.ar$a r -> r
    void a(android.content.Context) -> a
    void a() -> a
    void d() -> d
    android.widget.TextView b(java.lang.String) -> b
    void a(int) -> a
    void a(java.lang.String[]) -> a
    void setBackgroundColor(int) -> setBackgroundColor
    void b() -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int[] e() -> e
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void f() -> f
    void a(java.lang.String) -> a
    int c() -> c
    void fling(int) -> fling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(com.amap.api.mapcore.ar$a) -> a
    int a(android.content.Context,float) -> a
    int a(android.view.View) -> a
    void b(android.view.View) -> b
    int a(com.amap.api.mapcore.ar) -> a
    int b(com.amap.api.mapcore.ar) -> b
    int c(com.amap.api.mapcore.ar) -> c
    void d(com.amap.api.mapcore.ar) -> d
    int a(com.amap.api.mapcore.ar,int) -> a
    java.lang.Runnable e(com.amap.api.mapcore.ar) -> e
    int f(com.amap.api.mapcore.ar) -> f
    int g(com.amap.api.mapcore.ar) -> g
    android.graphics.Bitmap h(com.amap.api.mapcore.ar) -> h
    int[] i(com.amap.api.mapcore.ar) -> i
    int j(com.amap.api.mapcore.ar) -> j
    int k(com.amap.api.mapcore.ar) -> k
    int l(com.amap.api.mapcore.ar) -> l
com.amap.api.mapcore.ar$1 -> com.amap.api.mapcore.ar$1:
    com.amap.api.mapcore.ar a -> a
    void run() -> run
com.amap.api.mapcore.ar$1$1 -> com.amap.api.mapcore.ar$1$1:
    int a -> a
    int b -> b
    com.amap.api.mapcore.ar$1 c -> c
    void run() -> run
com.amap.api.mapcore.ar$1$2 -> com.amap.api.mapcore.ar$1$2:
    int a -> a
    int b -> b
    com.amap.api.mapcore.ar$1 c -> c
    void run() -> run
com.amap.api.mapcore.ar$2 -> com.amap.api.mapcore.ar$2:
    com.amap.api.mapcore.ar a -> a
    void draw(android.graphics.Canvas) -> draw
    void a(android.graphics.Canvas) -> a
    void b(android.graphics.Canvas) -> b
    void c(android.graphics.Canvas) -> c
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.amap.api.mapcore.ar$3 -> com.amap.api.mapcore.ar$3:
    int a -> a
    com.amap.api.mapcore.ar b -> b
    void run() -> run
com.amap.api.mapcore.ar$a -> com.amap.api.mapcore.ar$a:
    void a(int) -> a
com.amap.api.mapcore.as -> com.amap.api.mapcore.as:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.amap.api.mapcore.ab h -> h
    boolean i -> i
    void a() -> a
    void a(boolean) -> a
com.amap.api.mapcore.as$1 -> com.amap.api.mapcore.as$1:
    com.amap.api.mapcore.as a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.at -> com.amap.api.mapcore.at:
    com.amap.api.mapcore.ab e -> e
    android.content.Context a -> a
    int b -> b
    int f -> f
    int c -> c
    int d -> d
    com.amap.api.maps.AMapOptions g -> g
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    com.amap.api.mapcore.ab a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b(com.amap.api.maps.AMapOptions) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
    void a(int) -> a
com.amap.api.mapcore.au -> com.amap.api.mapcore.au:
    int a -> a
    boolean b -> b
    boolean a() -> a
    com.amap.api.mapcore.au a(boolean) -> a
com.amap.api.mapcore.av -> com.amap.api.mapcore.av:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a(com.amap.api.mapcore.au) -> a
    com.amap.api.mapcore.au a() -> a
    int b() -> b
    void a(com.amap.api.mapcore.p) -> a
    com.amap.api.mapcore.p c() -> c
    int d() -> d
    void e() -> e
com.amap.api.mapcore.aw -> com.amap.api.mapcore.aw:
    com.amap.api.mapcore.ab a -> a
    java.util.concurrent.CopyOnWriteArrayList c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    java.util.concurrent.CopyOnWriteArrayList e -> e
    com.amap.api.mapcore.aw$a b -> b
    com.autonavi.amap.mapcore.IPoint f -> f
    com.amap.api.mapcore.ah g -> g
    android.os.Handler h -> h
    java.lang.Runnable i -> i
    android.os.Handler j -> j
    java.lang.Runnable k -> k
    int a() -> a
    void a(java.lang.String) -> a
    void a(com.amap.api.mapcore.ah) -> a
    boolean b(com.amap.api.mapcore.ah) -> b
    void c(com.amap.api.mapcore.ah) -> c
    void d(com.amap.api.mapcore.ah) -> d
    void e(com.amap.api.mapcore.ah) -> e
    void b() -> b
    void k() -> k
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    com.amap.api.mapcore.ah d() -> d
    com.amap.api.mapcore.ah a(android.view.MotionEvent) -> a
    void a(com.amap.api.mapcore.be) -> a
    void a(int) -> a
    void a(java.lang.Integer) -> a
    int a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void e() -> e
    boolean b(android.view.MotionEvent) -> b
    boolean a(android.graphics.Rect,int,int) -> a
    java.util.List f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(com.amap.api.mapcore.aw) -> a
com.amap.api.mapcore.aw$a -> com.amap.api.mapcore.aw$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.ax -> com.amap.api.mapcore.ax:
    com.amap.api.mapcore.aw a -> a
    void run() -> run
com.amap.api.mapcore.ay -> com.amap.api.mapcore.ay:
    com.amap.api.mapcore.aw a -> a
    void run() -> run
com.amap.api.mapcore.az -> com.amap.api.mapcore.az:
    com.amap.api.mapcore.ab a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void a(android.view.View,com.amap.api.mapcore.az$a) -> a
    void a() -> a
    void a(android.view.View,int,int,int[]) -> a
    void a(android.view.View,int,int,int,int,int) -> a
com.amap.api.mapcore.az$a -> com.amap.api.mapcore.az$a:
    com.autonavi.amap.mapcore.FPoint a -> a
    int b -> b
    int c -> c
    int d -> d
com.amap.api.mapcore.b -> com.amap.api.mapcore.b:
    int[] a -> a
com.amap.api.mapcore.ba -> com.amap.api.mapcore.ba:
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    float e -> e
    float f -> f
    boolean g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    com.autonavi.amap.mapcore.FPoint n -> n
    float[] o -> o
    int[] p -> p
    float q -> q
    boolean r -> r
    java.nio.FloatBuffer s -> s
    java.lang.String t -> t
    com.amap.api.maps.model.LatLng u -> u
    com.amap.api.maps.model.LatLng v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    float y -> y
    float z -> z
    boolean A -> A
    boolean B -> B
    com.amap.api.mapcore.aw C -> C
    java.nio.FloatBuffer D -> D
    java.lang.Object E -> E
    boolean F -> F
    java.util.concurrent.CopyOnWriteArrayList G -> G
    boolean H -> H
    boolean I -> I
    boolean J -> J
    int K -> K
    int L -> L
    boolean M -> M
    int N -> N
    int O -> O
    long P -> P
    java.lang.String c(java.lang.String) -> c
    void a(float) -> a
    boolean x() -> x
    void y() -> y
    void p() -> p
    void a() -> a
    void b(java.util.ArrayList) -> b
    int K() -> K
    int L() -> L
    android.graphics.Rect d() -> d
    boolean b() -> b
    void N() -> N
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor M() -> M
    boolean k() -> k
    void l() -> l
    void m() -> m
    void b(boolean) -> b
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ah) -> a
    int q() -> q
    boolean r() -> r
    void a(com.amap.api.mapcore.ab) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.ab) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    float u() -> u
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
    void J() -> J
com.amap.api.mapcore.bb -> com.amap.api.mapcore.bb:
    com.amap.api.mapcore.ab a -> a
    com.amap.api.maps.model.Marker b -> b
    com.amap.api.mapcore.ad c -> c
    com.amap.api.maps.model.MyLocationStyle d -> d
    com.amap.api.maps.model.LatLng e -> e
    double f -> f
    android.content.Context g -> g
    com.amap.api.mapcore.bk h -> h
    int i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean m -> m
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a() -> a
    void f() -> f
    void g() -> g
    void h() -> h
    void b(float) -> b
    void c(float) -> c
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void i() -> i
    void j() -> j
    void b() -> b
    void k() -> k
    void l() -> l
    void a(float) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void e() -> e
com.amap.api.mapcore.bc -> com.amap.api.mapcore.bc:
    com.amap.api.mapcore.ab j -> j
    float k -> k
    int l -> l
    int m -> m
    float n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.concurrent.CopyOnWriteArrayList q -> q
    int r -> r
    boolean s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    com.amap.api.maps.model.LatLngBounds t -> t
    float[] i -> i
    void b(java.util.List) -> b
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List m() -> m
    java.util.List n() -> n
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean k() -> k
com.amap.api.mapcore.bd -> com.amap.api.mapcore.bd:
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(java.io.InputStream) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(byte[],android.graphics.Rect) -> a
    byte[] a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,byte[]) -> a
    void a(java.io.OutputStream,int) -> a
    void a(byte[],int,int) -> a
    int a(byte[],int) -> a
com.amap.api.mapcore.be -> com.amap.api.mapcore.be:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    int b -> b
    com.amap.api.maps.model.BitmapDescriptor a() -> a
    int b() -> b
com.amap.api.mapcore.bf -> com.amap.api.mapcore.bf:
    com.amap.api.mapcore.ab a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.util.List j -> j
    java.nio.FloatBuffer k -> k
    java.nio.FloatBuffer l -> l
    int m -> m
    int n -> n
    com.amap.api.maps.model.LatLngBounds o -> o
    boolean p -> p
    float q -> q
    java.lang.Object r -> r
    float s -> s
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    void b(java.util.List) -> b
    void g() -> g
    int f() -> f
    boolean a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean n() -> n
    void c(java.util.List) -> c
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    void o() -> o
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int m() -> m
    com.autonavi.amap.mapcore.FPoint[] a(com.autonavi.amap.mapcore.FPoint[]) -> a
    void j() -> j
    boolean a(com.amap.api.maps.model.LatLng) -> a
    boolean k() -> k
com.amap.api.mapcore.bg -> com.amap.api.mapcore.bg:
    com.amap.api.mapcore.w a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.nio.FloatBuffer i -> i
    com.amap.api.maps.model.BitmapDescriptor j -> j
    com.amap.api.maps.model.LatLngBounds k -> k
    java.lang.Object l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    float C -> C
    float D -> D
    float E -> E
    float F -> F
    float G -> G
    float[] H -> H
    int[] I -> I
    int[] J -> J
    double K -> K
    void d(boolean) -> d
    void b(boolean) -> b
    boolean m() -> m
    void c(boolean) -> c
    boolean n() -> n
    void b(java.util.List) -> b
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,double,int) -> a
    void a(java.util.List,java.util.List,double) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,java.util.List,com.amap.api.maps.model.LatLngBounds$Builder) -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void p() -> p
    void f(java.util.List) -> f
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(javax.microedition.khronos.opengles.GL10) -> b
    void a(javax.microedition.khronos.opengles.GL10,float) -> a
    void b(javax.microedition.khronos.opengles.GL10,float) -> b
    void c(javax.microedition.khronos.opengles.GL10,float) -> c
    void d(javax.microedition.khronos.opengles.GL10,float) -> d
    void e(javax.microedition.khronos.opengles.GL10,float) -> e
    void f(javax.microedition.khronos.opengles.GL10,float) -> f
    boolean q() -> q
    void j() -> j
    boolean k() -> k
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    boolean b(com.amap.api.maps.model.LatLng) -> b
    java.util.ArrayList r() -> r
    double a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    com.autonavi.amap.mapcore.FPoint c(com.amap.api.maps.model.LatLng) -> c
    double a(double,double,double,double,double,double) -> a
    void c(float) -> c
    void c(java.util.List) -> c
    void d(java.util.List) -> d
    void e(java.util.List) -> e
    void e(boolean) -> e
    java.util.List g(java.util.List) -> g
    void o() -> o
com.amap.api.mapcore.bh -> com.amap.api.mapcore.bh:
    boolean a -> a
    int b -> b
    int c -> c
    java.nio.FloatBuffer d -> d
    java.lang.String e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    java.nio.FloatBuffer i -> i
    java.lang.Object j -> j
    int k -> k
    com.amap.api.mapcore.ab l -> l
    com.autonavi.amap.mapcore.MapProjection m -> m
    float n -> n
    float o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    boolean x() -> x
    void y() -> y
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    int K() -> K
    int L() -> L
    android.graphics.Rect d() -> d
    boolean b() -> b
    void N() -> N
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor M() -> M
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ah) -> a
    int q() -> q
    boolean r() -> r
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a() -> a
    int b(javax.microedition.khronos.opengles.GL10) -> b
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    void a(float) -> a
    void p() -> p
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.ab) -> a
    float u() -> u
    void b(int,int) -> b
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void b(boolean) -> b
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
    void J() -> J
com.amap.api.mapcore.bi -> com.amap.api.mapcore.bi:
    com.amap.api.mapcore.ab a -> a
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.VisibleRegion a() -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
com.amap.api.mapcore.bj -> com.amap.api.mapcore.bj:
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.ab c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    android.graphics.Rect f -> f
    int[] g -> g
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(boolean) -> a
    void b() -> b
com.amap.api.mapcore.bk -> com.amap.api.mapcore.bk:
    android.hardware.SensorManager a -> a
    android.hardware.Sensor b -> b
    long c -> c
    int d -> d
    float e -> e
    android.content.Context f -> f
    com.amap.api.mapcore.ab g -> g
    com.amap.api.maps.model.Marker h -> h
    void a() -> a
    void b() -> b
    void a(com.amap.api.maps.model.Marker) -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int a(android.content.Context) -> a
com.amap.api.mapcore.bl -> com.amap.api.mapcore.bl:
    int a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    int g -> g
    android.graphics.Bitmap h -> h
    java.nio.FloatBuffer i -> i
    java.lang.String j -> j
    com.amap.api.maps.model.LatLng k -> k
    float l -> l
    float m -> m
    boolean n -> n
    com.amap.api.mapcore.aw o -> o
    java.nio.FloatBuffer p -> p
    java.lang.Object q -> q
    java.lang.String r -> r
    int s -> s
    int t -> t
    int u -> u
    android.graphics.Typeface v -> v
    float w -> w
    android.graphics.Rect x -> x
    android.graphics.Paint y -> y
    android.os.Handler z -> z
    java.lang.Runnable A -> A
    boolean B -> B
    boolean C -> C
    java.lang.String d(java.lang.String) -> d
    void a(float) -> a
    boolean x() -> x
    void y() -> y
    void p() -> p
    void Q() -> Q
    boolean b() -> b
    void R() -> R
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void b(float) -> b
    float G() -> G
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ah) -> a
    int q() -> q
    boolean r() -> r
    void a(com.amap.api.mapcore.ab) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.ab) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    float u() -> u
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    android.graphics.Rect d() -> d
    void c(java.lang.String) -> c
    java.lang.String a() -> a
    void b(int) -> b
    int K() -> K
    void c(int) -> c
    int L() -> L
    void d(int) -> d
    int M() -> M
    void a(android.graphics.Typeface) -> a
    android.graphics.Typeface N() -> N
    void b(int,int) -> b
    int O() -> O
    int P() -> P
    void S() -> S
    boolean H() -> H
    void b(boolean) -> b
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
    void J() -> J
    void a(com.amap.api.mapcore.bl) -> a
    boolean a(com.amap.api.mapcore.bl,boolean) -> a
    void b(com.amap.api.mapcore.bl) -> b
com.amap.api.mapcore.bm -> com.amap.api.mapcore.bm:
    com.amap.api.mapcore.bl a -> a
    void run() -> run
com.amap.api.mapcore.bn -> com.amap.api.mapcore.bn:
    com.amap.api.mapcore.bo a -> a
    com.amap.api.maps.model.TileProvider b -> b
    java.lang.Float c -> c
    boolean d -> d
    boolean e -> e
    com.amap.api.mapcore.ab f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    com.amap.api.mapcore.util.bc k -> k
    java.util.concurrent.CopyOnWriteArrayList l -> l
    boolean m -> m
    com.amap.api.mapcore.bn$b n -> n
    java.lang.String o -> o
    java.nio.FloatBuffer p -> p
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ap) -> a
    int f() -> f
    boolean a(com.amap.api.mapcore.bn$a) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    java.util.ArrayList a(int,int,int) -> a
    boolean a(java.util.List,int,boolean) -> a
    void b(boolean) -> b
    void g() -> g
    void c(boolean) -> c
    void h() -> h
    java.util.ArrayList a(com.amap.api.mapcore.bn,int,int,int) -> a
    boolean a(com.amap.api.mapcore.bn,java.util.List,int,boolean) -> a
    com.amap.api.mapcore.ab a(com.amap.api.mapcore.bn) -> a
    com.amap.api.mapcore.util.bc b(com.amap.api.mapcore.bn) -> b
    com.amap.api.mapcore.bo c(com.amap.api.mapcore.bn) -> c
com.amap.api.mapcore.bn$a -> com.amap.api.mapcore.bn$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int f -> f
    boolean g -> g
    java.nio.FloatBuffer h -> h
    android.graphics.Bitmap i -> i
    com.amap.api.mapcore.util.be$a j -> j
    int k -> k
    com.amap.api.mapcore.bn l -> l
    com.amap.api.mapcore.bn$a a() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void a(android.graphics.Bitmap) -> a
    void b() -> b
    java.lang.Object clone() -> clone
com.amap.api.mapcore.bn$b -> com.amap.api.mapcore.bn$b:
    int e -> e
    boolean f -> f
    com.amap.api.mapcore.bn a -> a
    java.util.List a(com.amap.api.mapcore.ab[]) -> a
    void a(java.util.List) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.bo -> com.amap.api.mapcore.bo:
    com.amap.api.mapcore.ab e -> e
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.bo$a b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.bn d -> d
    com.amap.api.mapcore.ab a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b() -> b
    void c() -> c
    void a(com.amap.api.mapcore.ap) -> a
    boolean b(com.amap.api.mapcore.ap) -> b
    void a(boolean) -> a
    void d() -> d
    void b(boolean) -> b
    void e() -> e
    void f() -> f
com.amap.api.mapcore.bo$1 -> com.amap.api.mapcore.bo$1:
    com.amap.api.mapcore.bo a -> a
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
com.amap.api.mapcore.bo$a -> com.amap.api.mapcore.bo$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.bp -> com.amap.api.mapcore.bp:
    com.amap.api.mapcore.ab b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int l -> l
    android.os.Handler a -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
    boolean a(com.amap.api.mapcore.bp) -> a
    com.amap.api.mapcore.ab b(com.amap.api.mapcore.bp) -> b
    boolean c(com.amap.api.mapcore.bp) -> c
    boolean d(com.amap.api.mapcore.bp) -> d
    boolean e(com.amap.api.mapcore.bp) -> e
com.amap.api.mapcore.bq -> com.amap.api.mapcore.bq:
    com.amap.api.mapcore.bp a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.br -> com.amap.api.mapcore.br:
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Paint f -> f
    boolean g -> g
    int h -> h
    com.amap.api.mapcore.AMapDelegateImp i -> i
    int j -> j
    int a -> a
    void a() -> a
    android.graphics.Bitmap b() -> b
    void a(boolean) -> a
    android.graphics.Point c() -> c
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.amap.api.mapcore.bs -> com.amap.api.mapcore.bs:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.Bitmap i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    android.graphics.Bitmap l -> l
    android.widget.ImageView m -> m
    android.widget.ImageView n -> n
    com.amap.api.mapcore.ab o -> o
    void a() -> a
    void a(float) -> a
    void a(int) -> a
    com.amap.api.mapcore.ab a(com.amap.api.mapcore.bs) -> a
    android.graphics.Bitmap b(com.amap.api.mapcore.bs) -> b
    android.widget.ImageView c(com.amap.api.mapcore.bs) -> c
    android.graphics.Bitmap d(com.amap.api.mapcore.bs) -> d
    android.graphics.Bitmap e(com.amap.api.mapcore.bs) -> e
    android.widget.ImageView f(com.amap.api.mapcore.bs) -> f
    android.graphics.Bitmap g(com.amap.api.mapcore.bs) -> g
com.amap.api.mapcore.bs$1 -> com.amap.api.mapcore.bs$1:
    com.amap.api.mapcore.bs a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.bs$2 -> com.amap.api.mapcore.bs$2:
    com.amap.api.mapcore.bs a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.c -> com.amap.api.mapcore.c:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.d -> com.amap.api.mapcore.d:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.e -> com.amap.api.mapcore.e:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.f -> com.amap.api.mapcore.f:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.g -> com.amap.api.mapcore.g:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.h -> com.amap.api.mapcore.h:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.i -> com.amap.api.mapcore.i:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.j -> com.amap.api.mapcore.j:
    com.amap.api.mapcore.ab a -> a
    com.amap.api.mapcore.ab a() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
com.amap.api.mapcore.k -> com.amap.api.mapcore.k:
    com.amap.api.mapcore.ab a -> a
    com.amap.api.mapcore.ab a() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
com.amap.api.mapcore.l -> com.amap.api.mapcore.l:
    com.amap.api.mapcore.ab b -> b
    android.location.Location a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.mapcore.m -> com.amap.api.mapcore.m:
    com.amap.api.maps.model.LatLng e -> e
    com.amap.api.maps.model.LatLng f -> f
    com.amap.api.maps.model.LatLng g -> g
    float h -> h
    int i -> i
    float j -> j
    boolean k -> k
    java.lang.String l -> l
    com.amap.api.mapcore.ab m -> m
    float[] n -> n
    int o -> o
    boolean p -> p
    double q -> q
    double r -> r
    double s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    void g() -> g
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.MapProjection,double,double,double) -> a
    boolean l() -> l
    com.autonavi.amap.mapcore.DPoint m() -> m
    double a(double,double,double,double) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void j() -> j
    boolean k() -> k
    void a(com.amap.api.maps.model.LatLng) -> a
    void b(com.amap.api.maps.model.LatLng) -> b
    void c(com.amap.api.maps.model.LatLng) -> c
com.amap.api.mapcore.n -> com.amap.api.mapcore.n:
    android.graphics.Paint a -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(boolean) -> a
com.amap.api.mapcore.o -> com.amap.api.mapcore.o:
    int a -> a
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    float i -> i
    float j -> j
    float k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    float r -> r
    float s -> s
    float t -> t
    long u -> u
    long v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    boolean C -> C
    android.view.animation.Interpolator D -> D
    boolean E -> E
    float F -> F
    float G -> G
    int H -> H
    float I -> I
    float J -> J
    float[] K -> K
    float[] L -> L
    float M -> M
    float N -> N
    float O -> O
    boolean P -> P
    float Q -> Q
    float R -> R
    void a(android.view.animation.Interpolator) -> a
    float b(float) -> b
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    int c() -> c
    float d() -> d
    float e() -> e
    float f() -> f
    float g() -> g
    boolean h() -> h
    void a(int,int,float,float,float,int,int,float,float,float,long) -> a
    void a(int,int,int,int,int,int,int,int) -> a
    double c(float) -> c
    int d(float) -> d
    double e(float) -> e
    float a(float) -> a
    int i() -> i
    int j() -> j
    void b(boolean) -> b
    boolean k() -> k
com.amap.api.mapcore.p -> com.amap.api.mapcore.p:
    com.amap.api.mapcore.p$a a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    com.amap.api.maps.model.LatLngBounds i -> i
    int j -> j
    int k -> k
    int l -> l
    android.graphics.Point m -> m
    boolean n -> n
    com.autonavi.amap.mapcore.IPoint o -> o
    boolean p -> p
    com.amap.api.mapcore.p a() -> a
    com.amap.api.mapcore.p b() -> b
    com.amap.api.mapcore.p c() -> c
    com.amap.api.mapcore.p a(float,float) -> a
    com.amap.api.mapcore.p a(float) -> a
    com.amap.api.mapcore.p b(float) -> b
    com.amap.api.mapcore.p a(float,android.graphics.Point) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.mapcore.p a(com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.p c(float) -> c
    com.amap.api.mapcore.p d(float) -> d
    com.amap.api.mapcore.p a(float,com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.LatLng,float) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.LatLng,float,float,float) -> a
    com.amap.api.mapcore.p a(com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.LatLngBounds,int) -> a
    com.amap.api.mapcore.p a(com.amap.api.maps.model.LatLngBounds,int,int,int) -> a
com.amap.api.mapcore.p$a -> com.amap.api.mapcore.p$a:
    com.amap.api.mapcore.p$a a -> a
    com.amap.api.mapcore.p$a b -> b
    com.amap.api.mapcore.p$a c -> c
    com.amap.api.mapcore.p$a d -> d
    com.amap.api.mapcore.p$a e -> e
    com.amap.api.mapcore.p$a f -> f
    com.amap.api.mapcore.p$a g -> g
    com.amap.api.mapcore.p$a h -> h
    com.amap.api.mapcore.p$a i -> i
    com.amap.api.mapcore.p$a j -> j
    com.amap.api.mapcore.p$a k -> k
    com.amap.api.mapcore.p$a l -> l
    com.amap.api.mapcore.p$a m -> m
    com.amap.api.mapcore.p$a n -> n
    com.amap.api.mapcore.p$a o -> o
    com.amap.api.mapcore.p$a[] p -> p
    com.amap.api.mapcore.p$a[] values() -> values
    com.amap.api.mapcore.p$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.q -> com.amap.api.mapcore.q:
    com.amap.api.maps.model.LatLng a -> a
    double b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String h -> h
    com.amap.api.mapcore.ab i -> i
    java.nio.FloatBuffer j -> j
    int k -> k
    boolean l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.aj) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    float b(double) -> b
    double c(double) -> c
    void j() -> j
    boolean b(com.amap.api.maps.model.LatLng) -> b
    boolean k() -> k
com.amap.api.mapcore.r -> com.amap.api.mapcore.r:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView d -> d
    com.amap.api.mapcore.ab e -> e
    void a() -> a
    void b() -> b
    void a(boolean) -> a
com.amap.api.mapcore.r$1 -> com.amap.api.mapcore.r$1:
    com.amap.api.mapcore.r a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.s -> com.amap.api.mapcore.s:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.amap.api.mapcore.s$a f -> f
    com.amap.api.mapcore.util.bw g -> g
com.amap.api.mapcore.s$a -> com.amap.api.mapcore.s$a:
    com.amap.api.mapcore.s$a a -> a
    com.amap.api.mapcore.s$a b -> b
    com.amap.api.mapcore.s$a c -> c
    com.amap.api.mapcore.s$a d -> d
    com.amap.api.mapcore.s$a[] e -> e
    com.amap.api.mapcore.s$a[] values() -> values
    com.amap.api.mapcore.s$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.t -> com.amap.api.mapcore.t:
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.amap.api.mapcore.t$a a -> a
    boolean a(com.amap.api.mapcore.v) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.amap.api.mapcore.t$a -> com.amap.api.mapcore.t$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.u -> com.amap.api.mapcore.u:
    void c(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> c
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
com.amap.api.mapcore.util.a -> com.amap.api.mapcore.util.a:
    boolean b -> b
    double a -> a
    com.amap.api.maps.model.LatLng a(android.content.Context,com.amap.api.maps.model.LatLng) -> a
    com.autonavi.amap.mapcore.DPoint a(com.autonavi.amap.mapcore.DPoint,boolean) -> a
    com.amap.api.maps.model.LatLng b(android.content.Context,com.amap.api.maps.model.LatLng) -> b
    double a(double,double) -> a
    double b(double,double) -> b
    com.autonavi.amap.mapcore.DPoint c(double,double) -> c
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    double a(double) -> a
    double b(double) -> b
    com.autonavi.amap.mapcore.DPoint d(double,double) -> d
    double a(double,int) -> a
    com.autonavi.amap.mapcore.DPoint a(com.autonavi.amap.mapcore.DPoint,int) -> a
    com.autonavi.amap.mapcore.DPoint a(double,double,double,double) -> a
com.amap.api.mapcore.util.aa -> com.amap.api.mapcore.util.aa:
    com.amap.api.mapcore.util.aa a -> a
    com.amap.api.mapcore.util.cp b -> b
    android.content.Context c -> c
    com.amap.api.mapcore.util.aa a(android.content.Context) -> a
    com.amap.api.mapcore.util.cp b(android.content.Context) -> b
    boolean b() -> b
    java.util.ArrayList a() -> a
    void a(com.amap.api.mapcore.util.s) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.util.List a(java.lang.String) -> a
    java.util.List b(java.lang.String) -> b
    java.util.List a(java.util.List) -> a
    void c(java.lang.String) -> c
    void a(java.lang.String,int,long,long,long) -> a
    void a(java.lang.String,int,long,long[],long[]) -> a
    long[] a(java.lang.String,int) -> a
    int d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    boolean f(java.lang.String) -> f
com.amap.api.mapcore.util.ab -> com.amap.api.mapcore.util.ab:
    java.io.RandomAccessFile a -> a
    int a(byte[]) -> a
    void a() -> a
com.amap.api.mapcore.util.ac -> com.amap.api.mapcore.util.ac:
    long a(java.io.File,java.io.File,long,long,com.amap.api.mapcore.util.ac$a) -> a
    float a(long,long) -> a
com.amap.api.mapcore.util.ac$a -> com.amap.api.mapcore.util.ac$a:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,float) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.ad -> com.amap.api.mapcore.util.ad:
    void o() -> o
    void p() -> p
    void a(long) -> a
    void a(java.lang.String) -> a
    void q() -> q
com.amap.api.mapcore.util.ae -> com.amap.api.mapcore.util.ae:
    com.amap.api.mapcore.util.af a -> a
    long b -> b
    long c -> c
    long d -> d
    boolean e -> e
    android.content.Context i -> i
    com.amap.api.mapcore.util.aa f -> f
    com.amap.api.mapcore.util.ai j -> j
    java.lang.String k -> k
    com.amap.api.mapcore.util.dm l -> l
    com.amap.api.mapcore.util.ab m -> m
    long g -> g
    com.amap.api.mapcore.util.ae$a h -> h
    void f() -> f
    void g() -> g
    void a() -> a
    boolean h() -> h
    void i() -> i
    long b() -> b
    void j() -> j
    void k() -> k
    void a(long) -> a
    boolean l() -> l
    void a(int) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void m() -> m
    void a(java.lang.Throwable) -> a
    void a(byte[],long) -> a
    void a(com.amap.api.mapcore.util.ae$a) -> a
com.amap.api.mapcore.util.ae$a -> com.amap.api.mapcore.util.ae$a:
    void d() -> d
com.amap.api.mapcore.util.af -> com.amap.api.mapcore.util.af:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
com.amap.api.mapcore.util.ag -> com.amap.api.mapcore.util.ag:
    com.amap.api.mapcore.util.ag$b a -> a
    void a() -> a
    void b() -> b
    void a(com.amap.api.mapcore.util.ag$b) -> a
    void a(java.io.File,java.io.File,com.amap.api.mapcore.util.ag$c,com.amap.api.mapcore.util.ag$b) -> a
    void a(java.io.File,java.util.zip.ZipInputStream,long,com.amap.api.mapcore.util.ag$c,com.amap.api.mapcore.util.ag$a) -> a
    boolean a(java.lang.String) -> a
    int a(java.io.File,java.util.zip.ZipInputStream,long,long,com.amap.api.mapcore.util.ag$c,com.amap.api.mapcore.util.ag$a) -> a
    void a(java.io.File) -> a
com.amap.api.mapcore.util.ag$1 -> com.amap.api.mapcore.util.ag$1:
    com.amap.api.mapcore.util.ad a -> a
    void a(long) -> a
    void a() -> a
com.amap.api.mapcore.util.ag$a -> com.amap.api.mapcore.util.ag$a:
    boolean a -> a
com.amap.api.mapcore.util.ag$b -> com.amap.api.mapcore.util.ag$b:
    java.lang.String b -> b
    java.lang.String c -> c
    com.amap.api.mapcore.util.ad d -> d
    com.amap.api.mapcore.util.ag$a e -> e
    java.lang.String f -> f
    com.amap.api.mapcore.util.ag a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.amap.api.mapcore.util.ad d() -> d
    com.amap.api.mapcore.util.ag$a e() -> e
    void f() -> f
com.amap.api.mapcore.util.ag$c -> com.amap.api.mapcore.util.ag$c:
    void a(long) -> a
    void a() -> a
com.amap.api.mapcore.util.ah -> com.amap.api.mapcore.util.ah:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    long a() -> a
    java.util.List c(java.lang.String) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince a(org.json.JSONObject) -> a
    java.util.ArrayList b(org.json.JSONObject) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity c(org.json.JSONObject) -> c
    long a(java.io.File) -> a
    boolean b(java.io.File) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.io.File) -> c
    void a(java.lang.String,android.content.Context) -> a
    void d(java.lang.String) -> d
com.amap.api.mapcore.util.ai -> com.amap.api.mapcore.util.ai:
    void l() -> l
    void a(long,long) -> a
    void m() -> m
    void a(com.amap.api.mapcore.util.ai$a) -> a
    void n() -> n
com.amap.api.mapcore.util.ai$a -> com.amap.api.mapcore.util.ai$a:
    com.amap.api.mapcore.util.ai$a a -> a
    com.amap.api.mapcore.util.ai$a b -> b
    com.amap.api.mapcore.util.ai$a c -> c
    com.amap.api.mapcore.util.ai$a d -> d
    com.amap.api.mapcore.util.ai$a e -> e
    int f -> f
    com.amap.api.mapcore.util.ai$a[] g -> g
    com.amap.api.mapcore.util.ai$a[] values() -> values
    com.amap.api.mapcore.util.ai$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.aj -> com.amap.api.mapcore.util.aj:
    java.lang.String a -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.ak -> com.amap.api.mapcore.util.ak:
    java.lang.Object a -> a
    int b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    int j -> j
    int e -> e
    int f -> f
    void a(android.content.Context,java.lang.Object) -> a
    java.lang.Object b(java.lang.String) -> b
    java.lang.Object d() -> d
    java.lang.Object h() -> h
    java.lang.Object b(byte[]) -> b
    java.util.Map c() -> c
    java.lang.Object a(byte[]) -> a
    java.lang.Object e() -> e
com.amap.api.mapcore.util.al -> com.amap.api.mapcore.util.al:
    void a() -> a
com.amap.api.mapcore.util.am -> com.amap.api.mapcore.util.am:
    int a -> a
    com.amap.api.mapcore.util.g b -> b
    int b() -> b
    boolean a(com.amap.api.mapcore.util.am) -> a
    void b(com.amap.api.mapcore.util.am) -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a() -> a
    void g() -> g
    void h() -> h
    void i() -> i
com.amap.api.mapcore.util.an -> com.amap.api.mapcore.util.an:
    void c() -> c
    void h() -> h
com.amap.api.mapcore.util.ao -> com.amap.api.mapcore.util.ao:
    void c() -> c
com.amap.api.mapcore.util.ap -> com.amap.api.mapcore.util.ap:
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.aq -> com.amap.api.mapcore.util.aq:
    void c() -> c
    void f() -> f
    void i() -> i
    void g() -> g
com.amap.api.mapcore.util.ar -> com.amap.api.mapcore.util.ar:
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.as -> com.amap.api.mapcore.util.as:
    void c() -> c
    void e() -> e
com.amap.api.mapcore.util.at -> com.amap.api.mapcore.util.at:
    void c() -> c
    void d() -> d
    void i() -> i
    void g() -> g
com.amap.api.mapcore.util.au -> com.amap.api.mapcore.util.au:
    void c() -> c
    void d() -> d
    void f() -> f
    void g() -> g
com.amap.api.mapcore.util.av -> com.amap.api.mapcore.util.av:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.amap.api.mapcore.util.aw -> com.amap.api.mapcore.util.aw:
    java.util.concurrent.ThreadFactory a -> a
    java.util.concurrent.BlockingQueue e -> e
    java.util.concurrent.Executor b -> b
    java.util.concurrent.Executor c -> c
    java.util.concurrent.Executor d -> d
    com.amap.api.mapcore.util.aw$b f -> f
    java.util.concurrent.Executor g -> g
    com.amap.api.mapcore.util.aw$e h -> h
    java.util.concurrent.FutureTask i -> i
    com.amap.api.mapcore.util.aw$d j -> j
    java.util.concurrent.atomic.AtomicBoolean k -> k
    java.util.concurrent.atomic.AtomicBoolean l -> l
    void c(java.lang.Object) -> c
    java.lang.Object d(java.lang.Object) -> d
    com.amap.api.mapcore.util.aw$d a() -> a
    java.lang.Object a(java.lang.Object[]) -> a
    void b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object[]) -> b
    void b(java.lang.Object) -> b
    void c() -> c
    boolean d() -> d
    boolean a(boolean) -> a
    com.amap.api.mapcore.util.aw c(java.lang.Object[]) -> c
    com.amap.api.mapcore.util.aw a(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void e(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean a(com.amap.api.mapcore.util.aw) -> a
    java.lang.Object a(com.amap.api.mapcore.util.aw,java.lang.Object) -> a
    java.util.concurrent.FutureTask b(com.amap.api.mapcore.util.aw) -> b
    void b(com.amap.api.mapcore.util.aw,java.lang.Object) -> b
    void c(com.amap.api.mapcore.util.aw,java.lang.Object) -> c
com.amap.api.mapcore.util.aw$1 -> com.amap.api.mapcore.util.aw$1:
    com.amap.api.mapcore.util.aw a -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.aw$2 -> com.amap.api.mapcore.util.aw$2:
    com.amap.api.mapcore.util.aw a -> a
    void done() -> done
com.amap.api.mapcore.util.aw$a -> com.amap.api.mapcore.util.aw$a:
    com.amap.api.mapcore.util.aw a -> a
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.aw$b -> com.amap.api.mapcore.util.aw$b:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.aw$c -> com.amap.api.mapcore.util.aw$c:
    java.util.ArrayDeque a -> a
    java.lang.Runnable b -> b
    void execute(java.lang.Runnable) -> execute
    void a() -> a
com.amap.api.mapcore.util.aw$c$1 -> com.amap.api.mapcore.util.aw$c$1:
    java.lang.Runnable a -> a
    com.amap.api.mapcore.util.aw$c b -> b
    void run() -> run
com.amap.api.mapcore.util.aw$d -> com.amap.api.mapcore.util.aw$d:
    com.amap.api.mapcore.util.aw$d a -> a
    com.amap.api.mapcore.util.aw$d b -> b
    com.amap.api.mapcore.util.aw$d c -> c
    com.amap.api.mapcore.util.aw$d[] d -> d
    com.amap.api.mapcore.util.aw$d[] values() -> values
    com.amap.api.mapcore.util.aw$d valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.aw$e -> com.amap.api.mapcore.util.aw$e:
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.ax -> com.amap.api.mapcore.util.ax:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.amap.api.mapcore.util.ay -> com.amap.api.mapcore.util.ay:
    int[] a -> a
com.amap.api.mapcore.util.az -> com.amap.api.mapcore.util.az:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(com.autonavi.amap.mapcore.DPoint) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.amap.api.mapcore.util.az) -> a
    boolean b(com.amap.api.mapcore.util.az) -> b
com.amap.api.mapcore.util.b -> com.amap.api.mapcore.util.b:
    android.content.Context a -> a
    boolean b -> b
    android.view.MotionEvent c -> c
    android.view.MotionEvent d -> d
    float e -> e
    float f -> f
    long g -> g
    boolean a(android.view.MotionEvent) -> a
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void b(android.view.MotionEvent) -> b
    int c(android.view.MotionEvent) -> c
    void a() -> a
com.amap.api.mapcore.util.ba -> com.amap.api.mapcore.util.ba:
    com.amap.api.mapcore.util.bk a -> a
    short[] b -> b
    float[] c -> c
    int d -> d
    com.amap.api.mapcore.util.bf e -> e
    com.amap.api.mapcore.util.bk f -> f
    com.amap.api.mapcore.util.bk a(float[]) -> a
    com.amap.api.mapcore.util.bk a(float[],int,int) -> a
    void a() -> a
    int a(int) -> a
    int b() -> b
    boolean b(int) -> b
    void c(int) -> c
    int d(int) -> d
    int e(int) -> e
    boolean b(float[],int,int) -> b
    int a(float,float,float,float,float,float) -> a
com.amap.api.mapcore.util.bb -> com.amap.api.mapcore.util.bb:
    android.graphics.Bitmap$CompressFormat a -> a
    com.amap.api.mapcore.util.df b -> b
    com.amap.api.mapcore.util.bh c -> c
    com.amap.api.mapcore.util.bb$a d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.amap.api.mapcore.util.bb a(com.amap.api.mapcore.util.bb$a) -> a
    void b(com.amap.api.mapcore.util.bb$a) -> b
    void a() -> a
    void b(java.io.File) -> b
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap b(java.lang.String) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    int a(android.graphics.Bitmap) -> a
    boolean e() -> e
    java.io.File a(android.content.Context) -> a
    long a(java.io.File) -> a
    java.util.HashMap a(com.amap.api.mapcore.util.bb) -> a
    android.graphics.Bitmap$CompressFormat f() -> f
com.amap.api.mapcore.util.bb$1 -> com.amap.api.mapcore.util.bb$1:
    com.amap.api.mapcore.util.bb a -> a
    void a(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(java.lang.String,android.graphics.Bitmap) -> a
    int a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.amap.api.mapcore.util.bb$a -> com.amap.api.mapcore.util.bb$a:
    int a -> a
    int b -> b
    java.io.File c -> c
    android.graphics.Bitmap$CompressFormat d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    void a(int) -> a
    void b(int) -> b
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void b(boolean) -> b
com.amap.api.mapcore.util.bc -> com.amap.api.mapcore.util.bc:
    com.amap.api.maps.model.TileProvider e -> e
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.model.TileProvider) -> a
    void b(android.content.Context) -> b
    android.graphics.Bitmap c(com.amap.api.mapcore.bn$a) -> c
    android.graphics.Bitmap a(java.lang.Object) -> a
com.amap.api.mapcore.util.bd -> com.amap.api.mapcore.util.bd:
    int a -> a
    int b -> b
    void a(int,int) -> a
    android.graphics.Bitmap a(int) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    android.graphics.Bitmap a(android.content.res.Resources,int,int,int,com.amap.api.mapcore.util.bb) -> a
    android.graphics.Bitmap a(java.io.FileDescriptor,int,int,com.amap.api.mapcore.util.bb) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
com.amap.api.mapcore.util.be -> com.amap.api.mapcore.util.be:
    com.amap.api.mapcore.util.bb a -> a
    com.amap.api.mapcore.util.bb$a b -> b
    boolean e -> e
    boolean c -> c
    java.lang.Object f -> f
    android.content.res.Resources d -> d
    void a(boolean,com.amap.api.mapcore.bn$a) -> a
    void a(com.amap.api.mapcore.util.bb$a) -> a
    void a(boolean) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    com.amap.api.mapcore.util.bb a() -> a
    void a(com.amap.api.mapcore.bn$a) -> a
    com.amap.api.mapcore.util.be$a c(com.amap.api.mapcore.bn$a) -> c
    void b(boolean) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    java.lang.Object a(com.amap.api.mapcore.util.be) -> a
    com.amap.api.mapcore.util.bb b(com.amap.api.mapcore.util.be) -> b
    boolean c(com.amap.api.mapcore.util.be) -> c
    com.amap.api.mapcore.util.be$a b(com.amap.api.mapcore.bn$a) -> b
com.amap.api.mapcore.util.be$a -> com.amap.api.mapcore.util.be$a:
    java.lang.ref.WeakReference e -> e
    com.amap.api.mapcore.util.be a -> a
    android.graphics.Bitmap a(java.lang.Boolean[]) -> a
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    com.amap.api.mapcore.bn$a e() -> e
    void b(java.lang.Object) -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.be$b -> com.amap.api.mapcore.util.be$b:
    com.amap.api.mapcore.util.be a -> a
    java.lang.Void d(java.lang.Object[]) -> d
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.bf -> com.amap.api.mapcore.util.bf:
    int[] a -> a
    int b -> b
    boolean c -> c
    void a(int) -> a
    int b(int) -> b
    void a() -> a
    int[] c(int) -> c
    int[] d(int) -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bg -> com.amap.api.mapcore.util.bg:
    java.lang.String a -> a
    void a(int,java.lang.Object[]) -> a
    void a(java.lang.String,int,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.bh -> com.amap.api.mapcore.util.bh:
    java.util.LinkedHashMap a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(int) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object b(java.lang.Object) -> b
    int c(java.lang.Object,java.lang.Object) -> c
    int a(java.lang.Object,java.lang.Object) -> a
    void a() -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bi -> com.amap.api.mapcore.util.bi:
    boolean a(double,double) -> a
    boolean a(int,int,int) -> a
com.amap.api.mapcore.util.bj -> com.amap.api.mapcore.util.bj:
    boolean a -> a
    android.content.res.AssetManager a(android.content.Context) -> a
com.amap.api.mapcore.util.bk -> com.amap.api.mapcore.util.bk:
    short[] a -> a
    int b -> b
    boolean c -> c
    void a(short) -> a
    short a(int) -> a
    short b(int) -> b
    void a() -> a
    short[] c(int) -> c
    short[] d(int) -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bl -> com.amap.api.mapcore.util.bl:
    int[] a -> a
    double[] b -> b
    android.os.Handler c -> c
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.graphics.drawable.Drawable) -> a
    java.lang.String a(java.lang.String,java.lang.Object) -> a
    float a(float,float) -> a
    float a(float) -> a
    java.nio.FloatBuffer a(float[]) -> a
    java.nio.FloatBuffer a(float[],java.nio.FloatBuffer) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> a
    int b(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> b
    int a(int) -> a
    java.lang.String a(java.lang.String[]) -> a
    int a(java.lang.Object[]) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,float) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String b(int) -> b
    boolean c(android.content.Context) -> c
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    void a(javax.microedition.khronos.opengles.GL10,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    java.lang.String a(java.io.File) -> a
    void a(java.lang.String) -> a
    boolean a(com.amap.api.maps.model.LatLng,java.util.List) -> a
    double a(double,double,double,double,double,double) -> a
    boolean b(double,double,double,double,double,double) -> b
    boolean a(double,double,double,double,double,double,double,double) -> a
    java.util.List a(com.amap.api.mapcore.ab,java.util.List,boolean) -> a
    com.autonavi.amap.mapcore.FPoint[] a(com.amap.api.mapcore.ab) -> a
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    float a(double,double,double,double) -> a
    double a(double,double) -> a
    com.amap.api.mapcore.util.bw e() -> e
    void b(android.view.View) -> b
    android.graphics.Bitmap a(android.view.View) -> a
    com.autonavi.amap.mapcore.DPoint a(com.amap.api.maps.model.LatLng) -> a
    float[] a(com.amap.api.mapcore.ab,int,com.autonavi.amap.mapcore.FPoint,float,int,int,float,float) -> a
com.amap.api.mapcore.util.bm -> com.amap.api.mapcore.util.bm:
    java.lang.String a -> a
    int b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.bn -> com.amap.api.mapcore.util.bn:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String f(android.content.Context) -> f
com.amap.api.mapcore.util.bo -> com.amap.api.mapcore.util.bo:
    int a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.util.bw c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean a(android.content.Context,com.amap.api.mapcore.util.bw,boolean) -> a
    boolean a(android.content.Context,com.amap.api.mapcore.util.bw) -> a
    boolean b(android.content.Context,com.amap.api.mapcore.util.bw) -> b
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean a(byte[]) -> a
    java.util.Map a(android.content.Context) -> a
com.amap.api.mapcore.util.bp -> com.amap.api.mapcore.util.bp:
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bw,java.util.Map,boolean) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
    java.lang.String b(android.content.Context,byte[]) -> b
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bw) -> a
    void a(java.io.ByteArrayOutputStream,java.lang.String) -> a
    void a(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.amap.api.mapcore.util.bq -> com.amap.api.mapcore.util.bq:
    com.amap.api.mapcore.util.bq$a a(byte[]) -> a
    com.amap.api.mapcore.util.bq$a a(android.content.Context,com.amap.api.mapcore.util.bw,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void a(org.json.JSONObject,com.amap.api.mapcore.util.bq$a$b) -> a
    void a(org.json.JSONObject,com.amap.api.mapcore.util.bq$a$c) -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
com.amap.api.mapcore.util.bq$a -> com.amap.api.mapcore.util.bq$a:
    org.json.JSONObject a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    com.amap.api.mapcore.util.bq$a$a d -> d
    com.amap.api.mapcore.util.bq$a$c e -> e
    com.amap.api.mapcore.util.bq$a$b f -> f
com.amap.api.mapcore.util.bq$a$a -> com.amap.api.mapcore.util.bq$a$a:
    boolean a -> a
    boolean b -> b
com.amap.api.mapcore.util.bq$a$b -> com.amap.api.mapcore.util.bq$a$b:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.mapcore.util.bq$a$c -> com.amap.api.mapcore.util.bq$a$c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.amap.api.mapcore.util.bq$b -> com.amap.api.mapcore.util.bq$b:
    android.content.Context a -> a
    com.amap.api.mapcore.util.bw b -> b
    java.lang.String c -> c
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.br -> com.amap.api.mapcore.util.br:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    android.net.NetworkInfo n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.util.List a(java.util.List) -> a
    boolean a(boolean) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String) -> a
com.amap.api.mapcore.util.br$a -> com.amap.api.mapcore.util.br$a:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.amap.api.mapcore.util.bs -> com.amap.api.mapcore.util.bs:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] a(byte[],java.security.Key) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String b(byte[]) -> b
com.amap.api.mapcore.util.bt -> com.amap.api.mapcore.util.bt:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String c(java.lang.String) -> c
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
com.amap.api.mapcore.util.bu -> com.amap.api.mapcore.util.bu:
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy b(android.content.Context) -> b
    boolean a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    int b() -> b
com.amap.api.mapcore.util.bv -> com.amap.api.mapcore.util.bv:
    com.amap.api.mapcore.util.dm a -> a
    com.amap.api.mapcore.util.bv$a b -> b
    java.io.RandomAccessFile c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    void a() -> a
    void run() -> run
    void a(byte[],long) -> a
    void d() -> d
    void e() -> e
    void a(java.lang.Throwable) -> a
    void b() -> b
com.amap.api.mapcore.util.bv$a -> com.amap.api.mapcore.util.bv$a:
    java.lang.String a -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.bw -> com.amap.api.mapcore.util.bw:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(boolean) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    java.lang.String[] f() -> f
com.amap.api.mapcore.util.bw$1 -> com.amap.api.mapcore.util.bw$1:
com.amap.api.mapcore.util.bw$a -> com.amap.api.mapcore.util.bw$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    com.amap.api.mapcore.util.bw$a a(boolean) -> a
    com.amap.api.mapcore.util.bw$a a(java.lang.String) -> a
    com.amap.api.mapcore.util.bw$a a(java.lang.String[]) -> a
    com.amap.api.mapcore.util.bw a() -> a
    java.lang.String a(com.amap.api.mapcore.util.bw$a) -> a
    java.lang.String b(com.amap.api.mapcore.util.bw$a) -> b
    java.lang.String c(com.amap.api.mapcore.util.bw$a) -> c
    boolean d(com.amap.api.mapcore.util.bw$a) -> d
    java.lang.String e(com.amap.api.mapcore.util.bw$a) -> e
    java.lang.String[] f(com.amap.api.mapcore.util.bw$a) -> f
com.amap.api.mapcore.util.bx -> com.amap.api.mapcore.util.bx:
    boolean a(org.json.JSONObject,java.lang.String) -> a
    byte[] a() -> a
    java.lang.String a(java.util.Map) -> a
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.util.Map) -> b
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    byte[] f(byte[]) -> f
com.amap.api.mapcore.util.by -> com.amap.api.mapcore.util.by:
    java.util.Map a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(java.util.Map) -> a
    void a(java.lang.String) -> a
    void b(java.util.Map) -> b
    java.lang.String a() -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
com.amap.api.mapcore.util.bz -> com.amap.api.mapcore.util.bz:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
com.amap.api.mapcore.util.c -> com.amap.api.mapcore.util.c:
    boolean d -> d
    com.amap.api.mapcore.util.c$a e -> e
    java.lang.reflect.Method a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    long f -> f
    boolean g -> g
    boolean a() -> a
    long b() -> b
    void c() -> c
    boolean a(android.view.MotionEvent) -> a
com.amap.api.mapcore.util.c$a -> com.amap.api.mapcore.util.c$a:
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a(float,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.util.ca -> com.amap.api.mapcore.util.ca:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.mapcore.util.cb -> com.amap.api.mapcore.util.cb:
    android.content.Context d -> d
    java.util.concurrent.ExecutorService e -> e
    java.util.concurrent.ExecutorService a() -> a
    com.amap.api.mapcore.util.cb a(android.content.Context,com.amap.api.mapcore.util.bw) -> a
    com.amap.api.mapcore.util.cb b() -> b
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void c() -> c
    void d() -> d
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.mapcore.util.bw,boolean) -> a
    android.content.Context a(com.amap.api.mapcore.util.cb) -> a
com.amap.api.mapcore.util.cb$1 -> com.amap.api.mapcore.util.cb$1:
    android.content.Context a -> a
    com.amap.api.mapcore.util.bw b -> b
    boolean c -> c
    com.amap.api.mapcore.util.cb d -> d
    void run() -> run
com.amap.api.mapcore.util.cb$a -> com.amap.api.mapcore.util.cb$a:
    android.content.Context a -> a
    void a() -> a
com.amap.api.mapcore.util.cc -> com.amap.api.mapcore.util.cc:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.cd -> com.amap.api.mapcore.util.cd:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    int d -> d
    com.amap.api.mapcore.util.cd$a e -> e
    int a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    com.amap.api.mapcore.util.di a(com.amap.api.mapcore.util.cw) -> a
    java.lang.String a(java.util.List) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
com.amap.api.mapcore.util.cd$1 -> com.amap.api.mapcore.util.cd$1:
com.amap.api.mapcore.util.cd$a -> com.amap.api.mapcore.util.cd$a:
    com.amap.api.mapcore.util.cw b -> b
    com.amap.api.mapcore.util.cd a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.ce -> com.amap.api.mapcore.util.ce:
    com.amap.api.mapcore.util.ce a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    boolean c -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.mapcore.util.bw,boolean) -> a
com.amap.api.mapcore.util.cf -> com.amap.api.mapcore.util.cf:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.cg -> com.amap.api.mapcore.util.cg:
    com.amap.api.mapcore.util.cg$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.mapcore.util.di a(com.amap.api.mapcore.util.cw) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.mapcore.util.cg$a -> com.amap.api.mapcore.util.cg$a:
    com.amap.api.mapcore.util.cw b -> b
    com.amap.api.mapcore.util.cg a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.ch -> com.amap.api.mapcore.util.ch:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.ci -> com.amap.api.mapcore.util.ci:
    com.amap.api.mapcore.util.ci$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.mapcore.util.di a(com.amap.api.mapcore.util.cw) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.mapcore.util.ci$a -> com.amap.api.mapcore.util.ci$a:
    com.amap.api.mapcore.util.cw b -> b
    com.amap.api.mapcore.util.ci a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.cj -> com.amap.api.mapcore.util.cj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.amap.api.mapcore.util.cj$1 -> com.amap.api.mapcore.util.cj$1:
    int a -> a
    android.content.Context b -> b
    java.lang.Throwable c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.amap.api.mapcore.util.cj$2 -> com.amap.api.mapcore.util.cj$2:
    android.content.Context a -> a
    void run() -> run
com.amap.api.mapcore.util.ck -> com.amap.api.mapcore.util.ck:
    com.amap.api.mapcore.util.df a -> a
    com.amap.api.mapcore.util.ck a(android.content.Context,int) -> a
    void b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
    void a(com.amap.api.mapcore.util.cw,int) -> a
    int b(java.lang.String) -> b
    void a(java.util.List,com.amap.api.mapcore.util.cw,int) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(java.util.List,android.content.Context) -> a
    java.lang.String c(java.lang.String) -> c
    void c() -> c
    com.amap.api.mapcore.util.df a(android.content.Context,java.lang.String) -> a
com.amap.api.mapcore.util.cl -> com.amap.api.mapcore.util.cl:
    byte[] a -> a
    java.lang.String e() -> e
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
    byte[] a_() -> a_
com.amap.api.mapcore.util.cm -> com.amap.api.mapcore.util.cm:
    com.amap.api.mapcore.util.bw a -> a
    com.amap.api.mapcore.util.cm a(int) -> a
    void a(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    void a(com.amap.api.mapcore.util.bw) -> a
    java.util.List b(android.content.Context) -> b
    void a(com.amap.api.mapcore.util.cw,java.lang.String,java.lang.String,int,boolean) -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    com.amap.api.mapcore.util.di a(com.amap.api.mapcore.util.cw) -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bw) -> a
    java.lang.String c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.amap.api.mapcore.util.cw) -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.amap.api.mapcore.util.cn -> com.amap.api.mapcore.util.cn:
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a(long) -> a
com.amap.api.mapcore.util.co -> com.amap.api.mapcore.util.co:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String b() -> b
    int c() -> c
com.amap.api.mapcore.util.cp -> com.amap.api.mapcore.util.cp:
    com.amap.api.mapcore.util.ct a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.amap.api.mapcore.util.co c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    android.database.sqlite.SQLiteDatabase b(boolean) -> b
    java.lang.String a(java.util.Map) -> a
    void a(java.lang.String,com.amap.api.mapcore.util.cq) -> a
    void b(java.lang.String,com.amap.api.mapcore.util.cq) -> b
    void a(java.lang.String,com.amap.api.mapcore.util.cq,boolean) -> a
    void a(com.amap.api.mapcore.util.cq,java.lang.String) -> a
    void a(com.amap.api.mapcore.util.cq) -> a
    void a(com.amap.api.mapcore.util.cq,boolean) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.amap.api.mapcore.util.cq) -> a
    void a(java.util.List) -> a
    java.util.List b(java.lang.String,com.amap.api.mapcore.util.cq,boolean) -> b
    java.util.List c(java.lang.String,com.amap.api.mapcore.util.cq) -> c
com.amap.api.mapcore.util.cq -> com.amap.api.mapcore.util.cq:
    android.content.ContentValues a() -> a
    java.lang.Object b(android.database.Cursor) -> b
    void a(java.lang.Object) -> a
    java.lang.String b() -> b
com.amap.api.mapcore.util.cr -> com.amap.api.mapcore.util.cr:
    java.lang.String b() -> b
com.amap.api.mapcore.util.cs -> com.amap.api.mapcore.util.cs:
    java.lang.String b() -> b
com.amap.api.mapcore.util.ct -> com.amap.api.mapcore.util.ct:
    com.amap.api.mapcore.util.co a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.amap.api.mapcore.util.cu -> com.amap.api.mapcore.util.cu:
    java.lang.String b() -> b
com.amap.api.mapcore.util.cv -> com.amap.api.mapcore.util.cv:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    com.amap.api.mapcore.util.cv u -> u
    com.amap.api.mapcore.util.cv a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String b() -> b
    int c() -> c
com.amap.api.mapcore.util.cw -> com.amap.api.mapcore.util.cw:
    com.amap.api.mapcore.util.cp a -> a
    com.amap.api.mapcore.util.cx a(int) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void c(java.lang.String,int) -> c
    void a(com.amap.api.mapcore.util.cy,int) -> a
    java.util.List a(int,int) -> a
    void b(com.amap.api.mapcore.util.cy,int) -> b
    void a(com.amap.api.mapcore.util.cy,com.amap.api.mapcore.util.cx) -> a
    void b(com.amap.api.mapcore.util.cy,com.amap.api.mapcore.util.cx) -> b
com.amap.api.mapcore.util.cx -> com.amap.api.mapcore.util.cx:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.mapcore.util.cy e -> e
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.cy a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.cy) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.cy -> com.amap.api.mapcore.util.cy:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
com.amap.api.mapcore.util.cz -> com.amap.api.mapcore.util.cz:
    com.amap.api.mapcore.util.cp a -> a
    android.content.Context b -> b
    com.amap.api.mapcore.util.cp a(android.content.Context,boolean) -> a
    void a(com.amap.api.mapcore.util.bw) -> a
    java.util.List a() -> a
com.amap.api.mapcore.util.d -> com.amap.api.mapcore.util.d:
    com.amap.api.mapcore.util.d$a l -> l
    boolean m -> m
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void a() -> a
    float b() -> b
com.amap.api.mapcore.util.d$a -> com.amap.api.mapcore.util.d$a:
    boolean a(com.amap.api.mapcore.util.d) -> a
    boolean b(com.amap.api.mapcore.util.d) -> b
    void c(com.amap.api.mapcore.util.d) -> c
com.amap.api.mapcore.util.da -> com.amap.api.mapcore.util.da:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.mapcore.util.bw g -> g
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.bw a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.bw) -> a
    java.lang.String b() -> b
    java.lang.String[] b(java.lang.String) -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c() -> c
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.db -> com.amap.api.mapcore.util.db:
    com.amap.api.mapcore.util.cp a -> a
    android.content.Context b -> b
    com.amap.api.mapcore.util.cp a(android.content.Context) -> a
    com.amap.api.mapcore.util.dd a() -> a
    void a(com.amap.api.mapcore.util.dd) -> a
com.amap.api.mapcore.util.dc -> com.amap.api.mapcore.util.dc:
    com.amap.api.mapcore.util.dd a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.dd a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.dd) -> a
    java.lang.String b() -> b
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.dd -> com.amap.api.mapcore.util.dd:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    void c(boolean) -> c
    boolean c() -> c
com.amap.api.mapcore.util.de -> com.amap.api.mapcore.util.de:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.mapcore.util.df -> com.amap.api.mapcore.util.df:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    com.amap.api.mapcore.util.di n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    void a(com.amap.api.mapcore.util.di) -> a
    com.amap.api.mapcore.util.df a(java.io.File,int,int,long) -> a
    void e() -> e
    void d(java.lang.String) -> d
    void f() -> f
    void g() -> g
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.amap.api.mapcore.util.df$b a(java.lang.String) -> a
    com.amap.api.mapcore.util.df$a b(java.lang.String) -> b
    com.amap.api.mapcore.util.df$a a(java.lang.String,long) -> a
    void a(com.amap.api.mapcore.util.df$a,boolean) -> a
    boolean h() -> h
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void i() -> i
    void b() -> b
    void close() -> close
    void j() -> j
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.amap.api.mapcore.util.df) -> a
    void b(com.amap.api.mapcore.util.df) -> b
    boolean c(com.amap.api.mapcore.util.df) -> c
    void d(com.amap.api.mapcore.util.df) -> d
    int a(com.amap.api.mapcore.util.df,int) -> a
    int e(com.amap.api.mapcore.util.df) -> e
    java.io.File f(com.amap.api.mapcore.util.df) -> f
    java.io.OutputStream d() -> d
    void a(com.amap.api.mapcore.util.df,com.amap.api.mapcore.util.df$a,boolean) -> a
com.amap.api.mapcore.util.df$a -> com.amap.api.mapcore.util.df$a:
    com.amap.api.mapcore.util.df$c b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.amap.api.mapcore.util.df a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.util.df$c a(com.amap.api.mapcore.util.df$a) -> a
    boolean[] b(com.amap.api.mapcore.util.df$a) -> b
    boolean a(com.amap.api.mapcore.util.df$a,boolean) -> a
com.amap.api.mapcore.util.df$a$a -> com.amap.api.mapcore.util.df$a$a:
    com.amap.api.mapcore.util.df$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.amap.api.mapcore.util.df$b -> com.amap.api.mapcore.util.df$b:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.amap.api.mapcore.util.df a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.amap.api.mapcore.util.df$c -> com.amap.api.mapcore.util.df$c:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.amap.api.mapcore.util.df$a e -> e
    long f -> f
    com.amap.api.mapcore.util.df a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.amap.api.mapcore.util.df$c,boolean) -> a
    com.amap.api.mapcore.util.df$a a(com.amap.api.mapcore.util.df$c,com.amap.api.mapcore.util.df$a) -> a
    void a(com.amap.api.mapcore.util.df$c,java.lang.String[]) -> a
    com.amap.api.mapcore.util.df$a a(com.amap.api.mapcore.util.df$c) -> a
    long[] b(com.amap.api.mapcore.util.df$c) -> b
    java.lang.String c(com.amap.api.mapcore.util.df$c) -> c
    boolean d(com.amap.api.mapcore.util.df$c) -> d
    long e(com.amap.api.mapcore.util.df$c) -> e
    long a(com.amap.api.mapcore.util.df$c,long) -> a
com.amap.api.mapcore.util.dg -> com.amap.api.mapcore.util.dg:
    com.amap.api.mapcore.util.df a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.dh -> com.amap.api.mapcore.util.dh:
    void write(int) -> write
com.amap.api.mapcore.util.di -> com.amap.api.mapcore.util.di:
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.dj -> com.amap.api.mapcore.util.dj:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.amap.api.mapcore.util.dj) -> a
com.amap.api.mapcore.util.dj$1 -> com.amap.api.mapcore.util.dj$1:
    com.amap.api.mapcore.util.dj a -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.dk -> com.amap.api.mapcore.util.dk:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.amap.api.mapcore.util.dl -> com.amap.api.mapcore.util.dl:
    com.amap.api.mapcore.util.dl a -> a
    com.amap.api.mapcore.util.dl a() -> a
    byte[] a(com.amap.api.mapcore.util.dq) -> a
    byte[] b(com.amap.api.mapcore.util.dq) -> b
    void c(com.amap.api.mapcore.util.dq) -> c
    com.amap.api.mapcore.util.ds a(com.amap.api.mapcore.util.dq,boolean) -> a
com.amap.api.mapcore.util.dm -> com.amap.api.mapcore.util.dm:
    com.amap.api.mapcore.util.dn a -> a
    com.amap.api.mapcore.util.dq b -> b
    void a(com.amap.api.mapcore.util.dm$a) -> a
    void a() -> a
com.amap.api.mapcore.util.dm$a -> com.amap.api.mapcore.util.dm$a:
    void a(byte[],long) -> a
    void d() -> d
    void e() -> e
    void a(java.lang.Throwable) -> a
com.amap.api.mapcore.util.dn -> com.amap.api.mapcore.util.dn:
    com.amap.api.mapcore.util.do a -> a
    int b -> b
    int c -> c
    boolean d -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy f -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    void a(com.amap.api.mapcore.util.do) -> a
    void a() -> a
    void a(long) -> a
    void b(long) -> b
    void a(java.lang.String,java.util.Map,java.util.Map,com.amap.api.mapcore.util.dm$a) -> a
    com.amap.api.mapcore.util.ds a(java.lang.String,java.util.Map,java.util.Map) -> a
    com.amap.api.mapcore.util.ds a(java.lang.String,java.util.Map,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    com.amap.api.mapcore.util.ds a(java.net.HttpURLConnection) -> a
    void a(java.util.Map,java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.Map) -> a
com.amap.api.mapcore.util.do -> com.amap.api.mapcore.util.do:
    void a() -> a
com.amap.api.mapcore.util.dp -> com.amap.api.mapcore.util.dp:
    com.amap.api.mapcore.util.dp a -> a
    com.amap.api.mapcore.util.dv b -> b
    android.os.Handler c -> c
    com.amap.api.mapcore.util.dp a(boolean) -> a
    com.amap.api.mapcore.util.dp a(boolean,int) -> a
    byte[] b(com.amap.api.mapcore.util.dq) -> b
    byte[] d(com.amap.api.mapcore.util.dq) -> d
    com.amap.api.mapcore.util.ds b(com.amap.api.mapcore.util.dq,boolean) -> b
    void a(com.amap.api.mapcore.util.bm,com.amap.api.mapcore.util.dr) -> a
    void a(com.amap.api.mapcore.util.ds,com.amap.api.mapcore.util.dr) -> a
    void a(com.amap.api.mapcore.util.dp,com.amap.api.mapcore.util.ds,com.amap.api.mapcore.util.dr) -> a
    void a(com.amap.api.mapcore.util.dp,com.amap.api.mapcore.util.bm,com.amap.api.mapcore.util.dr) -> a
com.amap.api.mapcore.util.dp$1 -> com.amap.api.mapcore.util.dp$1:
    com.amap.api.mapcore.util.dq a -> a
    com.amap.api.mapcore.util.dr b -> b
    com.amap.api.mapcore.util.dp c -> c
    void a() -> a
com.amap.api.mapcore.util.dp$a -> com.amap.api.mapcore.util.dp$a:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.dq -> com.amap.api.mapcore.util.dq:
    int g -> g
    int h -> h
    java.net.Proxy i -> i
    java.lang.String f() -> f
    byte[] g() -> g
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
    void a(int) -> a
    void b(int) -> b
    byte[] a_() -> a_
    void a(java.net.Proxy) -> a
com.amap.api.mapcore.util.dr -> com.amap.api.mapcore.util.dr:
    void a() -> a
    void a(java.util.Map,byte[]) -> a
    void a(com.amap.api.mapcore.util.bm) -> a
com.amap.api.mapcore.util.ds -> com.amap.api.mapcore.util.ds:
    byte[] a -> a
    java.util.Map b -> b
com.amap.api.mapcore.util.dt -> com.amap.api.mapcore.util.dt:
    com.amap.api.mapcore.util.dn a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.amap.api.mapcore.util.du -> com.amap.api.mapcore.util.du:
    com.amap.api.mapcore.util.bm a -> a
    com.amap.api.mapcore.util.dr b -> b
com.amap.api.mapcore.util.dv -> com.amap.api.mapcore.util.dv:
    com.amap.api.mapcore.util.dv a -> a
    java.util.concurrent.ExecutorService b -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    com.amap.api.mapcore.util.dw$a d -> d
    com.amap.api.mapcore.util.dv a(int) -> a
    void a(com.amap.api.mapcore.util.dw) -> a
    void a() -> a
    void b() -> b
    boolean b(com.amap.api.mapcore.util.dw) -> b
    void a(com.amap.api.mapcore.util.dw,java.util.concurrent.Future) -> a
    void a(com.amap.api.mapcore.util.dw,boolean) -> a
    void a(com.amap.api.mapcore.util.dv,com.amap.api.mapcore.util.dw,boolean) -> a
com.amap.api.mapcore.util.dw -> com.amap.api.mapcore.util.dw:
    com.amap.api.mapcore.util.dw$a d -> d
    void run() -> run
    void a() -> a
    void e() -> e
com.amap.api.mapcore.util.dw$a -> com.amap.api.mapcore.util.dw$a:
    void a(com.amap.api.mapcore.util.dw) -> a
    void b(com.amap.api.mapcore.util.dw) -> b
    void c(com.amap.api.mapcore.util.dw) -> c
com.amap.api.mapcore.util.dx -> com.amap.api.mapcore.util.dx:
    com.amap.api.mapcore.util.dv a -> a
    void a(com.amap.api.mapcore.util.dw) -> a
    void b(com.amap.api.mapcore.util.dw) -> b
    void c(com.amap.api.mapcore.util.dw) -> c
com.amap.api.mapcore.util.dy -> com.amap.api.mapcore.util.dy:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.amap.api.mapcore.util.e -> com.amap.api.mapcore.util.e:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    void b(android.view.MotionEvent) -> b
    float c() -> c
    float a(android.view.MotionEvent,int) -> a
    float b(android.view.MotionEvent,int) -> b
    boolean d(android.view.MotionEvent) -> d
com.amap.api.mapcore.util.f -> com.amap.api.mapcore.util.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    int[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    int j -> j
    int[] k -> k
    com.autonavi.amap.mapcore.IPoint l -> l
com.amap.api.mapcore.util.g -> com.amap.api.mapcore.util.g:
    com.amap.api.mapcore.util.am a -> a
    com.amap.api.mapcore.util.am b -> b
    com.amap.api.mapcore.util.am c -> c
    com.amap.api.mapcore.util.am d -> d
    com.amap.api.mapcore.util.am e -> e
    com.amap.api.mapcore.util.am f -> f
    com.amap.api.mapcore.util.am g -> g
    com.amap.api.mapcore.util.am h -> h
    com.amap.api.mapcore.util.am i -> i
    android.content.Context j -> j
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    android.os.Parcelable$Creator k -> k
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(int) -> a
    void a(com.amap.api.mapcore.util.am) -> a
    com.amap.api.mapcore.util.am c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    void a(long,long) -> a
    void m() -> m
    void a(com.amap.api.mapcore.util.ai$a) -> a
    void n() -> n
    void o() -> o
    void p() -> p
    void a(long) -> a
    void a(java.lang.String) -> a
    void q() -> q
    void r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    void a(java.io.File,java.io.File,java.lang.String) -> a
    boolean u() -> u
    com.amap.api.mapcore.util.s v() -> v
    void a(com.amap.api.mapcore.util.s) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    long a(com.amap.api.mapcore.util.g) -> a
    long a(com.amap.api.mapcore.util.g,long) -> a
com.amap.api.mapcore.util.g$1 -> com.amap.api.mapcore.util.g$1:
    java.lang.String a -> a
    java.io.File b -> b
    com.amap.api.mapcore.util.g c -> c
    void a(java.lang.String,java.lang.String,float) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.h -> com.amap.api.mapcore.util.h:
    com.amap.api.mapcore.util.g a(android.os.Parcel) -> a
    com.amap.api.mapcore.util.g[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.mapcore.util.i -> com.amap.api.mapcore.util.i:
    android.content.Context g -> g
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.util.i h -> h
    com.amap.api.mapcore.util.i$a i -> i
    com.amap.api.mapcore.util.r j -> j
    java.lang.String b -> b
    com.amap.api.mapcore.util.aa k -> k
    java.util.concurrent.ExecutorService l -> l
    java.util.concurrent.ExecutorService m -> m
    com.amap.api.mapcore.util.i$b c -> c
    com.amap.api.mapcore.util.m d -> d
    com.amap.api.mapcore.util.o e -> e
    com.amap.api.mapcore.util.l f -> f
    com.amap.api.mapcore.util.i a(android.content.Context) -> a
    void f() -> f
    void g() -> g
    void f(java.lang.String) -> f
    void h() -> h
    void a(java.util.ArrayList) -> a
    void a(java.lang.String) -> a
    void i() -> i
    void a() -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void c(com.amap.api.mapcore.util.g) -> c
    void b() -> b
    void c() -> c
    void d() -> d
    com.amap.api.mapcore.util.g g(java.lang.String) -> g
    com.amap.api.mapcore.util.g h(java.lang.String) -> h
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(com.amap.api.mapcore.util.g) -> d
    void e(com.amap.api.mapcore.util.g) -> e
    void a(com.amap.api.mapcore.util.i$a) -> a
    void e() -> e
    com.amap.api.mapcore.util.g a(com.amap.api.mapcore.util.i,java.lang.String) -> a
    com.amap.api.mapcore.util.aa a(com.amap.api.mapcore.util.i) -> a
    void b(com.amap.api.mapcore.util.i) -> b
    android.content.Context c(com.amap.api.mapcore.util.i) -> c
    com.amap.api.mapcore.util.i$a d(com.amap.api.mapcore.util.i) -> d
com.amap.api.mapcore.util.i$1 -> com.amap.api.mapcore.util.i$1:
    java.lang.String a -> a
    com.amap.api.mapcore.util.i b -> b
    void run() -> run
com.amap.api.mapcore.util.i$2 -> com.amap.api.mapcore.util.i$2:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.mapcore.util.i b -> b
    void run() -> run
com.amap.api.mapcore.util.i$a -> com.amap.api.mapcore.util.i$a:
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void c(com.amap.api.mapcore.util.g) -> c
com.amap.api.mapcore.util.i$b -> com.amap.api.mapcore.util.i$b:
    com.amap.api.mapcore.util.i a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.j -> com.amap.api.mapcore.util.j:
    boolean a -> a
    java.lang.String b -> b
    boolean a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.k -> com.amap.api.mapcore.util.k:
    java.lang.String a() -> a
    com.amap.api.mapcore.util.j a(java.lang.String) -> a
    java.util.Map b() -> b
    java.lang.Object b(java.lang.String) -> b
com.amap.api.mapcore.util.l -> com.amap.api.mapcore.util.l:
    android.content.Context a -> a
    com.amap.api.mapcore.util.aa b -> b
    void run() -> run
    void a() -> a
    java.util.ArrayList a(android.content.Context) -> a
    com.amap.api.mapcore.util.s a(java.io.File) -> a
    boolean a(java.lang.String) -> a
    void destroy() -> destroy
com.amap.api.mapcore.util.m -> com.amap.api.mapcore.util.m:
    java.util.ArrayList a -> a
    com.amap.api.mapcore.util.aa b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    void a(com.amap.api.mapcore.util.s) -> a
    void d(java.lang.String) -> d
    boolean a(int,int) -> a
    boolean b(int) -> b
    boolean a(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    java.util.ArrayList a() -> a
    com.amap.api.maps.offlinemap.OfflineMapCity a(java.lang.String) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity b(java.lang.String) -> b
    com.amap.api.maps.offlinemap.OfflineMapProvince c(java.lang.String) -> c
    java.util.ArrayList b() -> b
    void a(java.util.List) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapCity,com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapProvince,com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList e() -> e
    java.util.ArrayList f() -> f
    boolean a(int) -> a
    void a(com.amap.api.mapcore.util.g) -> a
    void a(com.amap.api.mapcore.util.g,com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    void a(com.amap.api.mapcore.util.g,com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    void g() -> g
    void h() -> h
com.amap.api.mapcore.util.n -> com.amap.api.mapcore.util.n:
    com.amap.api.mapcore.util.ae a -> a
    com.amap.api.mapcore.util.ag b -> b
    com.amap.api.mapcore.util.g c -> c
    android.content.Context e -> e
    android.os.Bundle f -> f
    com.amap.api.maps.AMap g -> g
    boolean h -> h
    void a() -> a
    void b() -> b
    java.lang.String f() -> f
    void g() -> g
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.o -> com.amap.api.mapcore.util.o:
    android.content.Context a -> a
    void a(com.amap.api.mapcore.util.g) -> a
    boolean b(com.amap.api.mapcore.util.g) -> b
    boolean a(java.lang.String,android.content.Context) -> a
com.amap.api.mapcore.util.p -> com.amap.api.mapcore.util.p:
    android.content.Context j -> j
    void a(android.content.Context) -> a
    java.util.List a(byte[]) -> a
    void c(java.lang.String) -> c
    long b_() -> b_
    java.lang.String a() -> a
    java.util.List a(java.lang.String) -> a
    java.util.Map b() -> b
    java.lang.Object b(byte[]) -> b
    java.lang.Object b(java.lang.String) -> b
com.amap.api.mapcore.util.q -> com.amap.api.mapcore.util.q:
    java.lang.String b() -> b
com.amap.api.mapcore.util.r -> com.amap.api.mapcore.util.r:
    com.amap.api.mapcore.util.r a -> a
    com.amap.api.mapcore.util.dv b -> b
    java.util.LinkedHashMap c -> c
    boolean d -> d
    com.amap.api.mapcore.util.r a(int) -> a
    com.amap.api.mapcore.util.r a(boolean,int) -> a
    void a() -> a
    void a(com.amap.api.mapcore.util.q) -> a
    void a(com.amap.api.mapcore.util.q,android.content.Context,com.amap.api.maps.AMap) -> a
    void b() -> b
    void b(com.amap.api.mapcore.util.q) -> b
com.amap.api.mapcore.util.s -> com.amap.api.mapcore.util.s:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    long h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    boolean l -> l
    int m -> m
    java.lang.String n -> n
    android.content.Context o -> o
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    java.lang.String g() -> g
    void e(java.lang.String) -> e
    long h() -> h
    void a(long) -> a
    void a(int) -> a
    int i() -> i
    long j() -> j
    void b(long) -> b
    long k() -> k
    void c(long) -> c
    java.lang.String l() -> l
    void f(java.lang.String) -> f
    java.lang.String m() -> m
    void g(java.lang.String) -> g
    boolean n() -> n
    void a(boolean) -> a
    void b(int) -> b
    int o() -> o
    void h(java.lang.String) -> h
    java.lang.String p() -> p
    void i(java.lang.String) -> i
    void q() -> q
com.amap.api.mapcore.util.t -> com.amap.api.mapcore.util.t:
    com.amap.api.mapcore.util.u a -> a
    com.amap.api.mapcore.util.u a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.u) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.u -> com.amap.api.mapcore.util.u:
    java.lang.String a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    long a(int) -> a
    long b(int) -> b
    java.lang.String a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
com.amap.api.mapcore.util.v -> com.amap.api.mapcore.util.v:
    com.amap.api.mapcore.util.y a -> a
    com.amap.api.mapcore.util.y a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.y) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.w -> com.amap.api.mapcore.util.w:
    com.amap.api.mapcore.util.x a -> a
    com.amap.api.mapcore.util.x a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.x) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.x -> com.amap.api.mapcore.util.x:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
com.amap.api.mapcore.util.y -> com.amap.api.mapcore.util.y:
    com.amap.api.mapcore.util.s a -> a
    com.amap.api.mapcore.util.s a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    long g() -> g
    long h() -> h
    java.lang.String i() -> i
    int j() -> j
    boolean k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
com.amap.api.mapcore.util.z -> com.amap.api.mapcore.util.z:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    com.amap.api.mapcore.util.z A -> A
    com.amap.api.mapcore.util.z a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    java.lang.String b() -> b
    int c() -> c
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
com.amap.api.mapcore.v -> com.amap.api.mapcore.v:
    com.amap.api.mapcore.ab a -> a
    int getZIndex() -> getZIndex
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.amap.api.mapcore.w -> com.amap.api.mapcore.w:
    com.amap.api.mapcore.ab a -> a
    int c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    java.util.concurrent.CopyOnWriteArrayList e -> e
    android.os.Handler f -> f
    java.lang.Runnable g -> g
    com.amap.api.mapcore.w$a b -> b
    java.lang.String a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.amap.api.mapcore.aj d(java.lang.String) -> d
    void a(com.amap.api.mapcore.aj) -> a
    boolean c(java.lang.String) -> c
    void b() -> b
    void a(javax.microedition.khronos.opengles.GL10,boolean,int) -> a
    void a(java.lang.Integer) -> a
    void c() -> c
    boolean d() -> d
    com.amap.api.mapcore.aj a(com.amap.api.maps.model.LatLng) -> a
    void e() -> e
    java.util.concurrent.CopyOnWriteArrayList a(com.amap.api.mapcore.w) -> a
    java.util.concurrent.CopyOnWriteArrayList a(com.amap.api.mapcore.w,java.util.concurrent.CopyOnWriteArrayList) -> a
com.amap.api.mapcore.w$a -> com.amap.api.mapcore.w$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.x -> com.amap.api.mapcore.x:
    com.amap.api.mapcore.w a -> a
    void run() -> run
com.amap.api.mapcore.y -> com.amap.api.mapcore.y:
    com.amap.api.mapcore.y$j a -> a
    java.lang.ref.WeakReference b -> b
    com.amap.api.mapcore.y$i c -> c
    android.opengl.GLSurfaceView$Renderer d -> d
    boolean e -> e
    com.amap.api.mapcore.y$e f -> f
    com.amap.api.mapcore.y$f g -> g
    com.amap.api.mapcore.y$g h -> h
    com.amap.api.mapcore.y$k i -> i
    int j -> j
    int k -> k
    boolean l -> l
    void finalize() -> finalize
    void a() -> a
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setRenderMode(int) -> setRenderMode
    void requestRender() -> requestRender
    void b() -> b
    void c() -> c
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void e() -> e
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    void onLayout(boolean,int,int,int,int) -> onLayout
    int a(com.amap.api.mapcore.y) -> a
    com.amap.api.mapcore.y$e b(com.amap.api.mapcore.y) -> b
    com.amap.api.mapcore.y$f c(com.amap.api.mapcore.y) -> c
    com.amap.api.mapcore.y$g d(com.amap.api.mapcore.y) -> d
    com.amap.api.mapcore.y$k e(com.amap.api.mapcore.y) -> e
    int f(com.amap.api.mapcore.y) -> f
    com.amap.api.mapcore.y$j d() -> d
    boolean g(com.amap.api.mapcore.y) -> g
    android.opengl.GLSurfaceView$Renderer h(com.amap.api.mapcore.y) -> h
com.amap.api.mapcore.y$a -> com.amap.api.mapcore.y$a:
    int[] a -> a
    com.amap.api.mapcore.y b -> b
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] a(int[]) -> a
com.amap.api.mapcore.y$b -> com.amap.api.mapcore.y$b:
    int[] j -> j
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.amap.api.mapcore.y i -> i
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.amap.api.mapcore.y$c -> com.amap.api.mapcore.y$c:
    int b -> b
    com.amap.api.mapcore.y a -> a
    javax.microedition.khronos.egl.EGLContext a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.amap.api.mapcore.y$d -> com.amap.api.mapcore.y$d:
    javax.microedition.khronos.egl.EGLSurface a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.amap.api.mapcore.y$e -> com.amap.api.mapcore.y$e:
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
com.amap.api.mapcore.y$f -> com.amap.api.mapcore.y$f:
    javax.microedition.khronos.egl.EGLContext a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.amap.api.mapcore.y$g -> com.amap.api.mapcore.y$g:
    javax.microedition.khronos.egl.EGLSurface a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.amap.api.mapcore.y$h -> com.amap.api.mapcore.y$h:
    java.lang.ref.WeakReference f -> f
    javax.microedition.khronos.egl.EGL10 a -> a
    javax.microedition.khronos.egl.EGLDisplay b -> b
    javax.microedition.khronos.egl.EGLSurface c -> c
    javax.microedition.khronos.egl.EGLConfig d -> d
    javax.microedition.khronos.egl.EGLContext e -> e
    void a() -> a
    boolean b() -> b
    javax.microedition.khronos.opengles.GL c() -> c
    int d() -> d
    void e() -> e
    void g() -> g
    void f() -> f
    void a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,int) -> b
com.amap.api.mapcore.y$i -> com.amap.api.mapcore.y$i:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.ArrayList q -> q
    boolean r -> r
    com.amap.api.mapcore.y$h s -> s
    java.lang.ref.WeakReference t -> t
    void run() -> run
    void j() -> j
    void k() -> k
    void l() -> l
    boolean a() -> a
    boolean m() -> m
    void a(int) -> a
    int b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void a(int,int) -> a
    void h() -> h
    void i() -> i
    void a(java.lang.Runnable) -> a
    boolean a(com.amap.api.mapcore.y$i,boolean) -> a
com.amap.api.mapcore.y$j -> com.amap.api.mapcore.y$j:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.mapcore.y$i g -> g
    void a(com.amap.api.mapcore.y$i) -> a
    boolean b(com.amap.api.mapcore.y$i) -> b
    void c(com.amap.api.mapcore.y$i) -> c
    boolean a() -> a
    boolean b() -> b
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void c() -> c
com.amap.api.mapcore.y$k -> com.amap.api.mapcore.y$k:
    javax.microedition.khronos.opengles.GL a(javax.microedition.khronos.opengles.GL) -> a
com.amap.api.mapcore.y$l -> com.amap.api.mapcore.y$l:
    java.lang.StringBuilder a -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void a() -> a
com.amap.api.mapcore.y$m -> com.amap.api.mapcore.y$m:
    com.amap.api.mapcore.y j -> j
com.amap.api.mapcore.z -> com.amap.api.mapcore.z:
com.amap.api.maps.AMap -> com.amap.api.maps.AMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NIGHT -> MAP_TYPE_NIGHT
    int MAP_TYPE_NAVI -> MAP_TYPE_NAVI
    int LOCATION_TYPE_LOCATE -> LOCATION_TYPE_LOCATE
    int LOCATION_TYPE_MAP_FOLLOW -> LOCATION_TYPE_MAP_FOLLOW
    int LOCATION_TYPE_MAP_ROTATE -> LOCATION_TYPE_MAP_ROTATE
    com.amap.api.mapcore.ab a -> a
    com.amap.api.maps.UiSettings b -> b
    com.amap.api.maps.Projection c -> c
    com.amap.api.maps.model.MyTrafficStyle d -> d
    com.amap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.amap.api.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.amap.api.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,long,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.amap.api.maps.model.NavigateArrow addNavigateArrow(com.amap.api.maps.model.NavigateArrowOptions) -> addNavigateArrow
    com.amap.api.maps.model.Polyline addPolyline(com.amap.api.maps.model.PolylineOptions) -> addPolyline
    com.amap.api.maps.model.Circle addCircle(com.amap.api.maps.model.CircleOptions) -> addCircle
    com.amap.api.maps.model.Arc addArc(com.amap.api.maps.model.ArcOptions) -> addArc
    com.amap.api.maps.model.Polygon addPolygon(com.amap.api.maps.model.PolygonOptions) -> addPolygon
    com.amap.api.maps.model.GroundOverlay addGroundOverlay(com.amap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.amap.api.maps.model.Marker addMarker(com.amap.api.maps.model.MarkerOptions) -> addMarker
    com.amap.api.maps.model.Text addText(com.amap.api.maps.model.TextOptions) -> addText
    java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> addMarkers
    java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    com.amap.api.maps.model.TileOverlay addTileOverlay(com.amap.api.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    void clear(boolean) -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    void showMapText(boolean) -> showMapText
    void showIndoorMap(boolean) -> showIndoorMap
    void showBuildings(boolean) -> showBuildings
    void setMyTrafficStyle(com.amap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    com.amap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.amap.api.maps.LocationSource) -> setLocationSource
    void setMyLocationStyle(com.amap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    void setMyLocationType(int) -> setMyLocationType
    void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    com.amap.api.maps.UiSettings getUiSettings() -> getUiSettings
    com.amap.api.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.amap.api.maps.AMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.amap.api.maps.AMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapTouchListener(com.amap.api.maps.AMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnPOIClickListener(com.amap.api.maps.AMap$OnPOIClickListener) -> setOnPOIClickListener
    void setOnMyLocationChangeListener(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    void setOnMapLongClickListener(com.amap.api.maps.AMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.amap.api.maps.AMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnPolylineClickListener(com.amap.api.maps.AMap$OnPolylineClickListener) -> setOnPolylineClickListener
    void setOnMarkerDragListener(com.amap.api.maps.AMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.amap.api.maps.AMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMapLoadedListener(com.amap.api.maps.AMap$OnMapLoadedListener) -> setOnMapLoadedListener
    void getMapPrintScreen(com.amap.api.maps.AMap$onMapPrintScreenListener) -> getMapPrintScreen
    void getMapScreenShot(com.amap.api.maps.AMap$OnMapScreenShotListener) -> getMapScreenShot
    float getScalePerPixel() -> getScalePerPixel
    void runOnDrawFrame() -> runOnDrawFrame
    void removecache() -> removecache
    void removecache(com.amap.api.maps.AMap$OnCacheRemoveListener) -> removecache
    void setCustomRenderer(com.amap.api.maps.CustomRenderer) -> setCustomRenderer
    void setPointToCenter(int,int) -> setPointToCenter
    void setMapTextZIndex(int) -> setMapTextZIndex
    void setLoadOfflineData(boolean) -> setLoadOfflineData
    int getMapTextZIndex() -> getMapTextZIndex
    java.lang.String getVersion() -> getVersion
    void reloadMap() -> reloadMap
    void setRenderFps(int) -> setRenderFps
com.amap.api.maps.AMap$CancelableCallback -> com.amap.api.maps.AMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.maps.AMap$InfoWindowAdapter -> com.amap.api.maps.AMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.maps.AMap$OnCacheRemoveListener -> com.amap.api.maps.AMap$OnCacheRemoveListener:
    void onRemoveCacheFinish(boolean) -> onRemoveCacheFinish
com.amap.api.maps.AMap$OnCameraChangeListener -> com.amap.api.maps.AMap$OnCameraChangeListener:
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.amap.api.maps.AMap$OnInfoWindowClickListener -> com.amap.api.maps.AMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
com.amap.api.maps.AMap$OnMapClickListener -> com.amap.api.maps.AMap$OnMapClickListener:
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.amap.api.maps.AMap$OnMapLoadedListener -> com.amap.api.maps.AMap$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.amap.api.maps.AMap$OnMapLongClickListener -> com.amap.api.maps.AMap$OnMapLongClickListener:
    void onMapLongClick(com.amap.api.maps.model.LatLng) -> onMapLongClick
com.amap.api.maps.AMap$OnMapScreenShotListener -> com.amap.api.maps.AMap$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
    void onMapScreenShot(android.graphics.Bitmap,int) -> onMapScreenShot
com.amap.api.maps.AMap$OnMapTouchListener -> com.amap.api.maps.AMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.amap.api.maps.AMap$OnMarkerClickListener -> com.amap.api.maps.AMap$OnMarkerClickListener:
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.amap.api.maps.AMap$OnMarkerDragListener -> com.amap.api.maps.AMap$OnMarkerDragListener:
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
com.amap.api.maps.AMap$OnMyLocationChangeListener -> com.amap.api.maps.AMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.amap.api.maps.AMap$OnPOIClickListener -> com.amap.api.maps.AMap$OnPOIClickListener:
    void onPOIClick(com.amap.api.maps.model.Poi) -> onPOIClick
com.amap.api.maps.AMap$OnPolylineClickListener -> com.amap.api.maps.AMap$OnPolylineClickListener:
    void onPolylineClick(com.amap.api.maps.model.Polyline) -> onPolylineClick
com.amap.api.maps.AMap$onMapPrintScreenListener -> com.amap.api.maps.AMap$onMapPrintScreenListener:
    void onMapPrint(android.graphics.drawable.Drawable) -> onMapPrint
com.amap.api.maps.AMapException -> com.amap.api.maps.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_NOT_ENOUGH_SPACE -> ERROR_NOT_ENOUGH_SPACE
    java.lang.String ERROR_NOT_AVAILABLE -> ERROR_NOT_AVAILABLE
    java.lang.String ERROR_ILLEGAL_VALUE -> ERROR_ILLEGAL_VALUE
    java.lang.String AMAP_NOT_SUPPORT -> AMAP_NOT_SUPPORT
    java.lang.String ILLEGAL_AMAP_ARGUMENT -> ILLEGAL_AMAP_ARGUMENT
    java.lang.String a -> a
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.maps.AMapOptions -> com.amap.api.maps.AMapOptions:
    com.amap.api.maps.AMapOptionsCreator CREATOR -> CREATOR
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    int ZOOM_POSITION_RIGHT_CENTER -> ZOOM_POSITION_RIGHT_CENTER
    int ZOOM_POSITION_RIGHT_BUTTOM -> ZOOM_POSITION_RIGHT_BUTTOM
    com.amap.api.maps.AMapOptions logoPosition(int) -> logoPosition
    com.amap.api.maps.AMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.amap.api.maps.AMapOptions mapType(int) -> mapType
    com.amap.api.maps.AMapOptions camera(com.amap.api.maps.model.CameraPosition) -> camera
    com.amap.api.maps.AMapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    com.amap.api.maps.AMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.amap.api.maps.AMapOptions compassEnabled(boolean) -> compassEnabled
    com.amap.api.maps.AMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.amap.api.maps.AMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.amap.api.maps.AMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.amap.api.maps.AMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    int getMapType() -> getMapType
    com.amap.api.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.AMapOptionsCreator -> com.amap.api.maps.AMapOptionsCreator:
    com.amap.api.maps.AMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.AMapOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.AMapUtils -> com.amap.api.maps.AMapUtils:
    int DRIVING_DEFAULT -> DRIVING_DEFAULT
    int DRIVING_SAVE_MONEY -> DRIVING_SAVE_MONEY
    int DRIVING_SHORT_DISTANCE -> DRIVING_SHORT_DISTANCE
    int DRIVING_NO_HIGHWAY -> DRIVING_NO_HIGHWAY
    int DRIVING_AVOID_CONGESTION -> DRIVING_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY -> DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY
    int DRIVING_NO_HIGHWAY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_AVOID_CONGESTION
    int DRIVING_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_SAVE_MONEY_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION
    int BUS_TIME_FIRST -> BUS_TIME_FIRST
    int BUS_MONEY_LITTLE -> BUS_MONEY_LITTLE
    int BUS_TRANSFER_LITTLE -> BUS_TRANSFER_LITTLE
    int BUS_WALK_LITTLE -> BUS_WALK_LITTLE
    int BUS_COMFORT -> BUS_COMFORT
    int BUS_NO_SUBWAY -> BUS_NO_SUBWAY
    float calculateLineDistance(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateLineDistance
    float calculateArea(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateArea
    void getLatestAMapApp(android.content.Context) -> getLatestAMapApp
    void openAMapNavi(com.amap.api.maps.model.NaviPara,android.content.Context) -> openAMapNavi
    void openAMapPoiNearbySearch(com.amap.api.maps.model.PoiPara,android.content.Context) -> openAMapPoiNearbySearch
    void openAMapDrivingRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapDrivingRoute
    void openAMapTransitRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapTransitRoute
    void openAMapWalkingRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapWalkingRoute
    void a(com.amap.api.maps.model.RoutePara,android.content.Context,int) -> a
    boolean a(com.amap.api.maps.model.RoutePara) -> a
    java.lang.String a(com.amap.api.maps.model.NaviPara,android.content.Context) -> a
    java.lang.String b(com.amap.api.maps.model.RoutePara,android.content.Context,int) -> b
    java.lang.String a(com.amap.api.maps.model.PoiPara,android.content.Context) -> a
    boolean a(android.content.Context) -> a
com.amap.api.maps.AMapUtils$a -> com.amap.api.maps.AMapUtils$a:
    java.lang.String a -> a
    android.content.Context b -> b
    void run() -> run
com.amap.api.maps.CameraUpdate -> com.amap.api.maps.CameraUpdate:
    com.amap.api.mapcore.p a -> a
    com.amap.api.mapcore.p a() -> a
com.amap.api.maps.CameraUpdateFactory -> com.amap.api.maps.CameraUpdateFactory:
    com.amap.api.maps.CameraUpdate zoomIn() -> zoomIn
    com.amap.api.maps.CameraUpdate zoomOut() -> zoomOut
    com.amap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.amap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.amap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.amap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.amap.api.maps.CameraUpdate newCameraPosition(com.amap.api.maps.model.CameraPosition) -> newCameraPosition
    com.amap.api.maps.CameraUpdate newLatLng(com.amap.api.maps.model.LatLng) -> newLatLng
    com.amap.api.maps.CameraUpdate newLatLngZoom(com.amap.api.maps.model.LatLng,float) -> newLatLngZoom
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.amap.api.maps.CameraUpdate changeLatLng(com.amap.api.maps.model.LatLng) -> changeLatLng
    com.amap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    com.amap.api.maps.CameraUpdate changeBearingGeoCenter(float,com.autonavi.amap.mapcore.IPoint) -> changeBearingGeoCenter
    com.amap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.amap.api.maps.CoordinateConverter -> com.amap.api.maps.CoordinateConverter:
    android.content.Context a -> a
    com.amap.api.maps.CoordinateConverter$CoordType b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.CoordinateConverter from(com.amap.api.maps.CoordinateConverter$CoordType) -> from
    com.amap.api.maps.CoordinateConverter coord(com.amap.api.maps.model.LatLng) -> coord
    com.amap.api.maps.model.LatLng convert() -> convert
com.amap.api.maps.CoordinateConverter$CoordType -> com.amap.api.maps.CoordinateConverter$CoordType:
    com.amap.api.maps.CoordinateConverter$CoordType BAIDU -> BAIDU
    com.amap.api.maps.CoordinateConverter$CoordType MAPBAR -> MAPBAR
    com.amap.api.maps.CoordinateConverter$CoordType GPS -> GPS
    com.amap.api.maps.CoordinateConverter$CoordType MAPABC -> MAPABC
    com.amap.api.maps.CoordinateConverter$CoordType SOSOMAP -> SOSOMAP
    com.amap.api.maps.CoordinateConverter$CoordType ALIYUN -> ALIYUN
    com.amap.api.maps.CoordinateConverter$CoordType GOOGLE -> GOOGLE
    com.amap.api.maps.CoordinateConverter$CoordType[] a -> a
    com.amap.api.maps.CoordinateConverter$CoordType[] values() -> values
    com.amap.api.maps.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.amap.api.maps.CustomRenderer -> com.amap.api.maps.CustomRenderer:
    void OnMapReferencechanged() -> OnMapReferencechanged
com.amap.api.maps.LocationSource -> com.amap.api.maps.LocationSource:
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.amap.api.maps.LocationSource$OnLocationChangedListener -> com.amap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.maps.MapFragment -> com.amap.api.maps.MapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.ag b -> b
    com.amap.api.maps.MapFragment newInstance() -> newInstance
    com.amap.api.maps.MapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.MapView -> com.amap.api.maps.MapView:
    com.amap.api.mapcore.ag a -> a
    com.amap.api.maps.AMap b -> b
    int c -> c
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setLayerType(int,android.graphics.Paint) -> setLayerType
    void setVisibility(int) -> setVisibility
com.amap.api.maps.MapsInitializer -> com.amap.api.maps.MapsInitializer:
    java.lang.String sdcardDir -> sdcardDir
    boolean a -> a
    void initialize(android.content.Context) -> initialize
    void setNetWorkEnable(boolean) -> setNetWorkEnable
    boolean getNetWorkEnable() -> getNetWorkEnable
    void setApiKey(java.lang.String) -> setApiKey
    java.lang.String getVersion() -> getVersion
com.amap.api.maps.Projection -> com.amap.api.maps.Projection:
    com.amap.api.mapcore.am a -> a
    com.amap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.amap.api.maps.model.LatLng) -> toScreenLocation
    android.graphics.PointF toMapLocation(com.amap.api.maps.model.LatLng) -> toMapLocation
    android.graphics.PointF toOpenGLLocation(com.amap.api.maps.model.LatLng) -> toOpenGLLocation
    float toOpenGLWidth(int) -> toOpenGLWidth
    com.amap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
    com.amap.api.maps.model.TileProjection fromBoundsToTile(com.amap.api.maps.model.LatLngBounds,int,int) -> fromBoundsToTile
    com.amap.api.maps.model.LatLngBounds getMapBounds(com.amap.api.maps.model.LatLng,float) -> getMapBounds
com.amap.api.maps.SupportMapFragment -> com.amap.api.maps.SupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.ag b -> b
    com.amap.api.maps.SupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.SupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.TextureMapFragment -> com.amap.api.maps.TextureMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.ag b -> b
    com.amap.api.maps.TextureMapFragment newInstance() -> newInstance
    com.amap.api.maps.TextureMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.TextureMapView -> com.amap.api.maps.TextureMapView:
    com.amap.api.mapcore.ag a -> a
    com.amap.api.maps.AMap b -> b
    int c -> c
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setVisibility(int) -> setVisibility
com.amap.api.maps.TextureSupportMapFragment -> com.amap.api.maps.TextureSupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.ag b -> b
    com.amap.api.maps.TextureSupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.TextureSupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.ag getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.UiSettings -> com.amap.api.maps.UiSettings:
    com.amap.api.mapcore.aq a -> a
    void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setLogoPosition(int) -> setLogoPosition
    void setZoomPosition(int) -> setZoomPosition
    int getZoomPosition() -> getZoomPosition
    boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
com.amap.api.maps.a -> com.amap.api.maps.a:
    int[] a -> a
com.amap.api.maps.model.AMapGLOverlay -> com.amap.api.maps.model.AMapGLOverlay:
    void destroy() -> destroy
com.amap.api.maps.model.Arc -> com.amap.api.maps.model.Arc:
    com.amap.api.mapcore.ac a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.ArcOptions -> com.amap.api.maps.model.ArcOptions:
    com.amap.api.maps.model.ArcOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    float e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.ArcOptions point(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> point
    com.amap.api.maps.model.ArcOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.ArcOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.ArcOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.ArcOptions visible(boolean) -> visible
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.amap.api.maps.model.LatLng getStart() -> getStart
    com.amap.api.maps.model.LatLng getPassed() -> getPassed
    com.amap.api.maps.model.LatLng getEnd() -> getEnd
com.amap.api.maps.model.ArcOptionsCreator -> com.amap.api.maps.model.ArcOptionsCreator:
    com.amap.api.maps.model.ArcOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.ArcOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptor -> com.amap.api.maps.model.BitmapDescriptor:
    com.amap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    com.amap.api.maps.model.BitmapDescriptor clone() -> clone
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void recycle() -> recycle
    boolean equals(java.lang.Object) -> equals
    java.lang.Object clone() -> clone
com.amap.api.maps.model.BitmapDescriptorCreator -> com.amap.api.maps.model.BitmapDescriptorCreator:
    com.amap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptorFactory -> com.amap.api.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.amap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.amap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    com.amap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.amap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.amap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.amap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.amap.api.maps.model.CameraPosition -> com.amap.api.maps.model.CameraPosition:
    com.amap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    boolean isAbroad -> isAbroad
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    com.amap.api.maps.model.CameraPosition fromLatLngZoom(com.amap.api.maps.model.LatLng,float) -> fromLatLngZoom
    com.amap.api.maps.model.CameraPosition$Builder builder() -> builder
    com.amap.api.maps.model.CameraPosition$Builder builder(com.amap.api.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.CameraPosition$Builder -> com.amap.api.maps.model.CameraPosition$Builder:
    com.amap.api.maps.model.LatLng a -> a
    float b -> b
    float c -> c
    float d -> d
    com.amap.api.maps.model.CameraPosition$Builder target(com.amap.api.maps.model.LatLng) -> target
    com.amap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.amap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.amap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.amap.api.maps.model.CameraPosition build() -> build
com.amap.api.maps.model.CameraPositionCreator -> com.amap.api.maps.model.CameraPositionCreator:
    com.amap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Circle -> com.amap.api.maps.model.Circle:
    com.amap.api.mapcore.ad a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
com.amap.api.maps.model.CircleOptions -> com.amap.api.maps.model.CircleOptions:
    com.amap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    double c -> c
    float d -> d
    int e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.CircleOptions center(com.amap.api.maps.model.LatLng) -> center
    com.amap.api.maps.model.CircleOptions radius(double) -> radius
    com.amap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.CircleOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.CircleOptionsCreator -> com.amap.api.maps.model.CircleOptionsCreator:
    com.amap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Gradient -> com.amap.api.maps.model.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    boolean d -> d
    java.util.HashMap a() -> a
    int[] generateColorMap(double) -> generateColorMap
    int a(int,int,float) -> a
    boolean isAvailable() -> isAvailable
com.amap.api.maps.model.Gradient$a -> com.amap.api.maps.model.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.amap.api.maps.model.Gradient a -> a
    float a(com.amap.api.maps.model.Gradient$a) -> a
    int b(com.amap.api.maps.model.Gradient$a) -> b
    int c(com.amap.api.maps.model.Gradient$a) -> c
com.amap.api.maps.model.GroundOverlay -> com.amap.api.maps.model.GroundOverlay:
    com.amap.api.mapcore.af a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setImage(com.amap.api.maps.model.BitmapDescriptor) -> setImage
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.amap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.GroundOverlayOptions -> com.amap.api.maps.model.GroundOverlayOptions:
    com.amap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    com.amap.api.maps.model.GroundOverlayOptions image(com.amap.api.maps.model.BitmapDescriptor) -> image
    com.amap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions a(com.amap.api.maps.model.LatLng,float,float) -> a
    com.amap.api.maps.model.GroundOverlayOptions positionFromBounds(com.amap.api.maps.model.LatLngBounds) -> positionFromBounds
    com.amap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.amap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    com.amap.api.maps.model.BitmapDescriptor getImage() -> getImage
    com.amap.api.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.GroundOverlayOptionsCreator -> com.amap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.HeatmapTileProvider -> com.amap.api.maps.model.HeatmapTileProvider:
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    int[] a -> a
    float[] b -> b
    com.amap.api.maps.model.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    com.amap.api.maps.model.c c -> c
    java.util.Collection d -> d
    com.amap.api.mapcore.util.az e -> e
    int f -> f
    com.amap.api.maps.model.Gradient g -> g
    int[] h -> h
    double[] i -> i
    double j -> j
    double[] k -> k
    void c(java.util.Collection) -> c
    java.util.Collection d(java.util.Collection) -> d
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    void a(com.amap.api.maps.model.Gradient) -> a
    double[] a(int) -> a
    com.amap.api.maps.model.Tile a(android.graphics.Bitmap) -> a
    com.amap.api.mapcore.util.az a(java.util.Collection) -> a
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.amap.api.mapcore.util.az,int,int) -> a
    int getTileHeight() -> getTileHeight
    int getTileWidth() -> getTileWidth
    java.util.Collection b(java.util.Collection) -> b
com.amap.api.maps.model.HeatmapTileProvider$Builder -> com.amap.api.maps.model.HeatmapTileProvider$Builder:
    java.util.Collection a -> a
    int b -> b
    com.amap.api.maps.model.Gradient c -> c
    double d -> d
    com.amap.api.maps.model.HeatmapTileProvider$Builder data(java.util.Collection) -> data
    com.amap.api.maps.model.HeatmapTileProvider$Builder weightedData(java.util.Collection) -> weightedData
    com.amap.api.maps.model.HeatmapTileProvider$Builder radius(int) -> radius
    com.amap.api.maps.model.HeatmapTileProvider$Builder gradient(com.amap.api.maps.model.Gradient) -> gradient
    com.amap.api.maps.model.HeatmapTileProvider$Builder transparency(double) -> transparency
    com.amap.api.maps.model.HeatmapTileProvider build() -> build
    java.util.Collection a(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> a
    int b(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> b
    com.amap.api.maps.model.Gradient c(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> c
    double d(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> d
com.amap.api.maps.model.LatLng -> com.amap.api.maps.model.LatLng:
    com.amap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    double a(double) -> a
    com.amap.api.maps.model.LatLng clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.maps.model.LatLngBounds -> com.amap.api.maps.model.LatLngBounds:
    com.amap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng southwest -> southwest
    com.amap.api.maps.model.LatLng northeast -> northeast
    int a() -> a
    com.amap.api.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean contains(com.amap.api.maps.model.LatLngBounds) -> contains
    boolean intersects(com.amap.api.maps.model.LatLngBounds) -> intersects
    boolean a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds including(com.amap.api.maps.model.LatLng) -> including
    double c(double,double) -> c
    double d(double,double) -> d
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    double a(double,double) -> a
    double b(double,double) -> b
com.amap.api.maps.model.LatLngBounds$Builder -> com.amap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.amap.api.maps.model.LatLngBounds$Builder include(com.amap.api.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.amap.api.maps.model.LatLngBounds build() -> build
com.amap.api.maps.model.LatLngBoundsCreator -> com.amap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLngCreator -> com.amap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLng[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Marker -> com.amap.api.maps.model.Marker:
    com.amap.api.mapcore.ah a -> a
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setIcon(com.amap.api.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotateAngle(float) -> setRotateAngle
    float getRotateAngle() -> getRotateAngle
    void setToTop() -> setToTop
    void setGeoPoint(com.autonavi.amap.mapcore.IPoint) -> setGeoPoint
    com.autonavi.amap.mapcore.IPoint getGeoPoint() -> getGeoPoint
    void setFlat(boolean) -> setFlat
    boolean isFlat() -> isFlat
    void setPositionByPixels(int,int) -> setPositionByPixels
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
com.amap.api.maps.model.MarkerOptions -> com.amap.api.maps.model.MarkerOptions:
    com.amap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    float e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String a -> a
    boolean j -> j
    int k -> k
    int l -> l
    java.util.ArrayList m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    com.amap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.amap.api.maps.model.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    boolean isPerspective() -> isPerspective
    com.amap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    com.amap.api.maps.model.MarkerOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.MarkerOptions setFlat(boolean) -> setFlat
    void a() -> a
    com.amap.api.maps.model.MarkerOptions icon(com.amap.api.maps.model.BitmapDescriptor) -> icon
    com.amap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.MarkerOptions setInfoWindowOffset(int,int) -> setInfoWindowOffset
    com.amap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    com.amap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.amap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.amap.api.maps.model.MarkerOptions visible(boolean) -> visible
    com.amap.api.maps.model.MarkerOptions setGps(boolean) -> setGps
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    int getInfoWindowOffsetX() -> getInfoWindowOffsetX
    int getInfoWindowOffsetY() -> getInfoWindowOffsetY
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
    boolean isGps() -> isGps
    boolean isFlat() -> isFlat
    com.amap.api.maps.model.MarkerOptions zIndex(float) -> zIndex
    float getZIndex() -> getZIndex
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MarkerOptionsCreator -> com.amap.api.maps.model.MarkerOptionsCreator:
    com.amap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyLocationStyle -> com.amap.api.maps.model.MyLocationStyle:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    com.amap.api.maps.model.MyLocationStyle myLocationIcon(com.amap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    com.amap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    com.amap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    com.amap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    com.amap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    int getRadiusFillColor() -> getRadiusFillColor
    int getStrokeColor() -> getStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MyLocationStyleCreator -> com.amap.api.maps.model.MyLocationStyleCreator:
    com.amap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyTrafficStyle -> com.amap.api.maps.model.MyTrafficStyle:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getSmoothColor() -> getSmoothColor
    void setSmoothColor(int) -> setSmoothColor
    int getSlowColor() -> getSlowColor
    void setSlowColor(int) -> setSlowColor
    int getCongestedColor() -> getCongestedColor
    void setCongestedColor(int) -> setCongestedColor
    int getSeriousCongestedColor() -> getSeriousCongestedColor
    void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.amap.api.maps.model.NaviPara -> com.amap.api.maps.model.NaviPara:
    int DRIVING_DEFAULT -> DRIVING_DEFAULT
    int DRIVING_SAVE_MONEY -> DRIVING_SAVE_MONEY
    int DRIVING_SHORT_DISTANCE -> DRIVING_SHORT_DISTANCE
    int DRIVING_NO_HIGHWAY -> DRIVING_NO_HIGHWAY
    int DRIVING_AVOID_CONGESTION -> DRIVING_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY -> DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY
    int DRIVING_NO_HIGHWAY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_AVOID_CONGESTION
    int DRIVING_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_SAVE_MONEY_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION
    int a -> a
    com.amap.api.maps.model.LatLng b -> b
    void setTargetPoint(com.amap.api.maps.model.LatLng) -> setTargetPoint
    void setNaviStyle(int) -> setNaviStyle
    com.amap.api.maps.model.LatLng getTargetPoint() -> getTargetPoint
    int getNaviStyle() -> getNaviStyle
com.amap.api.maps.model.NavigateArrow -> com.amap.api.maps.model.NavigateArrow:
    com.amap.api.mapcore.ai a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setTopColor(int) -> setTopColor
    int getTopColor() -> getTopColor
    void setSideColor(int) -> setSideColor
    int getSideColor() -> getSideColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.NavigateArrowOptions -> com.amap.api.maps.model.NavigateArrowOptions:
    com.amap.api.maps.model.NavigateArrowOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.NavigateArrowOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.NavigateArrowOptions width(float) -> width
    com.amap.api.maps.model.NavigateArrowOptions topColor(int) -> topColor
    com.amap.api.maps.model.NavigateArrowOptions sideColor(int) -> sideColor
    com.amap.api.maps.model.NavigateArrowOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.NavigateArrowOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getTopColor() -> getTopColor
    int getSideColor() -> getSideColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.NavigateArrowOptionsCreator -> com.amap.api.maps.model.NavigateArrowOptionsCreator:
    com.amap.api.maps.model.NavigateArrowOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.NavigateArrowOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Poi -> com.amap.api.maps.model.Poi:
    com.amap.api.maps.model.PoiCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String getName() -> getName
    com.amap.api.maps.model.LatLng getCoordinate() -> getCoordinate
    java.lang.String getPoiId() -> getPoiId
    int describeContents() -> describeContents
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PoiCreator -> com.amap.api.maps.model.PoiCreator:
    com.amap.api.maps.model.Poi createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.Poi[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.PoiPara -> com.amap.api.maps.model.PoiPara:
    com.amap.api.maps.model.LatLng a -> a
    java.lang.String b -> b
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
com.amap.api.maps.model.Polygon -> com.amap.api.maps.model.Polygon:
    com.amap.api.mapcore.ak a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolygonOptions -> com.amap.api.maps.model.PolygonOptions:
    com.amap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolygonOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.PolygonOptionsCreator -> com.amap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polyline -> com.amap.api.maps.model.Polyline:
    com.amap.api.mapcore.al a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    void setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.amap.api.maps.model.LatLng getNearestLatLng(com.amap.api.maps.model.LatLng) -> getNearestLatLng
    void setTransparency(float) -> setTransparency
com.amap.api.maps.model.PolylineOptions -> com.amap.api.maps.model.PolylineOptions:
    com.amap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    float e -> e
    boolean f -> f
    java.lang.String a -> a
    com.amap.api.maps.model.BitmapDescriptor g -> g
    java.util.List h -> h
    java.util.List i -> i
    java.util.List j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    com.amap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    com.amap.api.maps.model.PolylineOptions setCustomTexture(com.amap.api.maps.model.BitmapDescriptor) -> setCustomTexture
    com.amap.api.maps.model.BitmapDescriptor getCustomTexture() -> getCustomTexture
    com.amap.api.maps.model.PolylineOptions setCustomTextureList(java.util.List) -> setCustomTextureList
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.amap.api.maps.model.PolylineOptions setCustomTextureIndex(java.util.List) -> setCustomTextureIndex
    java.util.List getCustomTextureIndex() -> getCustomTextureIndex
    com.amap.api.maps.model.PolylineOptions colorValues(java.util.List) -> colorValues
    java.util.List getColorValues() -> getColorValues
    com.amap.api.maps.model.PolylineOptions useGradient(boolean) -> useGradient
    boolean isUseGradient() -> isUseGradient
    boolean isUseTexture() -> isUseTexture
    boolean isGeodesic() -> isGeodesic
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolylineOptions width(float) -> width
    com.amap.api.maps.model.PolylineOptions color(int) -> color
    com.amap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolylineOptions visible(boolean) -> visible
    com.amap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    com.amap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PolylineOptionsCreator -> com.amap.api.maps.model.PolylineOptionsCreator:
    com.amap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.RoutePara -> com.amap.api.maps.model.RoutePara:
    int a -> a
    int b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int getDrivingRouteStyle() -> getDrivingRouteStyle
    void setDrivingRouteStyle(int) -> setDrivingRouteStyle
    int getTransitRouteStyle() -> getTransitRouteStyle
    void setTransitRouteStyle(int) -> setTransitRouteStyle
    com.amap.api.maps.model.LatLng getStartPoint() -> getStartPoint
    void setStartPoint(com.amap.api.maps.model.LatLng) -> setStartPoint
    com.amap.api.maps.model.LatLng getEndPoint() -> getEndPoint
    void setEndPoint(com.amap.api.maps.model.LatLng) -> setEndPoint
    java.lang.String getEndName() -> getEndName
    void setEndName(java.lang.String) -> setEndName
    java.lang.String getStartName() -> getStartName
    void setStartName(java.lang.String) -> setStartName
com.amap.api.maps.model.RuntimeRemoteException -> com.amap.api.maps.model.RuntimeRemoteException:
com.amap.api.maps.model.Text -> com.amap.api.maps.model.Text:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.amap.api.mapcore.ao a -> a
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setBackgroundColor(int) -> setBackgroundColor
    int getBackgroundColor() -> getBackgroundColor
    void setFontColor(int) -> setFontColor
    int getFontColor() -> getFontColor
    void setFontSize(int) -> setFontSize
    int getFontSize() -> getFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void setAlign(int,int) -> setAlign
    int getAlignX() -> getAlignX
    int getAlignY() -> getAlignY
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
com.amap.api.maps.model.TextOptions -> com.amap.api.maps.model.TextOptions:
    com.amap.api.maps.model.TextOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    android.graphics.Typeface d -> d
    float e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    java.lang.Object j -> j
    int k -> k
    float l -> l
    boolean m -> m
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.TextOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.TextOptions text(java.lang.String) -> text
    com.amap.api.maps.model.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.amap.api.maps.model.TextOptions visible(boolean) -> visible
    com.amap.api.maps.model.TextOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TextOptions rotate(float) -> rotate
    com.amap.api.maps.model.TextOptions align(int,int) -> align
    com.amap.api.maps.model.TextOptions backgroundColor(int) -> backgroundColor
    com.amap.api.maps.model.TextOptions setObject(java.lang.Object) -> setObject
    com.amap.api.maps.model.TextOptions fontColor(int) -> fontColor
    com.amap.api.maps.model.TextOptions fontSize(int) -> fontSize
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getText() -> getText
    android.graphics.Typeface getTypeface() -> getTypeface
    float getRotate() -> getRotate
    int getAlignX() -> getAlignX
    int getAlignY() -> getAlignY
    int getBackgroundColor() -> getBackgroundColor
    int getFontColor() -> getFontColor
    java.lang.Object getObject() -> getObject
    int getFontSize() -> getFontSize
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.TextOptionsCreator -> com.amap.api.maps.model.TextOptionsCreator:
    com.amap.api.maps.model.TextOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TextOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Tile -> com.amap.api.maps.model.Tile:
    com.amap.api.maps.model.d CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileOverlay -> com.amap.api.maps.model.TileOverlay:
    com.amap.api.mapcore.ap a -> a
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.TileOverlayOptions -> com.amap.api.maps.model.TileOverlayOptions:
    com.amap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.TileProvider b -> b
    boolean c -> c
    float d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.TileOverlayOptions tileProvider(com.amap.api.maps.model.TileProvider) -> tileProvider
    com.amap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    com.amap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    com.amap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    com.amap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int getMemCacheSize() -> getMemCacheSize
    int getDiskCacheSize() -> getDiskCacheSize
    java.lang.String getDiskCacheDir() -> getDiskCacheDir
    boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    boolean getDiskCacheEnabled() -> getDiskCacheEnabled
com.amap.api.maps.model.TileOverlayOptionsCreator -> com.amap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProjection -> com.amap.api.maps.model.TileProjection:
    com.amap.api.maps.model.TileProjection CREATOR -> CREATOR
    int offsetX -> offsetX
    int offsetY -> offsetY
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileProjectionCreator -> com.amap.api.maps.model.TileProjectionCreator:
    com.amap.api.maps.model.TileProjection createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileProjection[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProvider -> com.amap.api.maps.model.TileProvider:
    com.amap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.UrlTileProvider -> com.amap.api.maps.model.UrlTileProvider:
    int a -> a
    int b -> b
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.VisibleRegion -> com.amap.api.maps.model.VisibleRegion:
    com.amap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng nearLeft -> nearLeft
    com.amap.api.maps.model.LatLng nearRight -> nearRight
    com.amap.api.maps.model.LatLng farLeft -> farLeft
    com.amap.api.maps.model.LatLng farRight -> farRight
    com.amap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int a() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.VisibleRegionCreator -> com.amap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.WeightedLatLng -> com.amap.api.maps.model.WeightedLatLng:
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    com.autonavi.amap.mapcore.DPoint a -> a
    double intensity -> intensity
    com.amap.api.maps.model.LatLng latLng -> latLng
    com.autonavi.amap.mapcore.DPoint getPoint() -> getPoint
com.amap.api.maps.model.a -> com.amap.api.maps.model.a:
com.amap.api.maps.model.b -> com.amap.api.maps.model.b:
com.amap.api.maps.model.c -> com.amap.api.maps.model.c:
    com.amap.api.mapcore.util.az a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.amap.api.maps.model.WeightedLatLng) -> a
    void a(double,double,com.amap.api.maps.model.WeightedLatLng) -> a
    void a() -> a
    java.util.Collection a(com.amap.api.mapcore.util.az) -> a
    void a(com.amap.api.mapcore.util.az,java.util.Collection) -> a
com.amap.api.maps.model.d -> com.amap.api.maps.model.d:
    com.amap.api.maps.model.Tile a(android.os.Parcel) -> a
    com.amap.api.maps.model.Tile[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.City -> com.amap.api.maps.offlinemap.City:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCity(java.lang.String) -> setCity
    java.lang.String getCity() -> getCity
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    java.lang.String getJianpin() -> getJianpin
    void setJianpin(java.lang.String) -> setJianpin
    java.lang.String getPinyin() -> getPinyin
    void setPinyin(java.lang.String) -> setPinyin
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapCity -> com.amap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapManager -> com.amap.api.maps.offlinemap.OfflineMapManager:
    android.content.Context c -> c
    com.amap.api.maps.AMap d -> d
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener e -> e
    android.os.Handler f -> f
    android.os.Handler g -> g
    com.amap.api.mapcore.util.m a -> a
    com.amap.api.mapcore.util.i b -> b
    void a(android.content.Context) -> a
    void downloadByCityCode(java.lang.String) -> downloadByCityCode
    void downloadByCityName(java.lang.String) -> downloadByCityName
    void downloadByProvinceName(java.lang.String) -> downloadByProvinceName
    void remove(java.lang.String) -> remove
    java.util.ArrayList getOfflineMapProvinceList() -> getOfflineMapProvinceList
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityCode(java.lang.String) -> getItemByCityCode
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    com.amap.api.maps.offlinemap.OfflineMapProvince getItemByProvinceName(java.lang.String) -> getItemByProvinceName
    java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    java.util.ArrayList getDownloadingProvinceList() -> getDownloadingProvinceList
    java.util.ArrayList getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    java.util.ArrayList getDownloadOfflineMapProvinceList() -> getDownloadOfflineMapProvinceList
    void a(java.lang.String,java.lang.String) -> a
    void updateOfflineCityByCode(java.lang.String) -> updateOfflineCityByCode
    void updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    void updateOfflineMapProvinceByName(java.lang.String) -> updateOfflineMapProvinceByName
    void a() -> a
    void restart() -> restart
    void stop() -> stop
    void pause() -> pause
    void destroy() -> destroy
    void b() -> b
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener a(com.amap.api.maps.offlinemap.OfflineMapManager) -> a
    android.os.Handler b(com.amap.api.maps.offlinemap.OfflineMapManager) -> b
    com.amap.api.maps.AMap c(com.amap.api.maps.offlinemap.OfflineMapManager) -> c
com.amap.api.maps.offlinemap.OfflineMapManager$1 -> com.amap.api.maps.offlinemap.OfflineMapManager$1:
    com.amap.api.maps.offlinemap.OfflineMapManager a -> a
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void c(com.amap.api.mapcore.util.g) -> c
com.amap.api.maps.offlinemap.OfflineMapManager$1$1 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$1:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$1$2 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$2:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$1$3 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$3:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$2 -> com.amap.api.maps.offlinemap.OfflineMapManager$2:
    java.lang.String a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$3 -> com.amap.api.maps.offlinemap.OfflineMapManager$3:
    java.lang.String a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
com.amap.api.maps.offlinemap.OfflineMapProvince -> com.amap.api.maps.offlinemap.OfflineMapProvince:
    java.lang.String a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.util.ArrayList f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int getState() -> getState
    void setState(int) -> setState
    long getSize() -> getSize
    void setSize(long) -> setSize
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.ArrayList getCityList() -> getCityList
    void setCityList(java.util.ArrayList) -> setCityList
com.amap.api.maps.offlinemap.OfflineMapStatus -> com.amap.api.maps.offlinemap.OfflineMapStatus:
    int CHECKUPDATES -> CHECKUPDATES
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
    int NEW_VERSION -> NEW_VERSION
    int EXCEPTION_NETWORK_LOADING -> EXCEPTION_NETWORK_LOADING
    int EXCEPTION_AMAP -> EXCEPTION_AMAP
    int EXCEPTION_SDCARD -> EXCEPTION_SDCARD
    int START_DOWNLOAD_FAILD -> START_DOWNLOAD_FAILD
com.amap.api.maps.offlinemap.Province -> com.amap.api.maps.offlinemap.Province:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvinceName() -> getProvinceName
    java.lang.String getJianpin() -> getJianpin
    java.lang.String getPinyin() -> getPinyin
    void setProvinceName(java.lang.String) -> setProvinceName
    void setJianpin(java.lang.String) -> setJianpin
    void setPinyin(java.lang.String) -> setPinyin
    void setProvinceCode(java.lang.String) -> setProvinceCode
    java.lang.String getProvinceCode() -> getProvinceCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.a -> com.amap.api.maps.offlinemap.a:
    com.amap.api.maps.offlinemap.City a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.City[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.b -> com.amap.api.maps.offlinemap.b:
    com.amap.api.maps.offlinemap.OfflineMapCity a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.c -> com.amap.api.maps.offlinemap.c:
    com.amap.api.maps.offlinemap.OfflineMapProvince a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.d -> com.amap.api.maps.offlinemap.d:
    com.amap.api.maps.offlinemap.Province a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.Province[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.overlay.BusLineOverlay -> com.amap.api.maps.overlay.BusLineOverlay:
    com.amap.api.services.busline.BusLineItem a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    com.amap.api.maps.model.Polyline d -> d
    java.util.List e -> e
    com.amap.api.maps.model.BitmapDescriptor f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    com.amap.api.maps.model.BitmapDescriptor h -> h
    android.content.Context i -> i
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void a() -> a
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a(java.util.List) -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getBusStationIndex(com.amap.api.maps.model.Marker) -> getBusStationIndex
    com.amap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    int getBusColor() -> getBusColor
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.maps.model.BitmapDescriptor a(java.lang.String) -> a
com.amap.api.maps.overlay.BusRouteOverlay -> com.amap.api.maps.overlay.BusRouteOverlay:
    com.amap.api.services.route.BusPath a -> a
    com.amap.api.maps.model.LatLng b -> b
    void addToMap() -> addToMap
    void a(com.amap.api.services.route.BusStep) -> a
    void a(com.amap.api.services.route.RouteBusLineItem) -> a
    void a(java.util.List) -> a
    void a(com.amap.api.maps.model.LatLng,java.lang.String,java.lang.String) -> a
    void b(com.amap.api.services.route.RouteBusLineItem) -> b
    void a(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> a
    void b(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> b
    void c(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> c
    void b(com.amap.api.services.route.BusStep) -> b
    com.amap.api.services.core.LatLonPoint c(com.amap.api.services.route.BusStep) -> c
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void b(java.util.List) -> b
    java.lang.String c(java.util.List) -> c
    void drawLineArrow(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> drawLineArrow
    java.lang.String c(com.amap.api.services.route.RouteBusLineItem) -> c
    com.amap.api.services.core.LatLonPoint d(com.amap.api.services.route.BusStep) -> d
    com.amap.api.services.core.LatLonPoint e(com.amap.api.services.route.BusStep) -> e
    com.amap.api.services.core.LatLonPoint f(com.amap.api.services.route.BusStep) -> f
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.DrivingRouteOverlay -> com.amap.api.maps.overlay.DrivingRouteOverlay:
    com.amap.api.services.route.DrivePath a -> a
    java.util.List b -> b
    java.util.List c -> c
    boolean d -> d
    android.content.Context e -> e
    com.amap.api.maps.model.PolylineOptions f -> f
    void addToMap() -> addToMap
    void a() -> a
    void b() -> b
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.DriveStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.DriveStep) -> b
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.maps.model.LatLng) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void c(com.amap.api.services.route.DriveStep) -> c
    void a(com.amap.api.services.route.DriveStep,com.amap.api.maps.model.LatLng) -> a
    void c() -> c
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setThroughPointIconVisibility(boolean) -> setThroughPointIconVisibility
    com.amap.api.maps.model.BitmapDescriptor d() -> d
    void removeFromMap() -> removeFromMap
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
com.amap.api.maps.overlay.PoiOverlay -> com.amap.api.maps.overlay.PoiOverlay:
    java.util.List a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a() -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getPoiIndex(com.amap.api.maps.model.Marker) -> getPoiIndex
    com.amap.api.services.core.PoiItem getPoiItem(int) -> getPoiItem
com.amap.api.maps.overlay.WalkRouteOverlay -> com.amap.api.maps.overlay.WalkRouteOverlay:
    com.amap.api.services.route.WalkPath a -> a
    void addToMap() -> addToMap
    void a(com.amap.api.services.route.WalkStep,com.amap.api.services.route.WalkStep) -> a
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.WalkStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.WalkStep) -> b
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void c(com.amap.api.services.route.WalkStep) -> c
    void a(com.amap.api.services.route.WalkStep,com.amap.api.maps.model.LatLng) -> a
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.a -> com.amap.api.maps.overlay.a:
    int a -> a
    com.amap.api.maps.model.LatLng a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.ArrayList a(java.util.List) -> a
com.amap.api.maps.overlay.b -> com.amap.api.maps.overlay.b:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.amap.api.maps.model.Marker startMarker -> startMarker
    com.amap.api.maps.model.Marker endMarker -> endMarker
    com.amap.api.maps.model.LatLng startPoint -> startPoint
    com.amap.api.maps.model.LatLng endPoint -> endPoint
    com.amap.api.maps.AMap mAMap -> mAMap
    android.content.Context a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    boolean nodeIconVisible -> nodeIconVisible
    void removeFromMap() -> removeFromMap
    void a() -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
    void addStartAndEndMarker() -> addStartAndEndMarker
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void addStationMarker(com.amap.api.maps.model.MarkerOptions) -> addStationMarker
    void addPolyLine(com.amap.api.maps.model.PolylineOptions) -> addPolyLine
    float getRouteWidth() -> getRouteWidth
    int getWalkColor() -> getWalkColor
    int getBusColor() -> getBusColor
    int getDriveColor() -> getDriveColor
com.amap.api.navi.AMapHudView -> com.amap.api.navi.AMapHudView:
    int[] hud_imgActions -> hud_imgActions
    long delayMillis -> delayMillis
    com.amap.api.navi.AMapHudViewListener aMapHudVewListener -> aMapHudVewListener
    boolean isLandscape -> isLandscape
    android.content.Context mContext -> mContext
    android.view.View frameLayout -> frameLayout
    com.amap.api.navi.AMapNavi mAMapNavi -> mAMapNavi
    int mWidth -> mWidth
    int mHeight -> mHeight
    int hudMode -> hudMode
    boolean isHudMenu -> isHudMenu
    android.os.Handler disappearHudHandler -> disappearHudHandler
    android.widget.TextView restDistanceTime -> restDistanceTime
    java.lang.String distanceTimeTextStr -> distanceTimeTextStr
    android.widget.TextView limitSpeedTextView -> limitSpeedTextView
    android.widget.CheckBox mMirrorModeCheckBox -> mMirrorModeCheckBox
    com.amap.api.navi.view.AutoNaviHudMirrorImage autonaviHudMirrorImage -> autonaviHudMirrorImage
    android.widget.TextView nextRoadNameText -> nextRoadNameText
    android.widget.TextView restDistanceText -> restDistanceText
    android.widget.ImageView roadsignimg -> roadsignimg
    android.widget.TextView nextRoadDistanceText -> nextRoadDistanceText
    android.view.View title_btn_goback -> title_btn_goback
    android.view.View mHudMirrorTitle -> mHudMirrorTitle
    java.lang.Runnable disappearHudTitleRunnable -> disappearHudTitleRunnable
    android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener -> mOnCheckedChangeListener
    java.lang.String nextRoadNameTextStr -> nextRoadNameTextStr
    java.lang.String restDistanceTextStr -> restDistanceTextStr
    android.text.SpannableString nextRoadDisTextSpannableStr -> nextRoadDisTextSpannableStr
    int resId -> resId
    int getHudViewMode() -> getHudViewMode
    void setHudViewMode(int) -> setHudViewMode
    boolean getHudMenuEnabled() -> getHudMenuEnabled
    void setHudMenuEnabled(java.lang.Boolean) -> setHudMenuEnabled
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setHudViewListener(com.amap.api.navi.AMapHudViewListener) -> setHudViewListener
    void init(android.content.Context) -> init
    void initResolution() -> initResolution
    boolean onTouchHudMirrorEvent(android.view.MotionEvent) -> onTouchHudMirrorEvent
    void loadShowHudTitleAnimation() -> loadShowHudTitleAnimation
    void initWidget() -> initWidget
    void getScreenInfo() -> getScreenInfo
    void updateHudWidgetContent() -> updateHudWidgetContent
    void setWidgetListener() -> setWidgetListener
    void removeCallbacks() -> removeCallbacks
    void setCheckBoxAndMirrorImageState(boolean) -> setCheckBoxAndMirrorImageState
    void loadHideHudTitleAnimation() -> loadHideHudTitleAnimation
    boolean isHudMirror() -> isHudMirror
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void updateHudUI(com.amap.api.navi.model.NaviInfo) -> updateHudUI
    android.text.SpannableString switchStrFromMeter(int) -> switchStrFromMeter
    android.text.SpannableString getSpanableString(android.content.Context,java.lang.String,java.lang.String) -> getSpanableString
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onInitNaviFailure() -> onInitNaviFailure
    void onInitNaviSuccess() -> onInitNaviSuccess
    void onStartNavi(int) -> onStartNavi
    void onTrafficStatusUpdate() -> onTrafficStatusUpdate
    void onLocationChange(com.amap.api.navi.model.AMapNaviLocation) -> onLocationChange
    void onGetNavigationText(int,java.lang.String) -> onGetNavigationText
    void onEndEmulatorNavi() -> onEndEmulatorNavi
    void onArriveDestination() -> onArriveDestination
    void onCalculateRouteSuccess() -> onCalculateRouteSuccess
    void onCalculateRouteFailure(int) -> onCalculateRouteFailure
    void onReCalculateRouteForYaw() -> onReCalculateRouteForYaw
    void onReCalculateRouteForTrafficJam() -> onReCalculateRouteForTrafficJam
    void onArrivedWayPoint(int) -> onArrivedWayPoint
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    void onNaviInfoUpdate(com.amap.api.navi.model.NaviInfo) -> onNaviInfoUpdate
    void OnUpdateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> OnUpdateTrafficFacility
    void OnUpdateTrafficFacility(com.amap.api.navi.model.AMapNaviTrafficFacilityInfo) -> OnUpdateTrafficFacility
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void hideCross() -> hideCross
    void showLaneInfo(com.amap.api.navi.model.AMapLaneInfo[],byte[],byte[]) -> showLaneInfo
    void hideLaneInfo() -> hideLaneInfo
    void onCalculateMultipleRoutesSuccess(int[]) -> onCalculateMultipleRoutesSuccess
    void notifyParallelRoad(int) -> notifyParallelRoad
    void carProjectionChange(com.autonavi.wtbt.CarLocation) -> carProjectionChange
    void onNaviInfoUpdated(com.amap.api.navi.model.AMapNaviInfo) -> onNaviInfoUpdated
    void access$000(com.amap.api.navi.AMapHudView) -> access$000
    com.amap.api.navi.view.AutoNaviHudMirrorImage access$100(com.amap.api.navi.AMapHudView) -> access$100
    int access$202(com.amap.api.navi.AMapHudView,int) -> access$202
    void access$300(com.amap.api.navi.AMapHudView,boolean) -> access$300
    void access$400(com.amap.api.navi.AMapHudView) -> access$400
    java.lang.Runnable access$500(com.amap.api.navi.AMapHudView) -> access$500
    android.os.Handler access$600(com.amap.api.navi.AMapHudView) -> access$600
    android.view.View access$700(com.amap.api.navi.AMapHudView) -> access$700
com.amap.api.navi.AMapHudView$1 -> com.amap.api.navi.AMapHudView$1:
    com.amap.api.navi.AMapHudView a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.amap.api.navi.AMapHudViewListener -> com.amap.api.navi.AMapHudViewListener:
    void onHudViewCancel() -> onHudViewCancel
com.amap.api.navi.AMapNavi -> com.amap.api.navi.AMapNavi:
    int DEFAULT_MIN_TIMEOUT -> DEFAULT_MIN_TIMEOUT
    int BEFORE_OFFSET -> BEFORE_OFFSET
    int DrivingDefault -> DrivingDefault
    int DrivingSaveMoney -> DrivingSaveMoney
    int DrivingShortDistance -> DrivingShortDistance
    int DrivingNoExpressways -> DrivingNoExpressways
    int DrivingFastestTime -> DrivingFastestTime
    int DrivingAvoidCongestion -> DrivingAvoidCongestion
    int DrivingMultipleRoutes -> DrivingMultipleRoutes
    int GPSNaviMode -> GPSNaviMode
    int EmulatorNaviMode -> EmulatorNaviMode
    int NaviInfoText -> NaviInfoText
    int FrontTrafficText -> FrontTrafficText
    int WholeTrafficText -> WholeTrafficText
    int NoneDetectedMode -> NoneDetectedMode
    int CameraDetectedMode -> CameraDetectedMode
    int SpecialRoadDetectedMode -> SpecialRoadDetectedMode
    int CameraAndSpecialRoadDetectedMode -> CameraAndSpecialRoadDetectedMode
    com.amap.api.navi.AMapNavi sAMapNavi -> sAMapNavi
    android.content.Context mContext -> mContext
    com.amap.api.navi.h mTBTControl -> mTBTControl
    com.amap.api.navi.f mNaviSetting -> mNaviSetting
    boolean mIsUseExtraGPSData -> mIsUseExtraGPSData
    com.amap.api.navi.AMapNavi getInstance(android.content.Context) -> getInstance
    java.lang.String getVersion() -> getVersion
    void setAMapNavi(com.amap.api.navi.AMapNavi) -> setAMapNavi
    void destroy() -> destroy
    boolean startNavi(int) -> startNavi
    void pauseNavi() -> pauseNavi
    void stopNavi() -> stopNavi
    void resumeNavi() -> resumeNavi
    void refreshTrafficStatuses() -> refreshTrafficStatuses
    boolean readNaviInfo() -> readNaviInfo
    boolean readTrafficInfo(int) -> readTrafficInfo
    boolean calculateDriveRoute(java.util.List,java.util.List,java.util.List,int) -> calculateDriveRoute
    boolean calculateDriveRoute(java.util.List,java.util.List,int) -> calculateDriveRoute
    boolean reCalculateRoute(int) -> reCalculateRoute
    java.util.List getTrafficStatuses(int,int) -> getTrafficStatuses
    com.amap.api.navi.model.AMapNaviPath getNaviPath() -> getNaviPath
    java.util.HashMap getNaviPaths() -> getNaviPaths
    java.util.List getNaviGuideList() -> getNaviGuideList
    com.amap.api.navi.f getNaviSetting() -> getNaviSetting
    void setEmulatorNaviSpeed(int) -> setEmulatorNaviSpeed
    void setTimeForOneWord(int) -> setTimeForOneWord
    void setAMapNaviListener(com.amap.api.navi.AMapNaviListener) -> setAMapNaviListener
    void addAMapNaviListener(com.amap.api.navi.AMapNaviListener) -> addAMapNaviListener
    void removeAMapNaviListener(com.amap.api.navi.AMapNaviListener) -> removeAMapNaviListener
    boolean startGPS() -> startGPS
    boolean startGPS(long,int) -> startGPS
    boolean stopGPS() -> stopGPS
    boolean calculateWalkRoute(com.amap.api.navi.model.NaviLatLng) -> calculateWalkRoute
    boolean calculateWalkRoute(com.amap.api.navi.model.NaviLatLng,com.amap.api.navi.model.NaviLatLng) -> calculateWalkRoute
    void setReCalculateRouteForYaw(boolean) -> setReCalculateRouteForYaw
    void setReCalculateRouteForTrafficJam(boolean) -> setReCalculateRouteForTrafficJam
    int getEngineType() -> getEngineType
    int getNaviModel() -> getNaviModel
    int getNaviType() -> getNaviType
    com.amap.api.navi.model.NaviInfo getNaviInfo() -> getNaviInfo
    void setDetectedMode(int) -> setDetectedMode
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setSoTimeout(int) -> setSoTimeout
    boolean selectRouteId(int) -> selectRouteId
    boolean isGpsReady() -> isGpsReady
    boolean setBroadcastMode(int) -> setBroadcastMode
    void switchParallelRoad() -> switchParallelRoad
    boolean getIsUseExtraGPSData() -> getIsUseExtraGPSData
    void setIsUseExtraGPSData(boolean) -> setIsUseExtraGPSData
    void setExtraGPSData(android.location.Location) -> setExtraGPSData
com.amap.api.navi.AMapNaviException -> com.amap.api.navi.AMapNaviException:
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ILLEGAL_ARGUMENT -> ILLEGAL_ARGUMENT
    java.lang.String mDetailMessage -> mDetailMessage
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.navi.AMapNaviListener -> com.amap.api.navi.AMapNaviListener:
    void onInitNaviFailure() -> onInitNaviFailure
    void onInitNaviSuccess() -> onInitNaviSuccess
    void onStartNavi(int) -> onStartNavi
    void onTrafficStatusUpdate() -> onTrafficStatusUpdate
    void onLocationChange(com.amap.api.navi.model.AMapNaviLocation) -> onLocationChange
    void onGetNavigationText(int,java.lang.String) -> onGetNavigationText
    void onEndEmulatorNavi() -> onEndEmulatorNavi
    void onArriveDestination() -> onArriveDestination
    void onCalculateRouteSuccess() -> onCalculateRouteSuccess
    void onCalculateRouteFailure(int) -> onCalculateRouteFailure
    void onReCalculateRouteForYaw() -> onReCalculateRouteForYaw
    void onReCalculateRouteForTrafficJam() -> onReCalculateRouteForTrafficJam
    void onArrivedWayPoint(int) -> onArrivedWayPoint
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    void onNaviInfoUpdated(com.amap.api.navi.model.AMapNaviInfo) -> onNaviInfoUpdated
    void onNaviInfoUpdate(com.amap.api.navi.model.NaviInfo) -> onNaviInfoUpdate
    void OnUpdateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> OnUpdateTrafficFacility
    void OnUpdateTrafficFacility(com.amap.api.navi.model.AMapNaviTrafficFacilityInfo) -> OnUpdateTrafficFacility
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void hideCross() -> hideCross
    void showLaneInfo(com.amap.api.navi.model.AMapLaneInfo[],byte[],byte[]) -> showLaneInfo
    void hideLaneInfo() -> hideLaneInfo
    void onCalculateMultipleRoutesSuccess(int[]) -> onCalculateMultipleRoutesSuccess
    void notifyParallelRoad(int) -> notifyParallelRoad
com.amap.api.navi.AMapNaviView -> com.amap.api.navi.AMapNaviView:
    int CAR_UP_MODE -> CAR_UP_MODE
    int NORTH_UP_MODE -> NORTH_UP_MODE
    int MESSAGE_CAR_LOCK -> MESSAGE_CAR_LOCK
    int MESSAGE_MAP_LOADED -> MESSAGE_MAP_LOADED
    int MESSAGE_CAR_UNLOCK -> MESSAGE_CAR_UNLOCK
    int ENLARGED_ROAD_WIDTH_PIXEL_WHEN_LANDSCAPE -> ENLARGED_ROAD_WIDTH_PIXEL_WHEN_LANDSCAPE
    int ENLARGED_ROAD_HEIGHT_PIXEL_WHEN_PORTRAIT -> ENLARGED_ROAD_HEIGHT_PIXEL_WHEN_PORTRAIT
    com.amap.api.navi.view.NaviRoadEnlargeView enlargedRoadView -> enlargedRoadView
    android.view.View naviLayout -> naviLayout
    android.widget.ImageView roadSignIV -> roadSignIV
    android.widget.TextView nextRoadDisBelowRoadSignTV -> nextRoadDisBelowRoadSignTV
    android.widget.TextView nextRoadNameAtTopBarTV -> nextRoadNameAtTopBarTV
    android.widget.TextView remainingDisAndTimeAtTopBarWhenLandscapeTV -> remainingDisAndTimeAtTopBarWhenLandscapeTV
    android.widget.FrameLayout keepOnNavigationLayout -> keepOnNavigationLayout
    android.widget.FrameLayout showNaviInfoBottomBarLayout -> showNaviInfoBottomBarLayout
    android.widget.LinearLayout roadSignLayout -> roadSignLayout
    android.widget.LinearLayout roadNameLayout -> roadNameLayout
    android.widget.LinearLayout zoomLayout -> zoomLayout
    android.widget.LinearLayout upLeftCornerNaviLayout -> upLeftCornerNaviLayout
    android.widget.FrameLayout arriveEndBottomBarLayout -> arriveEndBottomBarLayout
    android.widget.LinearLayout footerLinearLayout -> footerLinearLayout
    android.widget.TextView curRoadNameTV -> curRoadNameTV
    android.widget.TextView navigationGoOnTV -> navigationGoOnTV
    com.amap.api.navi.view.CustomTmcView customTmcView -> customTmcView
    com.amap.api.navi.view.DirectionView directionView -> directionView
    com.amap.api.navi.view.DirectionView directionHorizontalView -> directionHorizontalView
    android.widget.ImageView routeTMCOnOffView -> routeTMCOnOffView
    android.graphics.drawable.Drawable trafficOpen -> trafficOpen
    android.graphics.drawable.Drawable trafficClose -> trafficClose
    android.widget.TextView remainingDisAtBottomBarTV -> remainingDisAtBottomBarTV
    android.widget.TextView remainingTimeAtBottomBarTV -> remainingTimeAtBottomBarTV
    android.widget.ImageView naviBackView -> naviBackView
    android.widget.ImageView dividingLineLeftOfMenu -> dividingLineLeftOfMenu
    android.widget.ImageView dividingLineRightOfBack -> dividingLineRightOfBack
    android.widget.ImageView naviSettingView -> naviSettingView
    android.widget.Button zoomOutBtn -> zoomOutBtn
    android.widget.Button zoomInBtn -> zoomInBtn
    android.widget.CheckBox routeOverviewView -> routeOverviewView
    com.amap.api.navi.view.DriveWayView driveWayView -> driveWayView
    android.widget.RelativeLayout footerLayout -> footerLayout
    android.widget.RelativeLayout containerRelativeLayout -> containerRelativeLayout
    android.widget.TextView speedCamera -> speedCamera
    android.widget.LinearLayout monitorCamera -> monitorCamera
    int nWidth -> nWidth
    int nHeight -> nHeight
    boolean isLandscape -> isLandscape
    int mapHeight -> mapHeight
    int mapWidth -> mapWidth
    boolean isRouteOverviewNow -> isRouteOverviewNow
    boolean isArrivedEnd -> isArrivedEnd
    boolean isLayOutVisible -> isLayOutVisible
    boolean isShowRoadEnlarge -> isShowRoadEnlarge
    boolean isDestroy -> isDestroy
    double mAnchorX -> mAnchorX
    double mAnchorY -> mAnchorY
    int mLockZoom -> mLockZoom
    int mLockTilt -> mLockTilt
    com.amap.api.navi.AMapNaviViewOptions aMapNaviViewOptions -> aMapNaviViewOptions
    com.amap.api.maps.MapView mapView -> mapView
    com.amap.api.navi.AMapNavi aMapNavi -> aMapNavi
    com.amap.api.navi.g uiController -> uiController
    com.amap.api.maps.AMap aMap -> aMap
    com.amap.api.navi.AMapNaviView$a mMapViewListenerTriggerHandler -> mMapViewListenerTriggerHandler
    long CAR_LOCK_DELAY_TIME -> CAR_LOCK_DELAY_TIME
    boolean isCarLock -> isCarLock
    int roadSignClickCount -> roadSignClickCount
    com.amap.api.navi.AMapNaviViewListener mAMapNaviViewListener -> mAMapNaviViewListener
    boolean isZoomVisible -> isZoomVisible
    boolean isCrossDisplayShow -> isCrossDisplayShow
    boolean isAutoChangeZoom -> isAutoChangeZoom
    int currentNaviMode -> currentNaviMode
    void setEnlargedRoadWidthPixelWhenLandscape(int) -> setEnlargedRoadWidthPixelWhenLandscape
    void setEnlargedRoadHeightPixelWhenPortrait(int) -> setEnlargedRoadHeightPixelWhenPortrait
    double getAnchorX() -> getAnchorX
    double getAnchorY() -> getAnchorY
    int getLockZoom() -> getLockZoom
    void setLockZoom(int) -> setLockZoom
    int getLockTilt() -> getLockTilt
    void setLockTilt(int) -> setLockTilt
    int getNaviMode() -> getNaviMode
    void setNaviMode(int) -> setNaviMode
    boolean isAutoChangeZoom() -> isAutoChangeZoom
    com.amap.api.navi.AMapNaviViewOptions getViewOptions() -> getViewOptions
    void setViewOptions(com.amap.api.navi.AMapNaviViewOptions) -> setViewOptions
    com.amap.api.maps.AMap getMap() -> getMap
    void init() -> init
    boolean isLandscape() -> isLandscape
    void buildScreenInfo() -> buildScreenInfo
    void initListener() -> initListener
    void findView() -> findView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setConfigurationChanged(boolean) -> setConfigurationChanged
    void checkViewOptions() -> checkViewOptions
    int dp2px(int) -> dp2px
    int px2dp(float) -> px2dp
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void ensureResourceRecycled() -> ensureResourceRecycled
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onMapLoaded() -> onMapLoaded
    void changeCamera() -> changeCamera
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
    void displayOverview() -> displayOverview
    void openNorthUpMode() -> openNorthUpMode
    void openNorthMode() -> openNorthMode
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void hideCross() -> hideCross
    void setEnlargedRoadLayout() -> setEnlargedRoadLayout
    void restoreNormalLayout() -> restoreNormalLayout
    void openCarUpMode() -> openCarUpMode
    void recoverLockMode() -> recoverLockMode
    void showDialog() -> showDialog
    void onTouch(android.view.MotionEvent) -> onTouch
    void setCarLock(boolean) -> setCarLock
    void setCarLock(boolean,boolean) -> setCarLock
    void onClick(android.view.View) -> onClick
    boolean isTrafficLine() -> isTrafficLine
    void setTrafficLine(boolean) -> setTrafficLine
    void showDebugInfo() -> showDebugInfo
    void setAMapNaviViewListener(com.amap.api.navi.AMapNaviViewListener) -> setAMapNaviViewListener
    void arrivedEnd() -> arrivedEnd
    void initLayout() -> initLayout
    boolean isShowRoadEnlarge() -> isShowRoadEnlarge
    boolean isOrientationLandscape() -> isOrientationLandscape
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean ifSizeChanged() -> ifSizeChanged
    void setCustomizedLockCenter() -> setCustomizedLockCenter
    void addTMCChartLayoutToMap() -> addTMCChartLayoutToMap
    void setMapLayoutParams(int) -> setMapLayoutParams
    void setMapLayoutParams(int,int,int,int) -> setMapLayoutParams
    void setZoomLayoutParams(int,int,int,int) -> setZoomLayoutParams
    void setLayOutVisible(boolean) -> setLayOutVisible
    void setZoomVisible(boolean) -> setZoomVisible
    void setIsRouteOverviewNow(boolean) -> setIsRouteOverviewNow
    com.amap.api.navi.AMapNavi access$000(com.amap.api.navi.AMapNaviView) -> access$000
    com.amap.api.navi.AMapNaviView$a access$100(com.amap.api.navi.AMapNaviView) -> access$100
    com.amap.api.navi.AMapNaviViewListener access$200(com.amap.api.navi.AMapNaviView) -> access$200
    void access$300(com.amap.api.navi.AMapNaviView) -> access$300
com.amap.api.navi.AMapNaviView$1 -> com.amap.api.navi.AMapNaviView$1:
    com.amap.api.navi.AMapNaviView a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.amap.api.navi.AMapNaviView$2 -> com.amap.api.navi.AMapNaviView$2:
    com.amap.api.navi.AMapNaviView a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.amap.api.navi.AMapNaviView$a -> com.amap.api.navi.AMapNaviView$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.navi.AMapNaviViewListener -> com.amap.api.navi.AMapNaviViewListener:
    void onNaviSetting() -> onNaviSetting
    void onNaviCancel() -> onNaviCancel
    boolean onNaviBackClick() -> onNaviBackClick
    void onNaviMapMode(int) -> onNaviMapMode
    void onNaviTurnClick() -> onNaviTurnClick
    void onNextRoadClick() -> onNextRoadClick
    void onScanViewButtonClick() -> onScanViewButtonClick
    void onLockMap(boolean) -> onLockMap
    void onNaviViewLoaded() -> onNaviViewLoaded
com.amap.api.navi.AMapNaviViewOptions -> com.amap.api.navi.AMapNaviViewOptions:
    int DEFAULT_COLOR_TOPIC -> DEFAULT_COLOR_TOPIC
    int BLUE_COLOR_TOPIC -> BLUE_COLOR_TOPIC
    int PINK_COLOR_TOPIC -> PINK_COLOR_TOPIC
    int WHITE_COLOR_TOPIC -> WHITE_COLOR_TOPIC
    int HUD_NORMAL_SHOW -> HUD_NORMAL_SHOW
    int HUD_MIRROR_SHOW -> HUD_MIRROR_SHOW
    boolean autoDrawRoute -> autoDrawRoute
    boolean isCrossDisplayEnabled -> isCrossDisplayEnabled
    boolean isCrossDisplayShow -> isCrossDisplayShow
    boolean isLaneInfoShow -> isLaneInfoShow
    int zoom -> zoom
    int tilt -> tilt
    boolean isCompassEnabled -> isCompassEnabled
    boolean isTrafficBarEnabled -> isTrafficBarEnabled
    boolean isTrafficLayerEnabled -> isTrafficLayerEnabled
    boolean isRouteListButtonShow -> isRouteListButtonShow
    boolean isNaviNight -> isNaviNight
    android.graphics.Bitmap startBitmap -> startBitmap
    android.graphics.Bitmap endBitmap -> endBitmap
    android.graphics.Bitmap wayBitmap -> wayBitmap
    android.graphics.Bitmap monitorBitmap -> monitorBitmap
    boolean isCameraEnabled -> isCameraEnabled
    boolean isScreenAlwaysBright -> isScreenAlwaysBright
    boolean isTrafficInfoUpdateEnabled -> isTrafficInfoUpdateEnabled
    boolean isCameraInfoUpdateEnabled -> isCameraInfoUpdateEnabled
    boolean isReCalculateRouteForYaw -> isReCalculateRouteForYaw
    boolean isReCalculateRouteForTrafficJam -> isReCalculateRouteForTrafficJam
    boolean isSettingMenuEnabled -> isSettingMenuEnabled
    int themeColor -> themeColor
    boolean isTrafficLine -> isTrafficLine
    int leaderLineColor -> leaderLineColor
    boolean isLayoutVisible -> isLayoutVisible
    long lockMapDelayed -> lockMapDelayed
    boolean isAutoChangeZoom -> isAutoChangeZoom
    double mapCenter_X -> mapCenter_X
    double mapCenter_Y -> mapCenter_Y
    boolean isCompassEnabled() -> isCompassEnabled
    void setCompassEnabled(java.lang.Boolean) -> setCompassEnabled
    boolean isTrafficBarEnabled() -> isTrafficBarEnabled
    void setTrafficBarEnabled(java.lang.Boolean) -> setTrafficBarEnabled
    boolean isTrafficLayerEnabled() -> isTrafficLayerEnabled
    void setTrafficLayerEnabled(java.lang.Boolean) -> setTrafficLayerEnabled
    boolean isRouteListButtonShow() -> isRouteListButtonShow
    void setRouteListButtonShow(boolean) -> setRouteListButtonShow
    boolean isNaviNight() -> isNaviNight
    void setNaviNight(boolean) -> setNaviNight
    void setStartPointBitmap(android.graphics.Bitmap) -> setStartPointBitmap
    android.graphics.Bitmap getStartMarker() -> getStartMarker
    void setEndPointBitmap(android.graphics.Bitmap) -> setEndPointBitmap
    android.graphics.Bitmap getEndMarker() -> getEndMarker
    void setWayPointBitmap(android.graphics.Bitmap) -> setWayPointBitmap
    android.graphics.Bitmap getWayMarker() -> getWayMarker
    void setMonitorCameraBitmap(android.graphics.Bitmap) -> setMonitorCameraBitmap
    android.graphics.Bitmap getMonitorMarker() -> getMonitorMarker
    boolean isMonitorCameraEnabled() -> isMonitorCameraEnabled
    void setMonitorCameraEnabled(java.lang.Boolean) -> setMonitorCameraEnabled
    boolean isScreenAlwaysBright() -> isScreenAlwaysBright
    void setScreenAlwaysBright(boolean) -> setScreenAlwaysBright
    boolean isTrafficInfoUpdateEnabled() -> isTrafficInfoUpdateEnabled
    void setTrafficInfoUpdateEnabled(boolean) -> setTrafficInfoUpdateEnabled
    boolean isCameraInfoUpdateEnabled() -> isCameraInfoUpdateEnabled
    void setCameraInfoUpdateEnabled(boolean) -> setCameraInfoUpdateEnabled
    boolean isReCalculateRouteForYaw() -> isReCalculateRouteForYaw
    void setReCalculateRouteForYaw(java.lang.Boolean) -> setReCalculateRouteForYaw
    boolean isReCalculateRouteForTrafficJam() -> isReCalculateRouteForTrafficJam
    void setReCalculateRouteForTrafficJam(java.lang.Boolean) -> setReCalculateRouteForTrafficJam
    boolean isSettingMenuEnabled() -> isSettingMenuEnabled
    void setSettingMenuEnabled(java.lang.Boolean) -> setSettingMenuEnabled
    int getNaviViewTopic() -> getNaviViewTopic
    void setNaviViewTopic(int) -> setNaviViewTopic
    boolean isTrafficLine() -> isTrafficLine
    void setTrafficLine(boolean) -> setTrafficLine
    int getLeaderLineColor() -> getLeaderLineColor
    boolean isLeaderLineEnabled() -> isLeaderLineEnabled
    void setLeaderLineEnabled(int) -> setLeaderLineEnabled
    boolean isLayoutVisible() -> isLayoutVisible
    void setLayoutVisible(boolean) -> setLayoutVisible
    long getLockMapDelayed() -> getLockMapDelayed
    void setLockMapDelayed(long) -> setLockMapDelayed
    boolean isAutoDrawRoute() -> isAutoDrawRoute
    void setAutoDrawRoute(boolean) -> setAutoDrawRoute
    boolean isCrossDisplayEnabled() -> isCrossDisplayEnabled
    void setCrossDisplayEnabled(boolean) -> setCrossDisplayEnabled
    boolean isCrossDisplayShow() -> isCrossDisplayShow
    void setCrossDisplayShow(boolean) -> setCrossDisplayShow
    boolean isLaneInfoShow() -> isLaneInfoShow
    void setLaneInfoShow(boolean) -> setLaneInfoShow
    int getZoom() -> getZoom
    void setZoom(int) -> setZoom
    int getTilt() -> getTilt
    void setTilt(int) -> setTilt
    boolean isAutoChangeZoom() -> isAutoChangeZoom
    void setAutoChangeZoom(boolean) -> setAutoChangeZoom
    void setPointToCenter(double,double) -> setPointToCenter
    double getMapCenter_X() -> getMapCenter_X
    double getMapCenter_Y() -> getMapCenter_Y
com.amap.api.navi.RoutePlanErrCode -> com.amap.api.navi.RoutePlanErrCode:
    int SUCCESS_ROUTE -> SUCCESS_ROUTE
    int ERROR_CONNECTION -> ERROR_CONNECTION
    int ERROR_STARTPOINT -> ERROR_STARTPOINT
    int ERROR_ENDPOINT -> ERROR_ENDPOINT
    int ERROR_PROTOCOL -> ERROR_PROTOCOL
    int ERROR_NOROADFORSTARTPOINT -> ERROR_NOROADFORSTARTPOINT
    int ERROR_NOROADFORENDPOINT -> ERROR_NOROADFORENDPOINT
    int ERROR_NOROADFORWAYPOINT -> ERROR_NOROADFORWAYPOINT
    int INVALID_USER_KEY -> INVALID_USER_KEY
    int SERVICE_NOT_EXIST -> SERVICE_NOT_EXIST
    int SERVICE_RESPONSE_ERROR -> SERVICE_RESPONSE_ERROR
    int INSUFFICIENT_PRIVILEGES -> INSUFFICIENT_PRIVILEGES
    int OVER_QUOTA -> OVER_QUOTA
    int INVALID_PARAMS -> INVALID_PARAMS
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
com.amap.api.navi.a -> com.amap.api.navi.a:
    com.amap.api.navi.AMapHudView a -> a
    void run() -> run
com.amap.api.navi.b -> com.amap.api.navi.b:
    com.amap.api.navi.AMapHudView a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.amap.api.navi.c -> com.amap.api.navi.c:
    com.amap.api.navi.c b -> b
    java.lang.String c -> c
    android.location.LocationManager d -> d
    android.content.Context e -> e
    com.amap.api.navi.h f -> f
    android.os.Handler a -> a
    com.amap.api.navi.c$a g -> g
    boolean h -> h
    long i -> i
    int j -> j
    int k -> k
    int l -> l
    boolean m -> m
    boolean n -> n
    int o -> o
    long p -> p
    android.location.Location q -> q
    com.amap.api.navi.c a(android.content.Context,com.amap.api.navi.h) -> a
    void a() -> a
    void e() -> e
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean b() -> b
    void c() -> c
    void a(long,int) -> a
    void d() -> d
    com.amap.api.navi.h a(com.amap.api.navi.c) -> a
    android.location.LocationManager b(com.amap.api.navi.c) -> b
    long c(com.amap.api.navi.c) -> c
    int d(com.amap.api.navi.c) -> d
com.amap.api.navi.c$a -> com.amap.api.navi.c$a:
    com.amap.api.navi.c a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.amap.api.navi.d -> com.amap.api.navi.d:
    com.amap.api.navi.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.navi.e -> com.amap.api.navi.e:
    void carProjectionChange(com.autonavi.wtbt.CarLocation) -> carProjectionChange
com.amap.api.navi.enums.AimLessMode -> com.amap.api.navi.enums.AimLessMode:
    int NONE_DETECTED -> NONE_DETECTED
    int CAMERA_DETECTED -> CAMERA_DETECTED
    int SPECIALROAD_DETECTED -> SPECIALROAD_DETECTED
    int CAMERA_AND_SPECIALROAD_DETECTED -> CAMERA_AND_SPECIALROAD_DETECTED
com.amap.api.navi.enums.BroadcastMode -> com.amap.api.navi.enums.BroadcastMode:
    int CONCISE -> CONCISE
    int DETAIL -> DETAIL
com.amap.api.navi.enums.CameraType -> com.amap.api.navi.enums.CameraType:
    int CAMERATYPE_SPEED -> CAMERATYPE_SPEED
    int CAMERATYPE_SURVEILLANCE -> CAMERATYPE_SURVEILLANCE
    int CAMERATYPE_TRAFFICLIGHT -> CAMERATYPE_TRAFFICLIGHT
    int CAMERATYPE_BREAKRULE -> CAMERATYPE_BREAKRULE
    int CAMERATYPE_BUSWAY -> CAMERATYPE_BUSWAY
    int CAMERATYPE_EMERGENCY -> CAMERATYPE_EMERGENCY
com.amap.api.navi.enums.IconType -> com.amap.api.navi.enums.IconType:
    int NONE -> NONE
    int DEFAULT -> DEFAULT
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_FRONT -> LEFT_FRONT
    int RIGHT_FRONT -> RIGHT_FRONT
    int LEFT_BACK -> LEFT_BACK
    int RIGHT_BACK -> RIGHT_BACK
    int LEFT_TURN_AROUND -> LEFT_TURN_AROUND
    int STRAIGHT -> STRAIGHT
    int ARRIVED_WAYPOINT -> ARRIVED_WAYPOINT
    int ENTER_ROUNDABOUT -> ENTER_ROUNDABOUT
    int OUT_ROUNDABOUT -> OUT_ROUNDABOUT
    int ARRIVED_SERVICE_AREA -> ARRIVED_SERVICE_AREA
    int ARRIVED_TOLLGATE -> ARRIVED_TOLLGATE
    int ARRIVED_DESTINATION -> ARRIVED_DESTINATION
    int ARRIVED_TUNNEL -> ARRIVED_TUNNEL
    int CROSSWALK -> CROSSWALK
    int OVERPASS -> OVERPASS
    int UNDERPASS -> UNDERPASS
    int SQUARE -> SQUARE
    int PARK -> PARK
    int STAIRCASE -> STAIRCASE
    int LIFT -> LIFT
    int CABLEWAY -> CABLEWAY
    int SKY_CHANNEL -> SKY_CHANNEL
    int CHANNEL -> CHANNEL
    int WALK_ROAD -> WALK_ROAD
    int CRUISE_ROUTE -> CRUISE_ROUTE
    int SIGHTSEEING_BUSLINE -> SIGHTSEEING_BUSLINE
    int SLIDEWAY -> SLIDEWAY
    int LADDER -> LADDER
com.amap.api.navi.enums.NaviMode -> com.amap.api.navi.enums.NaviMode:
    int GPS -> GPS
    int EMULATOR -> EMULATOR
com.amap.api.navi.enums.NaviTTSType -> com.amap.api.navi.enums.NaviTTSType:
    int NAVIINFO_TEXT -> NAVIINFO_TEXT
    int FRONTTRAFFIC_TEXT -> FRONTTRAFFIC_TEXT
    int WHOLETRAFFIC_TEXT -> WHOLETRAFFIC_TEXT
com.amap.api.navi.enums.PathPlanningErrCode -> com.amap.api.navi.enums.PathPlanningErrCode:
    int SUCCESS_ROUTE -> SUCCESS_ROUTE
    int ERROR_CONNECTION -> ERROR_CONNECTION
    int ERROR_STARTPOINT -> ERROR_STARTPOINT
    int ERROR_PROTOCOL -> ERROR_PROTOCOL
    int ERROR_ENDPOINT -> ERROR_ENDPOINT
    int ERROR_NOROADFORSTARTPOINT -> ERROR_NOROADFORSTARTPOINT
    int ERROR_NOROADFORENDPOINT -> ERROR_NOROADFORENDPOINT
    int ERROR_NOROADFORWAYPOINT -> ERROR_NOROADFORWAYPOINT
    int INVALID_USER_KEY -> INVALID_USER_KEY
    int SERVICE_NOT_EXIST -> SERVICE_NOT_EXIST
    int SERVICE_RESPONSE_ERROR -> SERVICE_RESPONSE_ERROR
    int INSUFFICIENT_PRIVILEGES -> INSUFFICIENT_PRIVILEGES
    int OVER_QUOTA -> OVER_QUOTA
    int INVALID_PARAMS -> INVALID_PARAMS
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
com.amap.api.navi.enums.PathPlanningStrategy -> com.amap.api.navi.enums.PathPlanningStrategy:
    int DRIVING_DEFAULT -> DRIVING_DEFAULT
    int DRIVING_SAVE_MONEY -> DRIVING_SAVE_MONEY
    int DRIVING_SHORT_DISTANCE -> DRIVING_SHORT_DISTANCE
    int DRIVING_NO_EXPRESS_WAYS -> DRIVING_NO_EXPRESS_WAYS
    int DRIVING_FASTEST_TIME -> DRIVING_FASTEST_TIME
    int DRIVING_AVOID_CONGESTION -> DRIVING_AVOID_CONGESTION
    int DRIVING_MULTIPLE_ROUTES -> DRIVING_MULTIPLE_ROUTES
com.amap.api.navi.enums.RoadClass -> com.amap.api.navi.enums.RoadClass:
    int HIGHWAY -> HIGHWAY
    int NATIONALWAY -> NATIONALWAY
    int PROVINCIALWAY -> PROVINCIALWAY
    int COUNTYLWAY -> COUNTYLWAY
    int TOWNWAY -> TOWNWAY
    int COUNTYANDTOWNLWAY -> COUNTYANDTOWNLWAY
    int EXPRESSWAY -> EXPRESSWAY
    int MAINWAY -> MAINWAY
    int MINORWAY -> MINORWAY
    int COMMONWAY -> COMMONWAY
    int NONAVIWAY -> NONAVIWAY
com.amap.api.navi.enums.RoadType -> com.amap.api.navi.enums.RoadType:
    int MAIN_ROAD -> MAIN_ROAD
    int COMPLEX_INTERNAL_ROAD -> COMPLEX_INTERNAL_ROAD
    int OVER_HEAD -> OVER_HEAD
    int ROUNDABOUT -> ROUNDABOUT
    int SERVICE_AREA -> SERVICE_AREA
    int RAMP -> RAMP
    int SIDE_ROAD -> SIDE_ROAD
    int RAMP_AND_OVER_HEAD -> RAMP_AND_OVER_HEAD
    int EXIT -> EXIT
    int ENTRANCE -> ENTRANCE
    int TURN_RIGHT_LINE_A -> TURN_RIGHT_LINE_A
    int TURN_RIGHT_LINE_B -> TURN_RIGHT_LINE_B
    int TURN_LEFT_LINE_A -> TURN_LEFT_LINE_A
    int TURN_LEFT_LINE_B -> TURN_LEFT_LINE_B
    int COMMON -> COMMON
    int TURN_LEFT_AND_RIGHT -> TURN_LEFT_AND_RIGHT
    int SERVICE_AREA_AND_OVER_HEAD -> SERVICE_AREA_AND_OVER_HEAD
    int SERVICE_AREA_AND_RAMP -> SERVICE_AREA_AND_RAMP
    int SERVICE_AREA_AND_RAMP_AND_OVER_HEAD -> SERVICE_AREA_AND_RAMP_AND_OVER_HEAD
com.amap.api.navi.f -> com.amap.api.navi.f:
    android.os.PowerManager$WakeLock a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    android.content.Context g -> g
    com.amap.api.navi.h h -> h
    android.os.PowerManager i -> i
    void a(boolean) -> a
    void b(boolean) -> b
    boolean a() -> a
    void c(boolean) -> c
    void d(boolean) -> d
    void b() -> b
com.amap.api.navi.g -> com.amap.api.navi.g:
    int[] a -> a
    com.amap.api.navi.model.NaviInfo b -> b
    boolean c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.app.ProgressDialog f -> f
    int g -> g
    java.util.List h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    float l -> l
    android.content.Context m -> m
    com.amap.api.navi.view.RouteOverLay n -> n
    com.amap.api.navi.view.b o -> o
    com.amap.api.navi.view.a p -> p
    com.amap.api.navi.AMapNavi q -> q
    com.amap.api.maps.AMap r -> r
    android.content.Context s -> s
    com.amap.api.navi.AMapNaviView t -> t
    boolean u -> u
    com.amap.api.navi.model.AMapNaviPath v -> v
    com.amap.api.navi.model.AMapNaviLocation w -> w
    int x -> x
    boolean y -> y
    com.amap.api.navi.model.AMapNaviPath z -> z
    void onArriveDestination() -> onArriveDestination
    void onArrivedWayPoint(int) -> onArrivedWayPoint
    void onCalculateRouteFailure(int) -> onCalculateRouteFailure
    void onCalculateRouteSuccess() -> onCalculateRouteSuccess
    void a() -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(com.amap.api.navi.model.AMapNaviPath) -> a
    void b() -> b
    void onEndEmulatorNavi() -> onEndEmulatorNavi
    void onGetNavigationText(int,java.lang.String) -> onGetNavigationText
    void onInitNaviFailure() -> onInitNaviFailure
    void onInitNaviSuccess() -> onInitNaviSuccess
    void c() -> c
    void onLocationChange(com.amap.api.navi.model.AMapNaviLocation) -> onLocationChange
    void onNaviInfoUpdate(com.amap.api.navi.model.NaviInfo) -> onNaviInfoUpdate
    void a(com.amap.api.navi.model.NaviInfo) -> a
    void b(com.amap.api.navi.model.NaviInfo) -> b
    void c(com.amap.api.navi.model.NaviInfo) -> c
    void d(com.amap.api.navi.model.NaviInfo) -> d
    void e(com.amap.api.navi.model.NaviInfo) -> e
    void OnUpdateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> OnUpdateTrafficFacility
    void OnUpdateTrafficFacility(com.amap.api.navi.model.AMapNaviTrafficFacilityInfo) -> OnUpdateTrafficFacility
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void hideCross() -> hideCross
    void a(java.lang.String,java.lang.String) -> a
    void onReCalculateRouteForTrafficJam() -> onReCalculateRouteForTrafficJam
    void onReCalculateRouteForYaw() -> onReCalculateRouteForYaw
    void h() -> h
    void i() -> i
    void onStartNavi(int) -> onStartNavi
    void onTrafficStatusUpdate() -> onTrafficStatusUpdate
    void d() -> d
    void e() -> e
    void c(boolean) -> c
    void f() -> f
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    void c(android.graphics.Bitmap) -> c
    void d(android.graphics.Bitmap) -> d
    void d(boolean) -> d
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    void showLaneInfo(com.amap.api.navi.model.AMapLaneInfo[],byte[],byte[]) -> showLaneInfo
    void hideLaneInfo() -> hideLaneInfo
    void onCalculateMultipleRoutesSuccess(int[]) -> onCalculateMultipleRoutesSuccess
    void notifyParallelRoad(int) -> notifyParallelRoad
    void carProjectionChange(com.autonavi.wtbt.CarLocation) -> carProjectionChange
    void e(boolean) -> e
    void a(int) -> a
    void onNaviInfoUpdated(com.amap.api.navi.model.AMapNaviInfo) -> onNaviInfoUpdated
    void g() -> g
com.amap.api.navi.h -> com.amap.api.navi.h:
    com.amap.api.navi.h i -> i
    com.autonavi.tbt.TBT a -> a
    com.autonavi.wtbt.WTBT b -> b
    com.autonavi.tbt.be c -> c
    com.amap.api.navi.model.d d -> d
    int e -> e
    java.lang.Object f -> f
    java.util.List g -> g
    android.net.wifi.WifiManager h -> h
    android.content.Context j -> j
    com.autonavi.tbt.FrameForTBT k -> k
    com.autonavi.wtbt.FrameForWTBT l -> l
    boolean m -> m
    com.amap.api.navi.c n -> n
    int o -> o
    com.amap.api.navi.i p -> p
    java.util.HashMap q -> q
    java.lang.Thread r -> r
    com.amap.api.navi.h$a s -> s
    int t -> t
    com.amap.api.navi.model.NaviLatLng u -> u
    java.util.List v -> v
    com.autonavi.tbt.bk w -> w
    com.autonavi.tbt.bs x -> x
    com.amap.api.navi.h$b y -> y
    android.net.ConnectivityManager z -> z
    java.util.Timer A -> A
    java.util.TimerTask B -> B
    long C -> C
    int D -> D
    int[] E -> E
    double F -> F
    double G -> G
    java.util.List H -> H
    java.util.List I -> I
    boolean J -> J
    java.lang.reflect.Method K -> K
    boolean L -> L
    com.amap.api.navi.h a(android.content.Context) -> a
    int a(android.net.NetworkInfo) -> a
    boolean a() -> a
    void a(boolean) -> a
    boolean b() -> b
    java.util.HashMap c() -> c
    int d() -> d
    java.lang.String x() -> x
    void e() -> e
    void y() -> y
    void a(int[]) -> a
    void z() -> z
    void f() -> f
    void g() -> g
    boolean a(int) -> a
    int h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    boolean b(int) -> b
    boolean a(java.util.List,java.util.List,java.util.List,int) -> a
    boolean a(java.util.List,java.util.List,int) -> a
    void a(int,double,double) -> a
    boolean c(int) -> c
    boolean a(com.amap.api.navi.model.NaviLatLng,com.amap.api.navi.model.NaviLatLng) -> a
    boolean a(com.amap.api.navi.model.NaviLatLng) -> a
    java.util.List a(int,int) -> a
    com.amap.api.navi.model.AMapNaviPath n() -> n
    java.util.List o() -> o
    com.autonavi.tbt.TBT p() -> p
    void d(int) -> d
    void e(int) -> e
    void a(com.amap.api.navi.AMapNaviListener) -> a
    void b(com.amap.api.navi.AMapNaviListener) -> b
    void q() -> q
    void a(long,int) -> a
    void r() -> r
    int f(int) -> f
    int[] s() -> s
    com.amap.api.navi.model.d A() -> A
    void a(int,android.location.Location) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void t() -> t
    void d(boolean) -> d
    void e(boolean) -> e
    void a(java.lang.String) -> a
    int b(int,int) -> b
    java.lang.String b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.SharedPreferences$Editor) -> a
    com.amap.api.navi.model.NaviInfo u() -> u
    void g(int) -> g
    boolean h(int) -> h
    void v() -> v
    void B() -> B
    boolean C() -> C
    boolean D() -> D
    void E() -> E
    void F() -> F
    void G() -> G
    void H() -> H
    boolean I() -> I
    boolean w() -> w
    boolean a(android.net.wifi.WifiInfo) -> a
    int a(boolean,int) -> a
    void i(int) -> i
    void J() -> J
    void j(int) -> j
    java.lang.String a(int,int,int) -> a
    void K() -> K
    void a(android.content.SharedPreferences) -> a
    java.lang.String a(byte[],android.content.Context) -> a
    android.content.Context a(com.amap.api.navi.h) -> a
    com.amap.api.navi.h$a b(com.amap.api.navi.h) -> b
    long c(com.amap.api.navi.h) -> c
    boolean d(com.amap.api.navi.h) -> d
    void a(com.amap.api.navi.h,int) -> a
    void e(com.amap.api.navi.h) -> e
    int a(com.amap.api.navi.h,boolean,int) -> a
com.amap.api.navi.h$1 -> com.amap.api.navi.h$1:
    com.amap.api.navi.h a -> a
    void run() -> run
com.amap.api.navi.h$2 -> com.amap.api.navi.h$2:
    int a -> a
    com.amap.api.navi.h b -> b
    void run() -> run
com.amap.api.navi.h$a -> com.amap.api.navi.h$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.navi.h$b -> com.amap.api.navi.h$b:
    com.amap.api.navi.h a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.amap.api.navi.i -> com.amap.api.navi.i:
    int setParam(java.lang.String,java.lang.String) -> setParam
    int startEmulatorNavi() -> startEmulatorNavi
    int startGPSNavi() -> startGPSNavi
    void pauseNavi() -> pauseNavi
    void resumeNavi() -> resumeNavi
    void stopNavi() -> stopNavi
    int playNaviManual() -> playNaviManual
    int reroute(int,int) -> reroute
    int selectRoute(int) -> selectRoute
    int getRouteLength() -> getRouteLength
    int getRouteTime() -> getRouteTime
    int getSegNum() -> getSegNum
    int getSegLength(int) -> getSegLength
    int getSegTime(int) -> getSegTime
    int getSegLinkNum(int) -> getSegLinkNum
    double[] getSegCoor(int) -> getSegCoor
    int[] getAllRouteID() -> getAllRouteID
    java.lang.String getLinkRoadName(int,int) -> getLinkRoadName
    double[] getLinkCoor(int,int) -> getLinkCoor
    int getLinkLength(int,int) -> getLinkLength
    int getLinkTime(int,int) -> getLinkTime
    void setEmulatorSpeed(int) -> setEmulatorSpeed
    int getRouteStrategy() -> getRouteStrategy
    int getSegChargeLength(int) -> getSegChargeLength
    int getSegTollCost(int) -> getSegTollCost
    int getLinkRoadClass(int,int) -> getLinkRoadClass
    int getLinkFormWay(int,int) -> getLinkFormWay
    int haveTrafficLights(int,int) -> haveTrafficLights
    void manualRefreshTMC() -> manualRefreshTMC
    int playTrafficRadioManual(int) -> playTrafficRadioManual
com.amap.api.navi.model.AMapLaneInfo -> com.amap.api.navi.model.AMapLaneInfo:
    int laneTypeId -> laneTypeId
    boolean isRecommended() -> isRecommended
    int getLaneTypeId() -> getLaneTypeId
    void setLaneTypeId(int) -> setLaneTypeId
    java.lang.String getLaneTypeIdHexString() -> getLaneTypeIdHexString
com.amap.api.navi.model.AMapNaviCross -> com.amap.api.navi.model.AMapNaviCross:
    byte[] mData -> mData
    int mWidth -> mWidth
    int mHeight -> mHeight
    android.graphics.Bitmap mBitmap -> mBitmap
    int mPicFormat -> mPicFormat
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getPicFormat() -> getPicFormat
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.amap.api.navi.model.AMapNaviGuide -> com.amap.api.navi.model.AMapNaviGuide:
    int IconTypeNone -> IconTypeNone
    int IconTypeDefault -> IconTypeDefault
    int IconTypeLeft -> IconTypeLeft
    int IconTypeRight -> IconTypeRight
    int IconTypeLeftFront -> IconTypeLeftFront
    int IconTypeRightFront -> IconTypeRightFront
    int IconTypeLeftBack -> IconTypeLeftBack
    int IconTypeRightBack -> IconTypeRightBack
    int IconTypeLeftAndAround -> IconTypeLeftAndAround
    int IconTypeStraight -> IconTypeStraight
    int IconTypeArrivedWayPoint -> IconTypeArrivedWayPoint
    int IconTypeEnterRoundabout -> IconTypeEnterRoundabout
    int IconTypeOutRoundabout -> IconTypeOutRoundabout
    int IconTypeArrivedServiceArea -> IconTypeArrivedServiceArea
    int IconTypeArrivedTollGate -> IconTypeArrivedTollGate
    int IconTypeArrivedDestination -> IconTypeArrivedDestination
    int IconTypeArrivedTunnel -> IconTypeArrivedTunnel
    int IconTypeCrosswalk -> IconTypeCrosswalk
    int IconTypeOverpass -> IconTypeOverpass
    int IconTypeUnderpass -> IconTypeUnderpass
    int IconTypeSquare -> IconTypeSquare
    int IconTypePark -> IconTypePark
    int IconTypeStaircase -> IconTypeStaircase
    int IconTypeLift -> IconTypeLift
    com.amap.api.navi.model.NaviLatLng coord -> coord
    int m_Length -> m_Length
    int m_UseTime -> m_UseTime
    int m_Icon -> m_Icon
    java.lang.String m_Name -> m_Name
    com.amap.api.navi.model.NaviLatLng getCoord() -> getCoord
    void setCoord(com.amap.api.navi.model.NaviLatLng) -> setCoord
    int getLength() -> getLength
    void setLength(int) -> setLength
    int getIconType() -> getIconType
    void setIconType(int) -> setIconType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getTime() -> getTime
    void setTime(int) -> setTime
com.amap.api.navi.model.AMapNaviInfo -> com.amap.api.navi.model.AMapNaviInfo:
    int pathRemainDistance -> pathRemainDistance
    int pathRemainTime -> pathRemainTime
    int getPathRemainDistance() -> getPathRemainDistance
    void setPathRemainDistance(int) -> setPathRemainDistance
    int getPathRemainTime() -> getPathRemainTime
    void setPathRemainTime(int) -> setPathRemainTime
com.amap.api.navi.model.AMapNaviLink -> com.amap.api.navi.model.AMapNaviLink:
    java.util.List mCoords -> mCoords
    java.lang.String mRoadName -> mRoadName
    int mLength -> mLength
    int mTime -> mTime
    int mRoadClass -> mRoadClass
    boolean mIsTrafficLightIn -> mIsTrafficLightIn
    int mRoadType -> mRoadType
    java.lang.String getRoadName() -> getRoadName
    void setRoadName(java.lang.String) -> setRoadName
    int getLength() -> getLength
    void setLength(int) -> setLength
    java.util.List getCoords() -> getCoords
    void setCoords(java.util.List) -> setCoords
    int getTime() -> getTime
    void setTime(int) -> setTime
    int getRoadClass() -> getRoadClass
    void setRoadClass(int) -> setRoadClass
    boolean getTrafficLights() -> getTrafficLights
    void setTrafficLights(boolean) -> setTrafficLights
    int getRoadType() -> getRoadType
    void setRoadType(int) -> setRoadType
com.amap.api.navi.model.AMapNaviLocation -> com.amap.api.navi.model.AMapNaviLocation:
    float accuracy -> accuracy
    double altitude -> altitude
    float bearing -> bearing
    float speed -> speed
    long time -> time
    int matchStatus -> matchStatus
    com.amap.api.navi.model.NaviLatLng coord -> coord
    int getMatchStatus() -> getMatchStatus
    void setMatchStatus(int) -> setMatchStatus
    float getAccuracy() -> getAccuracy
    void setAccuracy(float) -> setAccuracy
    java.lang.Double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getBearing() -> getBearing
    void setBearing(float) -> setBearing
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    java.lang.Long getTime() -> getTime
    void setTime(long) -> setTime
    boolean isMatchNaviPath() -> isMatchNaviPath
    com.amap.api.navi.model.NaviLatLng getCoord() -> getCoord
    void setCoord(com.amap.api.navi.model.NaviLatLng) -> setCoord
com.amap.api.navi.model.AMapNaviPath -> com.amap.api.navi.model.AMapNaviPath:
    int[] wayPointIndex -> wayPointIndex
    int allLength -> allLength
    int strategy -> strategy
    int allTime -> allTime
    int stepsCount -> stepsCount
    java.util.List mSteps -> mSteps
    java.util.List list -> list
    com.amap.api.navi.model.NaviLatLng startPoi -> startPoi
    com.amap.api.navi.model.NaviLatLng endPoi -> endPoi
    java.util.List wayPoi -> wayPoi
    int tollCost -> tollCost
    com.amap.api.navi.model.NaviLatLng center -> center
    com.amap.api.maps.model.LatLngBounds bounds -> bounds
    int[] getWayPointIndex() -> getWayPointIndex
    java.util.List getWayPoint() -> getWayPoint
    void setWayPoint(java.util.List) -> setWayPoint
    com.amap.api.navi.model.NaviLatLng getStartPoint() -> getStartPoint
    void setStartPoint(com.amap.api.navi.model.NaviLatLng) -> setStartPoint
    com.amap.api.navi.model.NaviLatLng getEndPoint() -> getEndPoint
    void setEndPoint(com.amap.api.navi.model.NaviLatLng) -> setEndPoint
    com.amap.api.navi.model.NaviLatLng getCenterForPath() -> getCenterForPath
    void setCenter(com.amap.api.navi.model.NaviLatLng) -> setCenter
    com.amap.api.maps.model.LatLngBounds getBoundsForPath() -> getBoundsForPath
    void setBounds(com.amap.api.maps.model.LatLngBounds) -> setBounds
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    java.util.List getCoordList() -> getCoordList
    void setList(java.util.List) -> setList
    com.amap.api.navi.model.AMapNaviStep getStep(int) -> getStep
    int getAllLength() -> getAllLength
    void setAllLength(int) -> setAllLength
    int getStrategy() -> getStrategy
    void setStrategy(int) -> setStrategy
    int getAllTime() -> getAllTime
    void setAllTime(int) -> setAllTime
    int getStepsCount() -> getStepsCount
    void setStepsCount(int) -> setStepsCount
    int getTollCost() -> getTollCost
    void setTollCost(int) -> setTollCost
com.amap.api.navi.model.AMapNaviStep -> com.amap.api.navi.model.AMapNaviStep:
    int mLength -> mLength
    int mTime -> mTime
    int mChargeLength -> mChargeLength
    int mStartIndex -> mStartIndex
    int mEndIndex -> mEndIndex
    java.util.List mCoords -> mCoords
    java.util.List mAMapNaviLinks -> mAMapNaviLinks
    int getStartIndex() -> getStartIndex
    void setStartIndex(int) -> setStartIndex
    int getEndIndex() -> getEndIndex
    void setEndIndex(int) -> setEndIndex
    int getLength() -> getLength
    void setLength(int) -> setLength
    int getTime() -> getTime
    void setTime(int) -> setTime
    int getChargeLength() -> getChargeLength
    void setChargeLength(int) -> setChargeLength
    java.util.List getCoords() -> getCoords
    void setCoords(java.util.List) -> setCoords
    java.util.List getLinks() -> getLinks
    void setLinks(java.util.List) -> setLinks
    int getTrafficLightNumber() -> getTrafficLightNumber
com.amap.api.navi.model.AMapNaviTrafficFacilityInfo -> com.amap.api.navi.model.AMapNaviTrafficFacilityInfo:
    int getLimitSpeed() -> getLimitSpeed
    void setLimitSpeed(int) -> setLimitSpeed
    double getCoorX() -> getCoorX
    void setCoorX(double) -> setCoorX
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getBoardcastType() -> getBoardcastType
    void setBoardcastType(int) -> setBoardcastType
    double getCoorY() -> getCoorY
    void setCoorY(double) -> setCoorY
com.amap.api.navi.model.AMapTrafficStatus -> com.amap.api.navi.model.AMapTrafficStatus:
    int mStatus -> mStatus
    int mLength -> mLength
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    int getLength() -> getLength
    void setLength(int) -> setLength
com.amap.api.navi.model.NaviInfo -> com.amap.api.navi.model.NaviInfo:
    com.amap.api.navi.model.NaviLatLng currentCoord -> currentCoord
    com.amap.api.navi.model.NaviLatLng cameraCoord -> cameraCoord
    int getNaviType() -> getNaviType
    void setNaviType(int) -> setNaviType
    java.lang.String getCurrentRoadName() -> getCurrentRoadName
    void setCurrentRoadName(java.lang.String) -> setCurrentRoadName
    java.lang.String getNextRoadName() -> getNextRoadName
    void setNextRoadName(java.lang.String) -> setNextRoadName
    int getServiceAreaDistance() -> getServiceAreaDistance
    void setServiceAreaDistance(int) -> setServiceAreaDistance
    int getCameraDistance() -> getCameraDistance
    void setCameraDistance(int) -> setCameraDistance
    int getCameraType() -> getCameraType
    void setCameraType(int) -> setCameraType
    int getLimitSpeed() -> getLimitSpeed
    void setLimitSpeed(int) -> setLimitSpeed
    int getIconType() -> getIconType
    void setIconType(int) -> setIconType
    int getPathRetainDistance() -> getPathRetainDistance
    void setPathRetainDistance(int) -> setPathRetainDistance
    int getPathRetainTime() -> getPathRetainTime
    void setPathRetainTime(int) -> setPathRetainTime
    int getCurStepRetainDistance() -> getCurStepRetainDistance
    void setCurStepRetainDistance(int) -> setCurStepRetainDistance
    int getCurStepRetainTime() -> getCurStepRetainTime
    void setCurStepRetainTime(int) -> setCurStepRetainTime
    int getDirection() -> getDirection
    void setDirection(int) -> setDirection
    com.amap.api.navi.model.NaviLatLng getCoord() -> getCoord
    void setCoord(com.amap.api.navi.model.NaviLatLng) -> setCoord
    int getCurStep() -> getCurStep
    void setCurStep(int) -> setCurStep
    int getCurLink() -> getCurLink
    void setCurLink(int) -> setCurLink
    int getCurPoint() -> getCurPoint
    void setCurPoint(int) -> setCurPoint
    com.amap.api.navi.model.NaviLatLng getCameraCoord() -> getCameraCoord
    void setCameraCoord(com.amap.api.navi.model.NaviLatLng) -> setCameraCoord
    void setLatitude(double) -> setLatitude
    void setLongitude(double) -> setLongitude
com.amap.api.navi.model.NaviLatLng -> com.amap.api.navi.model.NaviLatLng:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amap.api.navi.model.a -> com.amap.api.navi.model.a:
    com.amap.api.navi.model.AMapNaviGuide a -> a
    com.amap.api.navi.model.NaviLatLng b -> b
    com.amap.api.navi.model.NaviLatLng a() -> a
com.amap.api.navi.model.b -> com.amap.api.navi.model.b:
    com.amap.api.navi.model.NaviLatLng a(android.os.Parcel) -> a
    com.amap.api.navi.model.NaviLatLng[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.navi.model.c -> com.amap.api.navi.model.c:
    com.amap.api.navi.model.AMapNaviLocation a -> a
    float b -> b
    float c -> c
    long d -> d
    int e -> e
    com.amap.api.navi.model.NaviLatLng f -> f
    com.amap.api.navi.model.AMapNaviLocation a() -> a
    void a(int) -> a
    void a(float) -> a
    void b(float) -> b
    void a(long) -> a
    void a(com.amap.api.navi.model.NaviLatLng) -> a
com.amap.api.navi.model.d -> com.amap.api.navi.model.d:
    com.amap.api.navi.model.AMapNaviPath a -> a
    com.amap.api.navi.model.NaviLatLng b -> b
    com.amap.api.maps.model.LatLngBounds c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.amap.api.navi.model.NaviLatLng j -> j
    com.amap.api.navi.model.NaviLatLng k -> k
    java.util.List l -> l
    com.amap.api.navi.model.NaviLatLng m -> m
    com.amap.api.navi.model.NaviLatLng n -> n
    int o -> o
    java.util.List a() -> a
    void a(java.util.List) -> a
    void a(com.amap.api.navi.model.NaviLatLng) -> a
    void b(com.amap.api.navi.model.NaviLatLng) -> b
    com.amap.api.navi.model.NaviLatLng b() -> b
    com.amap.api.navi.model.NaviLatLng c() -> c
    void c(com.amap.api.navi.model.NaviLatLng) -> c
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    void b(java.util.List) -> b
    void c(java.util.List) -> c
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
com.amap.api.navi.model.e -> com.amap.api.navi.model.e:
    com.amap.api.navi.model.AMapTrafficStatus a -> a
com.amap.api.navi.view.AutoNaviHudMirrorImage -> com.amap.api.navi.view.AutoNaviHudMirrorImage:
    int mWidth -> mWidth
    int mHeight -> mHeight
    com.amap.api.navi.AMapHudView mAMapHudView -> mAMapHudView
    boolean mIsMirror -> mIsMirror
    android.graphics.Bitmap hudMirrorBitmap -> hudMirrorBitmap
    android.graphics.Canvas hudMirrorCanvas -> hudMirrorCanvas
    android.graphics.Paint hudMirrorPaint -> hudMirrorPaint
    android.graphics.Matrix hudMirrorMatrix -> hudMirrorMatrix
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void recycleMirrorBitmap() -> recycleMirrorBitmap
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setAMapHudView(com.amap.api.navi.AMapHudView) -> setAMapHudView
    boolean getMirrorState() -> getMirrorState
    void setMirrorState(boolean) -> setMirrorState
com.amap.api.navi.view.CustomTmcView -> com.amap.api.navi.view.CustomTmcView:
    int left -> left
    int right -> right
    int progressBarHeight -> progressBarHeight
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap displayingBitmap -> displayingBitmap
    android.graphics.Bitmap tmcBarBitmapPortrait -> tmcBarBitmapPortrait
    android.graphics.Bitmap tmcBarBitmapLandscape -> tmcBarBitmapLandscape
    java.util.List mTmcSections -> mTmcSections
    int tmcBarTopMargin -> tmcBarTopMargin
    android.graphics.Bitmap rawBitmap -> rawBitmap
    int totalDis -> totalDis
    android.graphics.RectF colorRectF -> colorRectF
    int drawTmcBarBgX -> drawTmcBarBgX
    int drawTmcBarBgY -> drawTmcBarBgY
    int tmcBarBgWidth -> tmcBarBgWidth
    int tmcBarBgHeight -> tmcBarBgHeight
    android.graphics.Bitmap getDisplayingBitmap() -> getDisplayingBitmap
    void initResource() -> initResource
    void onConfigurationChanged(boolean) -> onConfigurationChanged
    void setProgressBarSize(boolean) -> setProgressBarSize
    void update(java.util.List,int) -> update
    android.graphics.Bitmap produceFinalBitmap() -> produceFinalBitmap
    void setTmcBarPosition(int,int,int,int,boolean) -> setTmcBarPosition
    void setTmcBarHeightWhenLandscape(double) -> setTmcBarHeightWhenLandscape
    void setTmcBarHeightWhenPortrait(double) -> setTmcBarHeightWhenPortrait
    int getTmcBarBgPosX() -> getTmcBarBgPosX
    int getTmcBarBgPosY() -> getTmcBarBgPosY
    int getTmcBarBgWidth() -> getTmcBarBgWidth
    int getTmcBarBgHeight() -> getTmcBarBgHeight
com.amap.api.navi.view.DirectionView -> com.amap.api.navi.view.DirectionView:
    android.graphics.Bitmap mDirectionBitmap -> mDirectionBitmap
    android.graphics.Matrix mDirectionMatrix -> mDirectionMatrix
    android.graphics.Paint mPaint -> mPaint
    android.graphics.PaintFlagsDrawFilter mPaintFlagsDrawFilter -> mPaintFlagsDrawFilter
    void initPaint() -> initPaint
    void setRotate(float) -> setRotate
    void recycleResource() -> recycleResource
    android.graphics.Bitmap getDirectionBitmap() -> getDirectionBitmap
    void setDirectionBitmap(android.graphics.Bitmap) -> setDirectionBitmap
com.amap.api.navi.view.DriveWayView -> com.amap.api.navi.view.DriveWayView:
    int driveWayWidth -> driveWayWidth
    int driveWayHeight -> driveWayHeight
    int driveWaySize -> driveWaySize
    int COMMON_VALUE -> COMMON_VALUE
    int[] driveWayBackgroundId -> driveWayBackgroundId
    int[] driveWayForegroundId -> driveWayForegroundId
    com.amap.api.navi.AMapNaviView mAMapNaviView -> mAMapNaviView
    android.graphics.Bitmap[] driveWayBitMaps -> driveWayBitMaps
    android.graphics.Bitmap[] driveWayBitMapBgs -> driveWayBitMapBgs
    int height -> height
    int width -> width
    int getDriveWayWidth() -> getDriveWayWidth
    void setAMapNaviView(com.amap.api.navi.AMapNaviView) -> setAMapNaviView
    void loadDriveWayBitmap(byte[],byte[]) -> loadDriveWayBitmap
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int parseDriveWaySize(byte[]) -> parseDriveWaySize
    boolean isThisLaneRecommended(byte) -> isThisLaneRecommended
    boolean isComplexLane(int) -> isComplexLane
    android.graphics.Bitmap complexBitmap(int,int) -> complexBitmap
    void setDefaultTopMargin(int) -> setDefaultTopMargin
    void recycleResource() -> recycleResource
    android.graphics.Bitmap produceFinalBitmap() -> produceFinalBitmap
    int getDriveWaySize() -> getDriveWaySize
    int getDriveWayBgHeight() -> getDriveWayBgHeight
com.amap.api.navi.view.NaviRoadEnlargeView -> com.amap.api.navi.view.NaviRoadEnlargeView:
    android.graphics.Bitmap rawRoadEnlargeBitmap -> rawRoadEnlargeBitmap
    android.graphics.Bitmap portraitRoadEnlargeBitmap -> portraitRoadEnlargeBitmap
    android.graphics.Bitmap landscapeRoadEnlargeBitmap -> landscapeRoadEnlargeBitmap
    android.view.View enlargeLayout -> enlargeLayout
    android.widget.ImageView enlargedRoadImageView -> enlargedRoadImageView
    int yPos -> yPos
    int xPos -> xPos
    void init() -> init
    void findView() -> findView
    void setBitMapIntoView(com.amap.api.navi.model.AMapNaviCross) -> setBitMapIntoView
    void onDraw(android.graphics.Canvas) -> onDraw
    void recycleResource() -> recycleResource
com.amap.api.navi.view.RouteOverLay -> com.amap.api.navi.view.RouteOverLay:
    com.amap.api.maps.model.BitmapDescriptor routeResource -> routeResource
    android.graphics.Bitmap startBitmap -> startBitmap
    android.graphics.Bitmap endBitmap -> endBitmap
    android.graphics.Bitmap wayBitmap -> wayBitmap
    com.amap.api.maps.model.BitmapDescriptor wayPointBitmapDescriptor -> wayPointBitmapDescriptor
    java.util.List mTrafficColorfulPolylines -> mTrafficColorfulPolylines
    com.amap.api.maps.model.BitmapDescriptor aolrResource -> aolrResource
    com.amap.api.maps.model.BitmapDescriptor greenResource -> greenResource
    com.amap.api.maps.model.BitmapDescriptor noResource -> noResource
    com.amap.api.maps.model.BitmapDescriptor slowResource -> slowResource
    com.amap.api.maps.model.BitmapDescriptor badResource -> badResource
    com.amap.api.maps.model.BitmapDescriptor grayredResource -> grayredResource
    int arrowHLen -> arrowHLen
    float mWidth -> mWidth
    com.amap.api.navi.model.AMapNaviPath mAMapNaviPath -> mAMapNaviPath
    com.amap.api.maps.model.Polyline mDefaultPolyline -> mDefaultPolyline
    com.amap.api.maps.AMap aMap -> aMap
    android.content.Context mContext -> mContext
    com.amap.api.maps.model.Marker startMarker -> startMarker
    java.util.List wayMarkers -> wayMarkers
    com.amap.api.maps.model.Marker endMarker -> endMarker
    java.util.List mapList -> mapList
    com.amap.api.maps.model.Polyline guideLink -> guideLink
    java.util.List gpsCircles -> gpsCircles
    boolean emulateGPSLocationVisibility -> emulateGPSLocationVisibility
    com.amap.api.maps.model.NavigateArrow naviArrow -> naviArrow
    boolean isTrafficLine -> isTrafficLine
    java.util.List mCustomPolylines -> mCustomPolylines
    com.amap.api.maps.model.BitmapDescriptor startBitmapDescriptor -> startBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor endBitmapDescriptor -> endBitmapDescriptor
    void setRouteResource(com.amap.api.maps.model.BitmapDescriptor) -> setRouteResource
    void setWidth(float) -> setWidth
    com.amap.api.navi.model.AMapNaviPath getAMapNaviPath() -> getAMapNaviPath
    void setAMapNaviPath(com.amap.api.navi.model.AMapNaviPath) -> setAMapNaviPath
    void setRouteInfo(com.amap.api.navi.model.AMapNaviPath) -> setRouteInfo
    void init(com.amap.api.maps.AMap,com.amap.api.navi.model.AMapNaviPath) -> init
    void addToMap() -> addToMap
    void drawGuideLink(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,boolean) -> drawGuideLink
    void drawEmulateGPSLocation(java.util.Vector) -> drawEmulateGPSLocation
    void setEmulateGPSLocationVisible() -> setEmulateGPSLocationVisible
    void setStartPointBitmap(android.graphics.Bitmap) -> setStartPointBitmap
    void setWayPointBitmap(android.graphics.Bitmap) -> setWayPointBitmap
    void setEndPointBitmap(android.graphics.Bitmap) -> setEndPointBitmap
    void removeFromMap() -> removeFromMap
    void clearTrafficLineAndInvisibleOriginalLine() -> clearTrafficLineAndInvisibleOriginalLine
    void colorWayUpdate(java.util.List) -> colorWayUpdate
    void zoomToSpan() -> zoomToSpan
    void destroy() -> destroy
    void drawArrow(java.util.List) -> drawArrow
    java.util.List getArrowPoints(int) -> getArrowPoints
    boolean isTrafficLine() -> isTrafficLine
    void setTrafficLine(java.lang.Boolean) -> setTrafficLine
    void NoTrafficStatusDisplay() -> NoTrafficStatusDisplay
    void addToMap(int[],int[],com.amap.api.maps.model.BitmapDescriptor[]) -> addToMap
    void addToMap(int[],int[]) -> addToMap
    void addToMap(com.amap.api.maps.model.BitmapDescriptor[],int[]) -> addToMap
    void setTransparency(float) -> setTransparency
com.amap.api.navi.view.a -> com.amap.api.navi.view.a:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    com.amap.api.maps.model.Marker b -> b
    com.amap.api.maps.model.LatLng c -> c
    android.graphics.Bitmap d -> d
    void a(com.amap.api.maps.AMap,com.amap.api.maps.model.LatLng) -> a
    void a(boolean) -> a
    void a() -> a
    void a(android.graphics.Bitmap) -> a
com.amap.api.navi.view.b -> com.amap.api.navi.view.b:
    boolean a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    int c -> c
    int d -> d
    float e -> e
    int f -> f
    int g -> g
    float h -> h
    boolean i -> i
    com.autonavi.amap.mapcore.IPoint j -> j
    java.util.Timer k -> k
    float l -> l
    int m -> m
    com.amap.api.navi.AMapNaviView n -> n
    com.amap.api.maps.model.BitmapDescriptor o -> o
    com.amap.api.maps.model.BitmapDescriptor p -> p
    com.amap.api.maps.model.Marker q -> q
    com.amap.api.maps.model.Marker r -> r
    com.amap.api.maps.model.Marker s -> s
    com.amap.api.maps.AMap t -> t
    com.amap.api.maps.MapView u -> u
    boolean v -> v
    com.amap.api.maps.model.LatLng w -> w
    com.amap.api.maps.model.Polyline x -> x
    java.util.List y -> y
    void a() -> a
    void b() -> b
    void a(boolean) -> a
    void c() -> c
    void a(com.amap.api.maps.AMap,com.amap.api.maps.model.LatLng,float) -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    void d() -> d
    void a(com.autonavi.amap.mapcore.IPoint,float) -> a
    void g() -> g
    void h() -> h
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    void e() -> e
    void a(int) -> a
    void f() -> f
    void a(com.amap.api.navi.view.b) -> a
com.amap.api.navi.view.b$1 -> com.amap.api.navi.view.b$1:
    com.amap.api.navi.view.b a -> a
    void run() -> run
com.amap.api.services.busline.BusLineItem -> com.amap.api.services.busline.BusLineItem:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.Date j -> j
    java.util.Date k -> k
    java.lang.String l -> l
    float m -> m
    float n -> n
    java.util.List o -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getBusLineName() -> getBusLineName
    void setBusLineName(java.lang.String) -> setBusLineName
    java.lang.String getBusLineType() -> getBusLineType
    void setBusLineType(java.lang.String) -> setBusLineType
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.util.List getDirectionsCoordinates() -> getDirectionsCoordinates
    void setDirectionsCoordinates(java.util.List) -> setDirectionsCoordinates
    java.util.List getBounds() -> getBounds
    void setBounds(java.util.List) -> setBounds
    java.lang.String getBusLineId() -> getBusLineId
    void setBusLineId(java.lang.String) -> setBusLineId
    java.lang.String getOriginatingStation() -> getOriginatingStation
    void setOriginatingStation(java.lang.String) -> setOriginatingStation
    java.lang.String getTerminalStation() -> getTerminalStation
    void setTerminalStation(java.lang.String) -> setTerminalStation
    java.util.Date getFirstBusTime() -> getFirstBusTime
    void setFirstBusTime(java.util.Date) -> setFirstBusTime
    java.util.Date getLastBusTime() -> getLastBusTime
    void setLastBusTime(java.util.Date) -> setLastBusTime
    java.lang.String getBusCompany() -> getBusCompany
    void setBusCompany(java.lang.String) -> setBusCompany
    float getBasicPrice() -> getBasicPrice
    void setBasicPrice(float) -> setBasicPrice
    float getTotalPrice() -> getTotalPrice
    void setTotalPrice(float) -> setTotalPrice
    java.util.List getBusStations() -> getBusStations
    void setBusStations(java.util.List) -> setBusStations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.busline.BusLineQuery -> com.amap.api.services.busline.BusLineQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    com.amap.api.services.busline.BusLineQuery$SearchType e -> e
    boolean a() -> a
    com.amap.api.services.busline.BusLineQuery$SearchType getCategory() -> getCategory
    java.lang.String getQueryString() -> getQueryString
    void setQueryString(java.lang.String) -> setQueryString
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
    int getPageNumber() -> getPageNumber
    void setPageNumber(int) -> setPageNumber
    void setCategory(com.amap.api.services.busline.BusLineQuery$SearchType) -> setCategory
    com.amap.api.services.busline.BusLineQuery clone() -> clone
    boolean weakEquals(com.amap.api.services.busline.BusLineQuery) -> weakEquals
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object clone() -> clone
com.amap.api.services.busline.BusLineQuery$SearchType -> com.amap.api.services.busline.BusLineQuery$SearchType:
    com.amap.api.services.busline.BusLineQuery$SearchType BY_LINE_ID -> BY_LINE_ID
    com.amap.api.services.busline.BusLineQuery$SearchType BY_LINE_NAME -> BY_LINE_NAME
    com.amap.api.services.busline.BusLineQuery$SearchType[] a -> a
    com.amap.api.services.busline.BusLineQuery$SearchType[] values() -> values
    com.amap.api.services.busline.BusLineQuery$SearchType valueOf(java.lang.String) -> valueOf
com.amap.api.services.busline.BusLineResult -> com.amap.api.services.busline.BusLineResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.busline.BusLineQuery c -> c
    java.util.List d -> d
    java.util.List e -> e
    com.amap.api.services.busline.BusLineResult a(com.amap.api.services.core.d,java.util.ArrayList) -> a
    int a(int) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.busline.BusLineQuery getQuery() -> getQuery
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCities() -> getSearchSuggestionCities
    java.util.List getBusLines() -> getBusLines
com.amap.api.services.busline.BusLineSearch -> com.amap.api.services.busline.BusLineSearch:
    android.content.Context a -> a
    com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener b -> b
    com.amap.api.services.busline.BusLineQuery c -> c
    com.amap.api.services.busline.BusLineQuery d -> d
    int e -> e
    java.util.ArrayList f -> f
    android.os.Handler g -> g
    com.amap.api.services.busline.BusLineResult searchBusLine() -> searchBusLine
    void a(com.amap.api.services.busline.BusLineResult) -> a
    boolean a(int) -> a
    com.amap.api.services.busline.BusLineResult b(int) -> b
    void setOnBusLineSearchListener(com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener) -> setOnBusLineSearchListener
    void searchBusLineAsyn() -> searchBusLineAsyn
    void setQuery(com.amap.api.services.busline.BusLineQuery) -> setQuery
    com.amap.api.services.busline.BusLineQuery getQuery() -> getQuery
    com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener a(com.amap.api.services.busline.BusLineSearch) -> a
    android.os.Handler b(com.amap.api.services.busline.BusLineSearch) -> b
com.amap.api.services.busline.BusLineSearch$1 -> com.amap.api.services.busline.BusLineSearch$1:
    com.amap.api.services.busline.BusLineSearch a -> a
    void run() -> run
com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener -> com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener:
    void onBusLineSearched(com.amap.api.services.busline.BusLineResult,int) -> onBusLineSearched
com.amap.api.services.busline.BusStationItem -> com.amap.api.services.busline.BusStationItem:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.core.LatLonPoint c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.List f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getBusStationId() -> getBusStationId
    void setBusStationId(java.lang.String) -> setBusStationId
    java.lang.String getBusStationName() -> getBusStationName
    void setBusStationName(java.lang.String) -> setBusStationName
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.util.List getBusLineItems() -> getBusLineItems
    void setBusLineItems(java.util.List) -> setBusLineItems
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.busline.BusStationQuery -> com.amap.api.services.busline.BusStationQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    boolean a() -> a
    java.lang.String getQueryString() -> getQueryString
    java.lang.String getCity() -> getCity
    int getPageSize() -> getPageSize
    int getPageNumber() -> getPageNumber
    void setQueryString(java.lang.String) -> setQueryString
    void setCity(java.lang.String) -> setCity
    void setPageSize(int) -> setPageSize
    void setPageNumber(int) -> setPageNumber
    com.amap.api.services.busline.BusStationQuery clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean weakEquals(com.amap.api.services.busline.BusStationQuery) -> weakEquals
    java.lang.Object clone() -> clone
com.amap.api.services.busline.BusStationResult -> com.amap.api.services.busline.BusStationResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.busline.BusStationQuery c -> c
    java.util.List d -> d
    java.util.List e -> e
    com.amap.api.services.busline.BusStationResult a(com.amap.api.services.core.d,java.util.ArrayList) -> a
    int a(int) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.busline.BusStationQuery getQuery() -> getQuery
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCities() -> getSearchSuggestionCities
    java.util.List getBusStations() -> getBusStations
com.amap.api.services.busline.BusStationSearch -> com.amap.api.services.busline.BusStationSearch:
    android.content.Context a -> a
    com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener b -> b
    com.amap.api.services.busline.BusStationQuery c -> c
    com.amap.api.services.busline.BusStationQuery d -> d
    java.util.ArrayList e -> e
    int f -> f
    android.os.Handler g -> g
    com.amap.api.services.busline.BusStationResult searchBusStation() -> searchBusStation
    void a(com.amap.api.services.busline.BusStationResult) -> a
    boolean a(int) -> a
    com.amap.api.services.busline.BusStationResult b(int) -> b
    void setOnBusStationSearchListener(com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener) -> setOnBusStationSearchListener
    void searchBusStationAsyn() -> searchBusStationAsyn
    void setQuery(com.amap.api.services.busline.BusStationQuery) -> setQuery
    com.amap.api.services.busline.BusStationQuery getQuery() -> getQuery
    com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener a(com.amap.api.services.busline.BusStationSearch) -> a
    android.os.Handler b(com.amap.api.services.busline.BusStationSearch) -> b
com.amap.api.services.busline.BusStationSearch$1 -> com.amap.api.services.busline.BusStationSearch$1:
    com.amap.api.services.busline.BusStationSearch a -> a
    void run() -> run
com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener -> com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener:
    void onBusStationSearched(com.amap.api.services.busline.BusStationResult,int) -> onBusStationSearched
com.amap.api.services.busline.a -> com.amap.api.services.busline.a:
    com.amap.api.services.busline.BusLineItem a(android.os.Parcel) -> a
    com.amap.api.services.busline.BusLineItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.busline.b -> com.amap.api.services.busline.b:
    com.amap.api.services.busline.BusStationItem a(android.os.Parcel) -> a
    com.amap.api.services.busline.BusStationItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.cloud.CloudImage -> com.amap.api.services.cloud.CloudImage:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getPreurl() -> getPreurl
    void setPreurl(java.lang.String) -> setPreurl
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.cloud.CloudItem -> com.amap.api.services.cloud.CloudItem:
    java.lang.String a -> a
    int b -> b
    com.amap.api.services.core.LatLonPoint mPoint -> mPoint
    java.lang.String mTitle -> mTitle
    java.lang.String mSnippet -> mSnippet
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    java.util.List f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getID() -> getID
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    java.lang.String getCreatetime() -> getCreatetime
    void setCreatetime(java.lang.String) -> setCreatetime
    java.lang.String getUpdatetime() -> getUpdatetime
    void setUpdatetime(java.lang.String) -> setUpdatetime
    java.util.HashMap getCustomfield() -> getCustomfield
    void setCustomfield(java.util.HashMap) -> setCustomfield
    java.util.List getCloudImage() -> getCloudImage
    void setmCloudImage(java.util.List) -> setmCloudImage
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amap.api.services.cloud.CloudItemDetail -> com.amap.api.services.cloud.CloudItemDetail:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.cloud.CloudResult -> com.amap.api.services.cloud.CloudResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.core.g c -> c
    int d -> d
    com.amap.api.services.cloud.CloudResult a(com.amap.api.services.core.g,java.util.ArrayList) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.cloud.CloudSearch$Query getQuery() -> getQuery
    com.amap.api.services.cloud.CloudSearch$SearchBound getBound() -> getBound
    java.util.ArrayList getClouds() -> getClouds
    int getTotalCount() -> getTotalCount
    int a(int) -> a
com.amap.api.services.cloud.CloudSearch -> com.amap.api.services.cloud.CloudSearch:
    android.content.Context a -> a
    com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener b -> b
    com.amap.api.services.cloud.CloudSearch$Query c -> c
    int d -> d
    java.util.HashMap e -> e
    android.os.Handler f -> f
    void setOnCloudSearchListener(com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener) -> setOnCloudSearchListener
    com.amap.api.services.cloud.CloudResult a(com.amap.api.services.cloud.CloudSearch$Query) -> a
    void searchCloudAsyn(com.amap.api.services.cloud.CloudSearch$Query) -> searchCloudAsyn
    com.amap.api.services.cloud.CloudItemDetail b(java.lang.String,java.lang.String) -> b
    void searchCloudDetailAsyn(java.lang.String,java.lang.String) -> searchCloudDetailAsyn
    boolean c(java.lang.String,java.lang.String) -> c
    void a(com.amap.api.services.cloud.CloudResult,com.amap.api.services.cloud.CloudSearch$Query) -> a
    com.amap.api.services.cloud.CloudResult getPageLocal(int) -> getPageLocal
    boolean a(int) -> a
    com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener a(com.amap.api.services.cloud.CloudSearch) -> a
    com.amap.api.services.cloud.CloudResult a(com.amap.api.services.cloud.CloudSearch,com.amap.api.services.cloud.CloudSearch$Query) -> a
    android.os.Handler b(com.amap.api.services.cloud.CloudSearch) -> b
    com.amap.api.services.cloud.CloudItemDetail a(com.amap.api.services.cloud.CloudSearch,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.amap.api.services.cloud.CloudSearch$1 -> com.amap.api.services.cloud.CloudSearch$1:
    com.amap.api.services.cloud.CloudSearch$Query a -> a
    com.amap.api.services.cloud.CloudSearch b -> b
    void run() -> run
com.amap.api.services.cloud.CloudSearch$2 -> com.amap.api.services.cloud.CloudSearch$2:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.cloud.CloudSearch c -> c
    void run() -> run
com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener -> com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener:
    void onCloudSearched(com.amap.api.services.cloud.CloudResult,int) -> onCloudSearched
    void onCloudItemDetailSearched(com.amap.api.services.cloud.CloudItemDetail,int) -> onCloudItemDetailSearched
com.amap.api.services.cloud.CloudSearch$Query -> com.amap.api.services.cloud.CloudSearch$Query:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    com.amap.api.services.cloud.CloudSearch$SearchBound e -> e
    com.amap.api.services.cloud.CloudSearch$Sortingrules f -> f
    java.util.ArrayList g -> g
    java.util.HashMap h -> h
    java.lang.String getQueryString() -> getQueryString
    void setTableID(java.lang.String) -> setTableID
    java.lang.String getTableID() -> getTableID
    int getPageNum() -> getPageNum
    void setPageNum(int) -> setPageNum
    void setPageSize(int) -> setPageSize
    int getPageSize() -> getPageSize
    void setBound(com.amap.api.services.cloud.CloudSearch$SearchBound) -> setBound
    com.amap.api.services.cloud.CloudSearch$SearchBound getBound() -> getBound
    void addFilterString(java.lang.String,java.lang.String) -> addFilterString
    java.lang.String getFilterString() -> getFilterString
    void addFilterNum(java.lang.String,java.lang.String,java.lang.String) -> addFilterNum
    java.util.ArrayList a() -> a
    java.util.HashMap b() -> b
    java.lang.String getFilterNumString() -> getFilterNumString
    void setSortingrules(com.amap.api.services.cloud.CloudSearch$Sortingrules) -> setSortingrules
    com.amap.api.services.cloud.CloudSearch$Sortingrules getSortingrules() -> getSortingrules
    boolean a(com.amap.api.services.cloud.CloudSearch$SearchBound,com.amap.api.services.cloud.CloudSearch$SearchBound) -> a
    boolean a(com.amap.api.services.cloud.CloudSearch$Sortingrules,com.amap.api.services.cloud.CloudSearch$Sortingrules) -> a
    boolean queryEquals(com.amap.api.services.cloud.CloudSearch$Query) -> queryEquals
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.cloud.CloudSearch$Query clone() -> clone
    java.lang.Object clone() -> clone
    int a(com.amap.api.services.cloud.CloudSearch$Query) -> a
    int b(com.amap.api.services.cloud.CloudSearch$Query) -> b
com.amap.api.services.cloud.CloudSearch$SearchBound -> com.amap.api.services.cloud.CloudSearch$SearchBound:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    int c -> c
    com.amap.api.services.core.LatLonPoint d -> d
    java.lang.String e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String BOUND_SHAPE -> BOUND_SHAPE
    java.lang.String POLYGON_SHAPE -> POLYGON_SHAPE
    java.lang.String RECTANGLE_SHAPE -> RECTANGLE_SHAPE
    java.lang.String LOCAL_SHAPE -> LOCAL_SHAPE
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    com.amap.api.services.core.LatLonPoint getLowerLeft() -> getLowerLeft
    com.amap.api.services.core.LatLonPoint getUpperRight() -> getUpperRight
    com.amap.api.services.core.LatLonPoint getCenter() -> getCenter
    int getRange() -> getRange
    java.lang.String getShape() -> getShape
    java.lang.String getCity() -> getCity
    java.util.List getPolyGonList() -> getPolyGonList
    boolean a(java.util.List,java.util.List) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.List a() -> a
    com.amap.api.services.cloud.CloudSearch$SearchBound clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.cloud.CloudSearch$Sortingrules -> com.amap.api.services.cloud.CloudSearch$Sortingrules:
    int a -> a
    java.lang.String b -> b
    boolean c -> c
    int WEIGHT -> WEIGHT
    int DISTANCE -> DISTANCE
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.cloud.a -> com.amap.api.services.cloud.a:
    com.amap.api.services.cloud.CloudImage a(android.os.Parcel) -> a
    com.amap.api.services.cloud.CloudImage[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.cloud.b -> com.amap.api.services.cloud.b:
    com.amap.api.services.cloud.CloudItem a(android.os.Parcel) -> a
    com.amap.api.services.cloud.CloudItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.cloud.c -> com.amap.api.services.cloud.c:
    com.amap.api.services.cloud.CloudItemDetail a(android.os.Parcel) -> a
    com.amap.api.services.cloud.CloudItemDetail[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.AMapException -> com.amap.api.services.core.AMapException:
    java.lang.String AMAP_SIGNATURE_ERROR -> AMAP_SIGNATURE_ERROR
    java.lang.String AMAP_INVALID_USER_KEY -> AMAP_INVALID_USER_KEY
    java.lang.String AMAP_SERVICE_NOT_AVAILBALE -> AMAP_SERVICE_NOT_AVAILBALE
    java.lang.String AMAP_DAILY_QUERY_OVER_LIMIT -> AMAP_DAILY_QUERY_OVER_LIMIT
    java.lang.String AMAP_ACCESS_TOO_FREQUENT -> AMAP_ACCESS_TOO_FREQUENT
    java.lang.String AMAP_INVALID_USER_IP -> AMAP_INVALID_USER_IP
    java.lang.String AMAP_INVALID_USER_DOMAIN -> AMAP_INVALID_USER_DOMAIN
    java.lang.String AMAP_INVALID_USER_SCODE -> AMAP_INVALID_USER_SCODE
    java.lang.String AMAP_USERKEY_PLAT_NOMATCH -> AMAP_USERKEY_PLAT_NOMATCH
    java.lang.String AMAP_IP_QUERY_OVER_LIMIT -> AMAP_IP_QUERY_OVER_LIMIT
    java.lang.String AMAP_NOT_SUPPORT_HTTPS -> AMAP_NOT_SUPPORT_HTTPS
    java.lang.String AMAP_INSUFFICIENT_PRIVILEGES -> AMAP_INSUFFICIENT_PRIVILEGES
    java.lang.String AMAP_USER_KEY_RECYCLED -> AMAP_USER_KEY_RECYCLED
    java.lang.String AMAP_ENGINE_RESPONSE_ERROR -> AMAP_ENGINE_RESPONSE_ERROR
    java.lang.String AMAP_ENGINE_RESPONSE_DATA_ERROR -> AMAP_ENGINE_RESPONSE_DATA_ERROR
    java.lang.String AMAP_ENGINE_CONNECT_TIMEOUT -> AMAP_ENGINE_CONNECT_TIMEOUT
    java.lang.String AMAP_ENGINE_RETURN_TIMEOUT -> AMAP_ENGINE_RETURN_TIMEOUT
    java.lang.String AMAP_SERVICE_INVALID_PARAMS -> AMAP_SERVICE_INVALID_PARAMS
    java.lang.String AMAP_SERVICE_MISSING_REQUIRED_PARAMS -> AMAP_SERVICE_MISSING_REQUIRED_PARAMS
    java.lang.String AMAP_SERVICE_ILLEGAL_REQUEST -> AMAP_SERVICE_ILLEGAL_REQUEST
    java.lang.String AMAP_SERVICE_UNKNOWN_ERROR -> AMAP_SERVICE_UNKNOWN_ERROR
    java.lang.String AMAP_CLIENT_ERROR_PROTOCOL -> AMAP_CLIENT_ERROR_PROTOCOL
    java.lang.String AMAP_CLIENT_SOCKET_TIMEOUT_EXCEPTION -> AMAP_CLIENT_SOCKET_TIMEOUT_EXCEPTION
    java.lang.String AMAP_CLIENT_URL_EXCEPTION -> AMAP_CLIENT_URL_EXCEPTION
    java.lang.String AMAP_CLIENT_UNKNOWHOST_EXCEPTION -> AMAP_CLIENT_UNKNOWHOST_EXCEPTION
    java.lang.String AMAP_CLIENT_NETWORK_EXCEPTION -> AMAP_CLIENT_NETWORK_EXCEPTION
    java.lang.String AMAP_CLIENT_UNKNOWN_ERROR -> AMAP_CLIENT_UNKNOWN_ERROR
    java.lang.String AMAP_CLIENT_INVALID_PARAMETER -> AMAP_CLIENT_INVALID_PARAMETER
    java.lang.String AMAP_CLIENT_IO_EXCEPTION -> AMAP_CLIENT_IO_EXCEPTION
    java.lang.String AMAP_CLIENT_NULLPOINT_EXCEPTION -> AMAP_CLIENT_NULLPOINT_EXCEPTION
    java.lang.String AMAP_CLIENT_ERRORCODE_MISSSING -> AMAP_CLIENT_ERRORCODE_MISSSING
    java.lang.String AMAP_SERVICE_TABLEID_NOT_EXIST -> AMAP_SERVICE_TABLEID_NOT_EXIST
    java.lang.String AMAP_ID_NOT_EXIST -> AMAP_ID_NOT_EXIST
    java.lang.String AMAP_SERVICE_MAINTENANCE -> AMAP_SERVICE_MAINTENANCE
    java.lang.String AMAP_ENGINE_TABLEID_NOT_EXIST -> AMAP_ENGINE_TABLEID_NOT_EXIST
    java.lang.String AMAP_NEARBY_INVALID_USERID -> AMAP_NEARBY_INVALID_USERID
    java.lang.String AMAP_NEARBY_KEY_NOT_BIND -> AMAP_NEARBY_KEY_NOT_BIND
    java.lang.String AMAP_CLIENT_UPLOADAUTO_STARTED_ERROR -> AMAP_CLIENT_UPLOADAUTO_STARTED_ERROR
    java.lang.String AMAP_CLIENT_USERID_ILLEGAL -> AMAP_CLIENT_USERID_ILLEGAL
    java.lang.String AMAP_CLIENT_NEARBY_NULL_RESULT -> AMAP_CLIENT_NEARBY_NULL_RESULT
    java.lang.String AMAP_CLIENT_UPLOAD_TOO_FREQUENT -> AMAP_CLIENT_UPLOAD_TOO_FREQUENT
    java.lang.String AMAP_CLIENT_UPLOAD_LOCATION_ERROR -> AMAP_CLIENT_UPLOAD_LOCATION_ERROR
    java.lang.String AMAP_ROUTE_OUT_OF_SERVICE -> AMAP_ROUTE_OUT_OF_SERVICE
    java.lang.String AMAP_ROUTE_NO_ROADS_NEARBY -> AMAP_ROUTE_NO_ROADS_NEARBY
    java.lang.String AMAP_ROUTE_FAIL -> AMAP_ROUTE_FAIL
    java.lang.String AMAP_OVER_DIRECTION_RANGE -> AMAP_OVER_DIRECTION_RANGE
    java.lang.String AMAP_SHARE_LICENSE_IS_EXPIRED -> AMAP_SHARE_LICENSE_IS_EXPIRED
    java.lang.String AMAP_SHARE_FAILURE -> AMAP_SHARE_FAILURE
    int CODE_AMAP_SIGNATURE_ERROR -> CODE_AMAP_SIGNATURE_ERROR
    int CODE_AMAP_INVALID_USER_KEY -> CODE_AMAP_INVALID_USER_KEY
    int CODE_AMAP_SERVICE_NOT_AVAILBALE -> CODE_AMAP_SERVICE_NOT_AVAILBALE
    int CODE_AMAP_DAILY_QUERY_OVER_LIMIT -> CODE_AMAP_DAILY_QUERY_OVER_LIMIT
    int CODE_AMAP_ACCESS_TOO_FREQUENT -> CODE_AMAP_ACCESS_TOO_FREQUENT
    int CODE_AMAP_INVALID_USER_IP -> CODE_AMAP_INVALID_USER_IP
    int CODE_AMAP_INVALID_USER_DOMAIN -> CODE_AMAP_INVALID_USER_DOMAIN
    int CODE_AMAP_INVALID_USER_SCODE -> CODE_AMAP_INVALID_USER_SCODE
    int CODE_AMAP_USERKEY_PLAT_NOMATCH -> CODE_AMAP_USERKEY_PLAT_NOMATCH
    int CODE_AMAP_IP_QUERY_OVER_LIMIT -> CODE_AMAP_IP_QUERY_OVER_LIMIT
    int CODE_AMAP_NOT_SUPPORT_HTTPS -> CODE_AMAP_NOT_SUPPORT_HTTPS
    int CODE_AMAP_INSUFFICIENT_PRIVILEGES -> CODE_AMAP_INSUFFICIENT_PRIVILEGES
    int CODE_AMAP_USER_KEY_RECYCLED -> CODE_AMAP_USER_KEY_RECYCLED
    int CODE_AMAP_ENGINE_RESPONSE_ERROR -> CODE_AMAP_ENGINE_RESPONSE_ERROR
    int CODE_AMAP_ENGINE_RESPONSE_DATA_ERROR -> CODE_AMAP_ENGINE_RESPONSE_DATA_ERROR
    int CODE_AMAP_ENGINE_CONNECT_TIMEOUT -> CODE_AMAP_ENGINE_CONNECT_TIMEOUT
    int CODE_AMAP_ENGINE_RETURN_TIMEOUT -> CODE_AMAP_ENGINE_RETURN_TIMEOUT
    int CODE_AMAP_SERVICE_INVALID_PARAMS -> CODE_AMAP_SERVICE_INVALID_PARAMS
    int CODE_AMAP_SERVICE_MISSING_REQUIRED_PARAMS -> CODE_AMAP_SERVICE_MISSING_REQUIRED_PARAMS
    int CODE_AMAP_SERVICE_ILLEGAL_REQUEST -> CODE_AMAP_SERVICE_ILLEGAL_REQUEST
    int CODE_AMAP_SERVICE_UNKNOWN_ERROR -> CODE_AMAP_SERVICE_UNKNOWN_ERROR
    int CODE_AMAP_CLIENT_ERRORCODE_MISSSING -> CODE_AMAP_CLIENT_ERRORCODE_MISSSING
    int CODE_AMAP_CLIENT_ERROR_PROTOCOL -> CODE_AMAP_CLIENT_ERROR_PROTOCOL
    int CODE_AMAP_CLIENT_SOCKET_TIMEOUT_EXCEPTION -> CODE_AMAP_CLIENT_SOCKET_TIMEOUT_EXCEPTION
    int CODE_AMAP_CLIENT_URL_EXCEPTION -> CODE_AMAP_CLIENT_URL_EXCEPTION
    int CODE_AMAP_CLIENT_UNKNOWHOST_EXCEPTION -> CODE_AMAP_CLIENT_UNKNOWHOST_EXCEPTION
    int CODE_AMAP_CLIENT_NETWORK_EXCEPTION -> CODE_AMAP_CLIENT_NETWORK_EXCEPTION
    int CODE_AMAP_CLIENT_UNKNOWN_ERROR -> CODE_AMAP_CLIENT_UNKNOWN_ERROR
    int CODE_AMAP_CLIENT_INVALID_PARAMETER -> CODE_AMAP_CLIENT_INVALID_PARAMETER
    int CODE_AMAP_CLIENT_IO_EXCEPTION -> CODE_AMAP_CLIENT_IO_EXCEPTION
    int CODE_AMAP_CLIENT_NULLPOINT_EXCEPTION -> CODE_AMAP_CLIENT_NULLPOINT_EXCEPTION
    int CODE_AMAP_SERVICE_TABLEID_NOT_EXIST -> CODE_AMAP_SERVICE_TABLEID_NOT_EXIST
    int CODE_AMAP_ID_NOT_EXIST -> CODE_AMAP_ID_NOT_EXIST
    int CODE_AMAP_SERVICE_MAINTENANCE -> CODE_AMAP_SERVICE_MAINTENANCE
    int CODE_AMAP_ENGINE_TABLEID_NOT_EXIST -> CODE_AMAP_ENGINE_TABLEID_NOT_EXIST
    int CODE_AMAP_NEARBY_INVALID_USERID -> CODE_AMAP_NEARBY_INVALID_USERID
    int CODE_AMAP_NEARBY_KEY_NOT_BIND -> CODE_AMAP_NEARBY_KEY_NOT_BIND
    int CODE_AMAP_CLIENT_UPLOADAUTO_STARTED_ERROR -> CODE_AMAP_CLIENT_UPLOADAUTO_STARTED_ERROR
    int CODE_AMAP_CLIENT_USERID_ILLEGAL -> CODE_AMAP_CLIENT_USERID_ILLEGAL
    int CODE_AMAP_CLIENT_NEARBY_NULL_RESULT -> CODE_AMAP_CLIENT_NEARBY_NULL_RESULT
    int CODE_AMAP_CLIENT_UPLOAD_TOO_FREQUENT -> CODE_AMAP_CLIENT_UPLOAD_TOO_FREQUENT
    int CODE_AMAP_CLIENT_UPLOAD_LOCATION_ERROR -> CODE_AMAP_CLIENT_UPLOAD_LOCATION_ERROR
    int CODE_AMAP_ROUTE_OUT_OF_SERVICE -> CODE_AMAP_ROUTE_OUT_OF_SERVICE
    int CODE_AMAP_ROUTE_NO_ROADS_NEARBY -> CODE_AMAP_ROUTE_NO_ROADS_NEARBY
    int CODE_AMAP_ROUTE_FAIL -> CODE_AMAP_ROUTE_FAIL
    int CODE_AMAP_OVER_DIRECTION_RANGE -> CODE_AMAP_OVER_DIRECTION_RANGE
    int CODE_AMAP_SHARE_LICENSE_IS_EXPIRED -> CODE_AMAP_SHARE_LICENSE_IS_EXPIRED
    int CODE_AMAP_SHARE_FAILURE -> CODE_AMAP_SHARE_FAILURE
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.services.core.LatLonPoint -> com.amap.api.services.core.LatLonPoint:
    double a -> a
    double b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    com.amap.api.services.core.LatLonPoint copy() -> copy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.core.LatLonSharePoint -> com.amap.api.services.core.LatLonSharePoint:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSharePointName() -> getSharePointName
    void setSharePointName(java.lang.String) -> setSharePointName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.services.core.PoiItem -> com.amap.api.services.core.PoiItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    com.amap.api.services.core.LatLonPoint mPoint -> mPoint
    java.lang.String mTitle -> mTitle
    java.lang.String mSnippet -> mSnippet
    com.amap.api.services.core.LatLonPoint g -> g
    com.amap.api.services.core.LatLonPoint h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    boolean p -> p
    com.amap.api.services.poisearch.IndoorData q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.util.List u -> u
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getBusinessArea() -> getBusinessArea
    void setBusinessArea(java.lang.String) -> setBusinessArea
    java.lang.String getAdName() -> getAdName
    void setAdName(java.lang.String) -> setAdName
    java.lang.String getCityName() -> getCityName
    void setCityName(java.lang.String) -> setCityName
    java.lang.String getProvinceName() -> getProvinceName
    void setProvinceName(java.lang.String) -> setProvinceName
    java.lang.String getTypeDes() -> getTypeDes
    void setTypeDes(java.lang.String) -> setTypeDes
    java.lang.String getTel() -> getTel
    void setTel(java.lang.String) -> setTel
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getPoiId() -> getPoiId
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.services.core.LatLonPoint getEnter() -> getEnter
    void setEnter(com.amap.api.services.core.LatLonPoint) -> setEnter
    com.amap.api.services.core.LatLonPoint getExit() -> getExit
    void setExit(com.amap.api.services.core.LatLonPoint) -> setExit
    java.lang.String getWebsite() -> getWebsite
    void setWebsite(java.lang.String) -> setWebsite
    java.lang.String getPostcode() -> getPostcode
    void setPostcode(java.lang.String) -> setPostcode
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    void setIndoorMap(boolean) -> setIndoorMap
    boolean isIndoorMap() -> isIndoorMap
    void setProvinceCode(java.lang.String) -> setProvinceCode
    java.lang.String getProvinceCode() -> getProvinceCode
    void setParkingType(java.lang.String) -> setParkingType
    java.lang.String getParkingType() -> getParkingType
    void setSubPois(java.util.List) -> setSubPois
    java.util.List getSubPois() -> getSubPois
    com.amap.api.services.poisearch.IndoorData getIndoorData() -> getIndoorData
    void setIndoorDate(com.amap.api.services.poisearch.IndoorData) -> setIndoorDate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amap.api.services.core.ServiceSettings -> com.amap.api.services.core.ServiceSettings:
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String CHINESE -> CHINESE
    int HTTP -> HTTP
    int HTTPS -> HTTPS
    java.lang.String a -> a
    int b -> b
    com.amap.api.services.core.ServiceSettings c -> c
    int d -> d
    int e -> e
    int getConnectionTimeOut() -> getConnectionTimeOut
    int getSoTimeOut() -> getSoTimeOut
    void setConnectionTimeOut(int) -> setConnectionTimeOut
    void setSoTimeOut(int) -> setSoTimeOut
    com.amap.api.services.core.ServiceSettings getInstance() -> getInstance
    void setLanguage(java.lang.String) -> setLanguage
    void setProtocol(int) -> setProtocol
    java.lang.String getLanguage() -> getLanguage
    int getProtocol() -> getProtocol
    void setApiKey(java.lang.String) -> setApiKey
com.amap.api.services.core.SuggestionCity -> com.amap.api.services.core.SuggestionCity:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String getCityName() -> getCityName
    void setCityName(java.lang.String) -> setCityName
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    int getSuggestionNum() -> getSuggestionNum
    void setSuggestionNum(int) -> setSuggestionNum
com.amap.api.services.core.a -> com.amap.api.services.core.a:
    java.lang.Object a -> a
    int b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    int h -> h
    void a(android.content.Context,java.lang.Object) -> a
    java.lang.Object a(byte[]) -> a
    java.lang.Object a(java.lang.String) -> a
    java.lang.Object a() -> a
    java.lang.Object e() -> e
    byte[] a(int,com.amap.api.services.core.ci,com.amap.api.services.core.cj) -> a
    java.util.Map b() -> b
    java.util.Map c() -> c
    java.lang.Object b(byte[]) -> b
    java.lang.Object d() -> d
com.amap.api.services.core.aa -> com.amap.api.services.core.aa:
    com.amap.api.services.poisearch.PoiSearch$Query a -> a
    com.amap.api.services.poisearch.PoiSearch$SearchBound b -> b
com.amap.api.services.core.ab -> com.amap.api.services.core.ab:
    java.lang.String g() -> g
    com.amap.api.services.geocoder.RegeocodeAddress d(java.lang.String) -> d
    java.lang.String e() -> e
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.ac -> com.amap.api.services.core.ac:
    java.lang.String h -> h
    java.util.Map b() -> b
    java.lang.String b(java.lang.String) -> b
    java.lang.String g() -> g
    byte[] a(int,com.amap.api.services.core.ci,com.amap.api.services.core.cj) -> a
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.ad -> com.amap.api.services.core.ad:
    java.lang.String e() -> e
    com.amap.api.services.route.WalkRouteResult d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.ae -> com.amap.api.services.core.ae:
    com.amap.api.services.weather.LocalWeatherForecast h -> h
    java.lang.String e() -> e
    com.amap.api.services.weather.LocalWeatherForecast d(java.lang.String) -> d
    com.amap.api.services.weather.LocalWeatherForecast h() -> h
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.af -> com.amap.api.services.core.af:
    com.amap.api.services.weather.LocalWeatherLive h -> h
    java.lang.String e() -> e
    com.amap.api.services.weather.LocalWeatherLive d(java.lang.String) -> d
    com.amap.api.services.weather.LocalWeatherLive h() -> h
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.ag -> com.amap.api.services.core.ag:
    java.lang.Object i() -> i
    java.lang.String g() -> g
com.amap.api.services.core.ah -> com.amap.api.services.core.ah:
    int a -> a
    byte[] a(byte[],byte[]) -> a
    int[] a(int[],int[]) -> a
    int[] a(byte[],boolean) -> a
    byte[] a(int[],boolean) -> a
com.amap.api.services.core.ai -> com.amap.api.services.core.ai:
    java.lang.String a -> a
    int b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.amap.api.services.core.aj -> com.amap.api.services.core.aj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String f(android.content.Context) -> f
com.amap.api.services.core.ak -> com.amap.api.services.core.ak:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(java.lang.String) -> a
com.amap.api.services.core.al -> com.amap.api.services.core.al:
    java.lang.String a(android.content.Context,com.amap.api.services.core.ar,java.util.Map,boolean) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
    java.lang.String b(android.content.Context,byte[]) -> b
    java.lang.String a(android.content.Context,com.amap.api.services.core.ar) -> a
    void a(java.io.ByteArrayOutputStream,java.lang.String) -> a
    void a(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.amap.api.services.core.am -> com.amap.api.services.core.am:
    com.amap.api.services.core.am$a a(byte[]) -> a
    com.amap.api.services.core.am$a a(android.content.Context,com.amap.api.services.core.ar,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void a(org.json.JSONObject,com.amap.api.services.core.am$a$b) -> a
    void a(org.json.JSONObject,com.amap.api.services.core.am$a$c) -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
com.amap.api.services.core.am$a -> com.amap.api.services.core.am$a:
    org.json.JSONObject a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    com.amap.api.services.core.am$a$a d -> d
    com.amap.api.services.core.am$a$c e -> e
    com.amap.api.services.core.am$a$b f -> f
com.amap.api.services.core.am$a$a -> com.amap.api.services.core.am$a$a:
    boolean a -> a
    boolean b -> b
com.amap.api.services.core.am$a$b -> com.amap.api.services.core.am$a$b:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.services.core.am$a$c -> com.amap.api.services.core.am$a$c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.amap.api.services.core.am$b -> com.amap.api.services.core.am$b:
    android.content.Context a -> a
    com.amap.api.services.core.ar b -> b
    java.lang.String c -> c
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String g() -> g
com.amap.api.services.core.an -> com.amap.api.services.core.an:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    android.net.NetworkInfo n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.util.List a(java.util.List) -> a
    boolean a(boolean) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String) -> a
com.amap.api.services.core.an$a -> com.amap.api.services.core.an$a:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.amap.api.services.core.ao -> com.amap.api.services.core.ao:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] a(byte[],java.security.Key) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String b(byte[]) -> b
com.amap.api.services.core.ap -> com.amap.api.services.core.ap:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
    byte[] c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
com.amap.api.services.core.aq -> com.amap.api.services.core.aq:
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy b(android.content.Context) -> b
    boolean a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    int b() -> b
com.amap.api.services.core.ar -> com.amap.api.services.core.ar:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    java.lang.String[] f() -> f
com.amap.api.services.core.ar$1 -> com.amap.api.services.core.ar$1:
com.amap.api.services.core.ar$a -> com.amap.api.services.core.ar$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    com.amap.api.services.core.ar$a a(boolean) -> a
    com.amap.api.services.core.ar$a a(java.lang.String) -> a
    com.amap.api.services.core.ar$a a(java.lang.String[]) -> a
    com.amap.api.services.core.ar a() -> a
    java.lang.String a(com.amap.api.services.core.ar$a) -> a
    java.lang.String b(com.amap.api.services.core.ar$a) -> b
    java.lang.String c(com.amap.api.services.core.ar$a) -> c
    boolean d(com.amap.api.services.core.ar$a) -> d
    java.lang.String e(com.amap.api.services.core.ar$a) -> e
    java.lang.String[] f(com.amap.api.services.core.ar$a) -> f
com.amap.api.services.core.as -> com.amap.api.services.core.as:
    boolean a(org.json.JSONObject,java.lang.String) -> a
    byte[] a() -> a
    java.lang.String a(java.util.Map) -> a
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.util.Map) -> b
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    byte[] f(byte[]) -> f
com.amap.api.services.core.at -> com.amap.api.services.core.at:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
com.amap.api.services.core.au -> com.amap.api.services.core.au:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.services.core.av -> com.amap.api.services.core.av:
    android.content.Context d -> d
    java.util.concurrent.ExecutorService e -> e
    java.util.concurrent.ExecutorService a() -> a
    com.amap.api.services.core.av a(android.content.Context,com.amap.api.services.core.ar) -> a
    com.amap.api.services.core.av b() -> b
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void c() -> c
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.services.core.ar,boolean) -> a
    android.content.Context a(com.amap.api.services.core.av) -> a
com.amap.api.services.core.av$1 -> com.amap.api.services.core.av$1:
    android.content.Context a -> a
    com.amap.api.services.core.ar b -> b
    boolean c -> c
    com.amap.api.services.core.av d -> d
    void run() -> run
com.amap.api.services.core.av$a -> com.amap.api.services.core.av$a:
    android.content.Context a -> a
    void a() -> a
com.amap.api.services.core.aw -> com.amap.api.services.core.aw:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.services.core.ax -> com.amap.api.services.core.ax:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    int d -> d
    com.amap.api.services.core.ax$a e -> e
    int a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    com.amap.api.services.core.cc a(com.amap.api.services.core.bq) -> a
    java.lang.String a(java.util.List) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
com.amap.api.services.core.ax$1 -> com.amap.api.services.core.ax$1:
com.amap.api.services.core.ax$a -> com.amap.api.services.core.ax$a:
    com.amap.api.services.core.bq b -> b
    com.amap.api.services.core.ax a -> a
    void a(java.lang.String) -> a
com.amap.api.services.core.ay -> com.amap.api.services.core.ay:
    com.amap.api.services.core.ay a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    boolean c -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.services.core.ar,boolean) -> a
com.amap.api.services.core.az -> com.amap.api.services.core.az:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.services.core.b -> com.amap.api.services.core.b:
    java.lang.String e() -> e
    byte[] f() -> f
    java.util.Map b() -> b
    java.util.Map c() -> c
    java.lang.Object d() -> d
    java.lang.String d(java.lang.String) -> d
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.amap.api.services.core.ba -> com.amap.api.services.core.ba:
    com.amap.api.services.core.ba$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.services.core.cc a(com.amap.api.services.core.bq) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.services.core.ba$a -> com.amap.api.services.core.ba$a:
    com.amap.api.services.core.bq b -> b
    com.amap.api.services.core.ba a -> a
    void a(java.lang.String) -> a
com.amap.api.services.core.bb -> com.amap.api.services.core.bb:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.services.core.bc -> com.amap.api.services.core.bc:
    com.amap.api.services.core.bc$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.services.core.cc a(com.amap.api.services.core.bq) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.services.core.bc$a -> com.amap.api.services.core.bc$a:
    com.amap.api.services.core.bq b -> b
    com.amap.api.services.core.bc a -> a
    void a(java.lang.String) -> a
com.amap.api.services.core.bd -> com.amap.api.services.core.bd:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.amap.api.services.core.bd$1 -> com.amap.api.services.core.bd$1:
    int a -> a
    android.content.Context b -> b
    java.lang.Throwable c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.amap.api.services.core.bd$2 -> com.amap.api.services.core.bd$2:
    android.content.Context a -> a
    void run() -> run
com.amap.api.services.core.be -> com.amap.api.services.core.be:
    com.amap.api.services.core.bz a -> a
    com.amap.api.services.core.be a(android.content.Context,int) -> a
    void b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
    void a(com.amap.api.services.core.bq,int) -> a
    int b(java.lang.String) -> b
    void a(java.util.List,com.amap.api.services.core.bq,int) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(java.util.List,android.content.Context) -> a
    java.lang.String c(java.lang.String) -> c
    void c() -> c
    com.amap.api.services.core.bz a(android.content.Context,java.lang.String) -> a
com.amap.api.services.core.bf -> com.amap.api.services.core.bf:
    byte[] a -> a
    java.lang.String a() -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String g() -> g
    byte[] f() -> f
com.amap.api.services.core.bg -> com.amap.api.services.core.bg:
    com.amap.api.services.core.ar a -> a
    com.amap.api.services.core.bg a(int) -> a
    void a(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    void a(com.amap.api.services.core.ar) -> a
    java.util.List b(android.content.Context) -> b
    void a(com.amap.api.services.core.bq,java.lang.String,java.lang.String,int,boolean) -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    com.amap.api.services.core.cc a(com.amap.api.services.core.bq) -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String a(android.content.Context,com.amap.api.services.core.ar) -> a
    java.lang.String c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.amap.api.services.core.bq) -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.amap.api.services.core.bh -> com.amap.api.services.core.bh:
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a(long) -> a
com.amap.api.services.core.bi -> com.amap.api.services.core.bi:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.amap.api.services.core.bj -> com.amap.api.services.core.bj:
    com.amap.api.services.core.bn a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.amap.api.services.core.bi c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    android.database.sqlite.SQLiteDatabase b(boolean) -> b
    java.lang.String a(java.util.Map) -> a
    void a(java.lang.String,com.amap.api.services.core.bk) -> a
    void b(java.lang.String,com.amap.api.services.core.bk) -> b
    void a(java.lang.String,com.amap.api.services.core.bk,boolean) -> a
    void a(com.amap.api.services.core.bk) -> a
    void a(com.amap.api.services.core.bk,boolean) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.amap.api.services.core.bk) -> a
    java.util.List b(java.lang.String,com.amap.api.services.core.bk,boolean) -> b
    java.util.List c(java.lang.String,com.amap.api.services.core.bk) -> c
com.amap.api.services.core.bk -> com.amap.api.services.core.bk:
    android.content.ContentValues a() -> a
    java.lang.Object a(android.database.Cursor) -> a
    void a(java.lang.Object) -> a
    java.lang.String b() -> b
com.amap.api.services.core.bl -> com.amap.api.services.core.bl:
    java.lang.String b() -> b
com.amap.api.services.core.bm -> com.amap.api.services.core.bm:
    java.lang.String b() -> b
com.amap.api.services.core.bn -> com.amap.api.services.core.bn:
    com.amap.api.services.core.bi a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.amap.api.services.core.bo -> com.amap.api.services.core.bo:
    java.lang.String b() -> b
com.amap.api.services.core.bp -> com.amap.api.services.core.bp:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    com.amap.api.services.core.bp u -> u
    com.amap.api.services.core.bp c() -> c
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.amap.api.services.core.bq -> com.amap.api.services.core.bq:
    com.amap.api.services.core.bj a -> a
    com.amap.api.services.core.br a(int) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void c(java.lang.String,int) -> c
    void a(com.amap.api.services.core.bs,int) -> a
    java.util.List a(int,int) -> a
    void b(com.amap.api.services.core.bs,int) -> b
    void a(com.amap.api.services.core.bs,com.amap.api.services.core.br) -> a
    void b(com.amap.api.services.core.bs,com.amap.api.services.core.br) -> b
com.amap.api.services.core.br -> com.amap.api.services.core.br:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.services.core.bs e -> e
    android.content.ContentValues a() -> a
    com.amap.api.services.core.bs b(android.database.Cursor) -> b
    void a(com.amap.api.services.core.bs) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.amap.api.services.core.bs -> com.amap.api.services.core.bs:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
com.amap.api.services.core.bt -> com.amap.api.services.core.bt:
    com.amap.api.services.core.bj a -> a
    android.content.Context b -> b
    com.amap.api.services.core.bj a(android.content.Context,boolean) -> a
    void a(com.amap.api.services.core.ar) -> a
    java.util.List a() -> a
com.amap.api.services.core.bu -> com.amap.api.services.core.bu:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.services.core.ar g -> g
    android.content.ContentValues a() -> a
    com.amap.api.services.core.ar b(android.database.Cursor) -> b
    void a(com.amap.api.services.core.ar) -> a
    java.lang.String b() -> b
    java.lang.String[] b(java.lang.String) -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c() -> c
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.amap.api.services.core.bv -> com.amap.api.services.core.bv:
    com.amap.api.services.core.bj a -> a
    android.content.Context b -> b
    com.amap.api.services.core.bj a(android.content.Context) -> a
    com.amap.api.services.core.bx a() -> a
    void a(com.amap.api.services.core.bx) -> a
com.amap.api.services.core.bw -> com.amap.api.services.core.bw:
    com.amap.api.services.core.bx a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.ContentValues a() -> a
    com.amap.api.services.core.bx b(android.database.Cursor) -> b
    void a(com.amap.api.services.core.bx) -> a
    java.lang.String b() -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.amap.api.services.core.bx -> com.amap.api.services.core.bx:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    void c(boolean) -> c
    boolean c() -> c
com.amap.api.services.core.by -> com.amap.api.services.core.by:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.services.core.bz -> com.amap.api.services.core.bz:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    com.amap.api.services.core.cc n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    void a(com.amap.api.services.core.cc) -> a
    com.amap.api.services.core.bz a(java.io.File,int,int,long) -> a
    void e() -> e
    void d(java.lang.String) -> d
    void f() -> f
    void g() -> g
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.amap.api.services.core.bz$b a(java.lang.String) -> a
    com.amap.api.services.core.bz$a b(java.lang.String) -> b
    com.amap.api.services.core.bz$a a(java.lang.String,long) -> a
    void a(com.amap.api.services.core.bz$a,boolean) -> a
    boolean h() -> h
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void i() -> i
    void b() -> b
    void close() -> close
    void j() -> j
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.amap.api.services.core.bz) -> a
    void b(com.amap.api.services.core.bz) -> b
    boolean c(com.amap.api.services.core.bz) -> c
    void d(com.amap.api.services.core.bz) -> d
    int a(com.amap.api.services.core.bz,int) -> a
    int e(com.amap.api.services.core.bz) -> e
    java.io.File f(com.amap.api.services.core.bz) -> f
    java.io.OutputStream d() -> d
    void a(com.amap.api.services.core.bz,com.amap.api.services.core.bz$a,boolean) -> a
com.amap.api.services.core.bz$a -> com.amap.api.services.core.bz$a:
    com.amap.api.services.core.bz$c b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.amap.api.services.core.bz a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.amap.api.services.core.bz$c a(com.amap.api.services.core.bz$a) -> a
    boolean[] b(com.amap.api.services.core.bz$a) -> b
    boolean a(com.amap.api.services.core.bz$a,boolean) -> a
com.amap.api.services.core.bz$a$a -> com.amap.api.services.core.bz$a$a:
    com.amap.api.services.core.bz$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.amap.api.services.core.bz$b -> com.amap.api.services.core.bz$b:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.amap.api.services.core.bz a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.amap.api.services.core.bz$c -> com.amap.api.services.core.bz$c:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.amap.api.services.core.bz$a e -> e
    long f -> f
    com.amap.api.services.core.bz a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.amap.api.services.core.bz$c,boolean) -> a
    com.amap.api.services.core.bz$a a(com.amap.api.services.core.bz$c,com.amap.api.services.core.bz$a) -> a
    void a(com.amap.api.services.core.bz$c,java.lang.String[]) -> a
    com.amap.api.services.core.bz$a a(com.amap.api.services.core.bz$c) -> a
    long[] b(com.amap.api.services.core.bz$c) -> b
    java.lang.String c(com.amap.api.services.core.bz$c) -> c
    boolean d(com.amap.api.services.core.bz$c) -> d
    long e(com.amap.api.services.core.bz$c) -> e
    long a(com.amap.api.services.core.bz$c,long) -> a
com.amap.api.services.core.c -> com.amap.api.services.core.c:
    java.lang.String e() -> e
    com.amap.api.services.route.BusRouteResult d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.ca -> com.amap.api.services.core.ca:
    com.amap.api.services.core.bz a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.amap.api.services.core.cb -> com.amap.api.services.core.cb:
    void write(int) -> write
com.amap.api.services.core.cc -> com.amap.api.services.core.cc:
    void a(java.lang.String) -> a
com.amap.api.services.core.cd -> com.amap.api.services.core.cd:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.amap.api.services.core.cd) -> a
com.amap.api.services.core.cd$1 -> com.amap.api.services.core.cd$1:
    com.amap.api.services.core.cd a -> a
    java.lang.String toString() -> toString
com.amap.api.services.core.ce -> com.amap.api.services.core.ce:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.amap.api.services.core.cf -> com.amap.api.services.core.cf:
    byte[] a(com.amap.api.services.core.cj) -> a
    byte[] b(com.amap.api.services.core.cj) -> b
    void c(com.amap.api.services.core.cj) -> c
    com.amap.api.services.core.cl a(com.amap.api.services.core.cj,boolean) -> a
com.amap.api.services.core.cg -> com.amap.api.services.core.cg:
    com.amap.api.services.core.ch a -> a
    int b -> b
    int c -> c
    boolean d -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy f -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    void a(com.amap.api.services.core.ch) -> a
    com.amap.api.services.core.cl a(java.lang.String,java.util.Map,java.util.Map) -> a
    com.amap.api.services.core.cl a(java.lang.String,java.util.Map,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    com.amap.api.services.core.cl a(java.net.HttpURLConnection) -> a
    void a(java.util.Map,java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.Map) -> a
com.amap.api.services.core.ch -> com.amap.api.services.core.ch:
    void a() -> a
com.amap.api.services.core.ci -> com.amap.api.services.core.ci:
    com.amap.api.services.core.ci a -> a
    com.amap.api.services.core.co b -> b
    android.os.Handler c -> c
    com.amap.api.services.core.ci a(boolean) -> a
    com.amap.api.services.core.ci a(boolean,int) -> a
    byte[] b(com.amap.api.services.core.cj) -> b
    byte[] d(com.amap.api.services.core.cj) -> d
    byte[] e(com.amap.api.services.core.cj) -> e
    com.amap.api.services.core.cl b(com.amap.api.services.core.cj,boolean) -> b
    void a(com.amap.api.services.core.ai,com.amap.api.services.core.ck) -> a
    void a(com.amap.api.services.core.cl,com.amap.api.services.core.ck) -> a
    void a(com.amap.api.services.core.ci,com.amap.api.services.core.cl,com.amap.api.services.core.ck) -> a
    void a(com.amap.api.services.core.ci,com.amap.api.services.core.ai,com.amap.api.services.core.ck) -> a
com.amap.api.services.core.ci$1 -> com.amap.api.services.core.ci$1:
    com.amap.api.services.core.cj a -> a
    com.amap.api.services.core.ck b -> b
    com.amap.api.services.core.ci c -> c
    void a() -> a
com.amap.api.services.core.ci$a -> com.amap.api.services.core.ci$a:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.core.cj -> com.amap.api.services.core.cj:
    int e -> e
    int f -> f
    java.net.Proxy g -> g
    java.lang.String n() -> n
    byte[] o() -> o
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String g() -> g
    void c(int) -> c
    void d(int) -> d
    byte[] f() -> f
    void a(java.net.Proxy) -> a
com.amap.api.services.core.ck -> com.amap.api.services.core.ck:
    void a() -> a
    void a(java.util.Map,byte[]) -> a
    void a(com.amap.api.services.core.ai) -> a
com.amap.api.services.core.cl -> com.amap.api.services.core.cl:
    byte[] a -> a
    java.util.Map b -> b
com.amap.api.services.core.cm -> com.amap.api.services.core.cm:
    com.amap.api.services.core.cg a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.amap.api.services.core.cn -> com.amap.api.services.core.cn:
    com.amap.api.services.core.ai a -> a
    com.amap.api.services.core.ck b -> b
com.amap.api.services.core.co -> com.amap.api.services.core.co:
    com.amap.api.services.core.co a -> a
    java.util.concurrent.ExecutorService b -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    com.amap.api.services.core.cp$a d -> d
    com.amap.api.services.core.co a(int) -> a
    void a(com.amap.api.services.core.cp,boolean) -> a
    void a(com.amap.api.services.core.co,com.amap.api.services.core.cp,boolean) -> a
com.amap.api.services.core.cp -> com.amap.api.services.core.cp:
    com.amap.api.services.core.cp$a d -> d
    void run() -> run
    void a() -> a
com.amap.api.services.core.cp$a -> com.amap.api.services.core.cp$a:
    void a(com.amap.api.services.core.cp) -> a
    void b(com.amap.api.services.core.cp) -> b
com.amap.api.services.core.cq -> com.amap.api.services.core.cq:
    com.amap.api.services.core.co a -> a
    void a(com.amap.api.services.core.cp) -> a
    void b(com.amap.api.services.core.cp) -> b
com.amap.api.services.core.d -> com.amap.api.services.core.d:
    int h -> h
    java.util.List i -> i
    java.util.List j -> j
    java.lang.Object h() -> h
    int i() -> i
    java.lang.String g() -> g
    java.util.ArrayList d(java.lang.String) -> d
    java.util.List j() -> j
    java.util.List k() -> k
    java.lang.String e() -> e
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.e -> com.amap.api.services.core.e:
    com.amap.api.services.cloud.CloudItemDetail a(org.json.JSONObject) -> a
    java.util.Map c() -> c
    void a(com.amap.api.services.cloud.CloudItem,org.json.JSONObject) -> a
    boolean d(java.lang.String) -> d
com.amap.api.services.core.f -> com.amap.api.services.core.f:
    java.lang.String g() -> g
    com.amap.api.services.cloud.CloudItemDetail e(java.lang.String) -> e
    com.amap.api.services.cloud.CloudItemDetail b(org.json.JSONObject) -> b
    java.lang.String e() -> e
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.g -> com.amap.api.services.core.g:
    int h -> h
    int i -> i
    int j -> j
    void a(int) -> a
    void b(int) -> b
    int h() -> h
    int i() -> i
    com.amap.api.services.cloud.CloudSearch$Query j() -> j
    com.amap.api.services.cloud.CloudSearch$SearchBound k() -> k
    java.lang.String g() -> g
    java.util.ArrayList e(java.lang.String) -> e
    java.util.ArrayList b(org.json.JSONObject) -> b
    java.lang.String e() -> e
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.h -> com.amap.api.services.core.h:
    java.lang.String[] a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.amap.api.services.core.ar a(boolean) -> a
    com.amap.api.services.core.ar b(boolean) -> b
com.amap.api.services.core.i -> com.amap.api.services.core.i:
    boolean a(java.lang.String) -> a
    double a(int) -> a
    void b(java.lang.String) -> b
    double a(double) -> a
    java.lang.String a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.Date c(java.lang.String) -> c
    java.lang.String a(java.util.Date) -> a
    java.util.Date d(java.lang.String) -> d
    java.lang.String a(java.util.List) -> a
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
com.amap.api.services.core.j -> com.amap.api.services.core.j:
    java.lang.String e() -> e
    com.amap.api.services.district.DistrictResult d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.k -> com.amap.api.services.core.k:
    java.lang.String e() -> e
    com.amap.api.services.route.DriveRouteResult d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.l -> com.amap.api.services.core.l:
    java.util.ArrayList d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.String e() -> e
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.m -> com.amap.api.services.core.m:
    java.util.ArrayList d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.String e() -> e
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.n -> com.amap.api.services.core.n:
    java.util.ArrayList a(org.json.JSONObject,boolean) -> a
    java.util.ArrayList a(org.json.JSONObject) -> a
    java.util.ArrayList b(org.json.JSONObject) -> b
    java.util.ArrayList c(org.json.JSONObject) -> c
    com.amap.api.services.core.PoiItem d(org.json.JSONObject) -> d
    com.amap.api.services.poisearch.SubPoiItem w(org.json.JSONObject) -> w
    java.util.ArrayList e(org.json.JSONObject) -> e
    com.amap.api.services.busline.BusStationItem f(org.json.JSONObject) -> f
    com.amap.api.services.busline.BusStationItem g(org.json.JSONObject) -> g
    com.amap.api.services.busline.BusLineItem h(org.json.JSONObject) -> h
    java.util.ArrayList i(org.json.JSONObject) -> i
    com.amap.api.services.busline.BusLineItem j(org.json.JSONObject) -> j
    com.amap.api.services.district.DistrictItem k(org.json.JSONObject) -> k
    void a(org.json.JSONArray,java.util.ArrayList,com.amap.api.services.district.DistrictItem) -> a
    java.util.ArrayList l(org.json.JSONObject) -> l
    java.util.ArrayList m(org.json.JSONObject) -> m
    void a(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> a
    void b(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> b
    void a(org.json.JSONObject,com.amap.api.services.geocoder.RegeocodeAddress) -> a
    java.util.List n(org.json.JSONObject) -> n
    com.amap.api.services.route.BusRouteResult a(java.lang.String) -> a
    java.util.List a(org.json.JSONArray) -> a
    com.amap.api.services.route.BusStep o(org.json.JSONObject) -> o
    com.amap.api.services.route.RouteBusWalkItem p(org.json.JSONObject) -> p
    java.util.List q(org.json.JSONObject) -> q
    com.amap.api.services.route.Doorway r(org.json.JSONObject) -> r
    com.amap.api.services.route.WalkStep s(org.json.JSONObject) -> s
    com.amap.api.services.route.RouteBusLineItem t(org.json.JSONObject) -> t
    java.util.List u(org.json.JSONObject) -> u
    com.amap.api.services.busline.BusStationItem v(org.json.JSONObject) -> v
    com.amap.api.services.route.DriveRouteResult b(java.lang.String) -> b
    void a(com.amap.api.services.route.DriveStep,org.json.JSONObject) -> a
    void a(com.amap.api.services.route.RouteSearchCity,org.json.JSONObject) -> a
    com.amap.api.services.route.WalkRouteResult c(java.lang.String) -> c
    com.amap.api.services.weather.LocalWeatherLive d(java.lang.String) -> d
    com.amap.api.services.weather.LocalWeatherForecast e(java.lang.String) -> e
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    com.amap.api.services.core.LatLonPoint b(org.json.JSONObject,java.lang.String) -> b
    java.util.ArrayList c(org.json.JSONObject,java.lang.String) -> c
    java.util.ArrayList f(java.lang.String) -> f
    com.amap.api.services.core.LatLonPoint g(java.lang.String) -> g
    boolean h(java.lang.String) -> h
    boolean i(java.lang.String) -> i
    int j(java.lang.String) -> j
    float k(java.lang.String) -> k
    double l(java.lang.String) -> l
    long m(java.lang.String) -> m
    boolean n(java.lang.String) -> n
    com.amap.api.services.poisearch.IndoorData d(org.json.JSONObject,java.lang.String) -> d
    void c(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> c
com.amap.api.services.core.o -> com.amap.api.services.core.o:
    com.amap.api.services.core.LatLonPoint a(android.os.Parcel) -> a
    com.amap.api.services.core.LatLonPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.p -> com.amap.api.services.core.p:
    com.amap.api.services.core.LatLonSharePoint a(android.os.Parcel) -> a
    com.amap.api.services.core.LatLonSharePoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.q -> com.amap.api.services.core.q:
    com.amap.api.services.core.q b -> b
    android.content.Context c -> c
    com.amap.api.services.core.ar a -> a
    com.amap.api.services.core.q$a d -> d
    android.os.HandlerThread e -> e
    com.amap.api.services.core.q a(android.content.Context) -> a
    android.content.Context a() -> a
    com.amap.api.services.core.q$a a(com.amap.api.services.core.q) -> a
com.amap.api.services.core.q$a -> com.amap.api.services.core.q$a:
    java.lang.String a -> a
    com.amap.api.services.core.q b -> b
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.core.r -> com.amap.api.services.core.r:
    com.amap.api.services.core.q a -> a
    void run() -> run
com.amap.api.services.core.s -> com.amap.api.services.core.s:
    boolean a -> a
    boolean b -> b
    boolean a() -> a
com.amap.api.services.core.t -> com.amap.api.services.core.t:
    com.amap.api.services.core.t a -> a
    com.amap.api.services.core.t a() -> a
    void handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    void e(android.os.Message) -> e
    void f(android.os.Message) -> f
    void g(android.os.Message) -> g
    void h(android.os.Message) -> h
    void i(android.os.Message) -> i
    void j(android.os.Message) -> j
    void k(android.os.Message) -> k
    void l(android.os.Message) -> l
    void m(android.os.Message) -> m
com.amap.api.services.core.t$a -> com.amap.api.services.core.t$a:
    com.amap.api.services.busline.BusLineResult a -> a
    com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener b -> b
com.amap.api.services.core.t$b -> com.amap.api.services.core.t$b:
    com.amap.api.services.busline.BusStationResult a -> a
    com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener b -> b
com.amap.api.services.core.t$c -> com.amap.api.services.core.t$c:
    com.amap.api.services.cloud.CloudItemDetail a -> a
    com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener b -> b
com.amap.api.services.core.t$d -> com.amap.api.services.core.t$d:
    com.amap.api.services.cloud.CloudResult a -> a
    com.amap.api.services.cloud.CloudSearch$OnCloudSearchListener b -> b
com.amap.api.services.core.t$e -> com.amap.api.services.core.t$e:
    com.amap.api.services.geocoder.GeocodeResult a -> a
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener b -> b
com.amap.api.services.core.t$f -> com.amap.api.services.core.t$f:
    java.util.List a -> a
    com.amap.api.services.nearby.NearbySearchResult b -> b
com.amap.api.services.core.t$g -> com.amap.api.services.core.t$g:
    com.amap.api.services.core.PoiItem a -> a
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener b -> b
com.amap.api.services.core.t$h -> com.amap.api.services.core.t$h:
    com.amap.api.services.poisearch.PoiResult a -> a
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener b -> b
com.amap.api.services.core.t$i -> com.amap.api.services.core.t$i:
    com.amap.api.services.geocoder.RegeocodeResult a -> a
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener b -> b
com.amap.api.services.core.t$j -> com.amap.api.services.core.t$j:
    com.amap.api.services.weather.LocalWeatherForecastResult a -> a
    com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener b -> b
com.amap.api.services.core.t$k -> com.amap.api.services.core.t$k:
    com.amap.api.services.weather.LocalWeatherLiveResult a -> a
    com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener b -> b
com.amap.api.services.core.u -> com.amap.api.services.core.u:
    android.content.Context h -> h
    java.lang.String i -> i
    java.lang.String e() -> e
    java.lang.Integer d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.v -> com.amap.api.services.core.v:
    android.content.Context h -> h
    com.amap.api.services.nearby.NearbySearch$NearbyQuery i -> i
    java.lang.String e() -> e
    com.amap.api.services.nearby.NearbySearchResult d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.w -> com.amap.api.services.core.w:
    android.content.Context h -> h
    com.amap.api.services.nearby.UploadInfo i -> i
    java.lang.String e() -> e
    java.lang.Integer d(java.lang.String) -> d
    java.lang.String g() -> g
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.core.x -> com.amap.api.services.core.x:
    com.amap.api.services.core.PoiItem a(android.os.Parcel) -> a
    com.amap.api.services.core.PoiItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.y -> com.amap.api.services.core.y:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.amap.api.services.core.z -> com.amap.api.services.core.z:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.services.district.DistrictItem -> com.amap.api.services.district.DistrictItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.amap.api.services.core.LatLonPoint d -> d
    java.lang.String e -> e
    java.util.List f -> f
    java.lang.String[] g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setDistrictBoundary(java.lang.String[]) -> setDistrictBoundary
    java.lang.String[] districtBoundary() -> districtBoundary
    java.lang.String getCitycode() -> getCitycode
    void setCitycode(java.lang.String) -> setCitycode
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amap.api.services.core.LatLonPoint getCenter() -> getCenter
    void setCenter(com.amap.api.services.core.LatLonPoint) -> setCenter
    java.lang.String getLevel() -> getLevel
    void setLevel(java.lang.String) -> setLevel
    java.util.List getSubDistrict() -> getSubDistrict
    void setSubDistrict(java.util.ArrayList) -> setSubDistrict
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.services.district.DistrictResult -> com.amap.api.services.district.DistrictResult:
    com.amap.api.services.district.DistrictSearchQuery a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.amap.api.services.core.AMapException d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList getDistrict() -> getDistrict
    void setDistrict(java.util.ArrayList) -> setDistrict
    com.amap.api.services.district.DistrictSearchQuery getQuery() -> getQuery
    void setQuery(com.amap.api.services.district.DistrictSearchQuery) -> setQuery
    int getPageCount() -> getPageCount
    void setPageCount(int) -> setPageCount
    com.amap.api.services.core.AMapException getAMapException() -> getAMapException
    void setAMapException(com.amap.api.services.core.AMapException) -> setAMapException
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.services.district.DistrictSearch -> com.amap.api.services.district.DistrictSearch:
    android.content.Context a -> a
    com.amap.api.services.district.DistrictSearchQuery b -> b
    com.amap.api.services.district.DistrictSearch$OnDistrictSearchListener c -> c
    com.amap.api.services.district.DistrictSearchQuery d -> d
    int e -> e
    java.util.HashMap f -> f
    android.os.Handler g -> g
    void a(com.amap.api.services.district.DistrictResult) -> a
    com.amap.api.services.district.DistrictSearchQuery getQuery() -> getQuery
    void setQuery(com.amap.api.services.district.DistrictSearchQuery) -> setQuery
    boolean a() -> a
    com.amap.api.services.district.DistrictResult getPageLocal(int) -> getPageLocal
    boolean a(int) -> a
    com.amap.api.services.district.DistrictResult b() -> b
    void searchDistrictAsyn() -> searchDistrictAsyn
    void searchDistrictAnsy() -> searchDistrictAnsy
    void setOnDistrictSearchListener(com.amap.api.services.district.DistrictSearch$OnDistrictSearchListener) -> setOnDistrictSearchListener
    com.amap.api.services.district.DistrictSearchQuery a(com.amap.api.services.district.DistrictSearch) -> a
    com.amap.api.services.district.DistrictResult b(com.amap.api.services.district.DistrictSearch) -> b
    com.amap.api.services.district.DistrictSearch$OnDistrictSearchListener c(com.amap.api.services.district.DistrictSearch) -> c
    android.os.Handler d(com.amap.api.services.district.DistrictSearch) -> d
com.amap.api.services.district.DistrictSearch$1 -> com.amap.api.services.district.DistrictSearch$1:
    com.amap.api.services.district.DistrictSearch a -> a
    void run() -> run
com.amap.api.services.district.DistrictSearch$OnDistrictSearchListener -> com.amap.api.services.district.DistrictSearch$OnDistrictSearchListener:
    void onDistrictSearched(com.amap.api.services.district.DistrictResult) -> onDistrictSearched
com.amap.api.services.district.DistrictSearchQuery -> com.amap.api.services.district.DistrictSearchQuery:
    java.lang.String KEYWORDS_COUNTRY -> KEYWORDS_COUNTRY
    java.lang.String KEYWORDS_PROVINCE -> KEYWORDS_PROVINCE
    java.lang.String KEYWORDS_CITY -> KEYWORDS_CITY
    java.lang.String KEYWORDS_DISTRICT -> KEYWORDS_DISTRICT
    java.lang.String KEYWORDS_BUSINESS -> KEYWORDS_BUSINESS
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    boolean f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setShowBoundary(boolean) -> setShowBoundary
    boolean isShowBoundary() -> isShowBoundary
    int getPageNum() -> getPageNum
    void setPageNum(int) -> setPageNum
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
    java.lang.String getKeywordsLevel() -> getKeywordsLevel
    void setKeywordsLevel(java.lang.String) -> setKeywordsLevel
    boolean isShowChild() -> isShowChild
    void setShowChild(boolean) -> setShowChild
    boolean checkLevels() -> checkLevels
    boolean checkKeyWords() -> checkKeyWords
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean weakEquals(com.amap.api.services.district.DistrictSearchQuery) -> weakEquals
    com.amap.api.services.district.DistrictSearchQuery clone() -> clone
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.services.district.a -> com.amap.api.services.district.a:
    com.amap.api.services.district.DistrictItem a(android.os.Parcel) -> a
    com.amap.api.services.district.DistrictItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.district.b -> com.amap.api.services.district.b:
    com.amap.api.services.district.DistrictResult a -> a
    com.amap.api.services.district.DistrictResult a(android.os.Parcel) -> a
    com.amap.api.services.district.DistrictResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.district.c -> com.amap.api.services.district.c:
    com.amap.api.services.district.DistrictSearchQuery a(android.os.Parcel) -> a
    com.amap.api.services.district.DistrictSearchQuery[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.AoiItem -> com.amap.api.services.geocoder.AoiItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.amap.api.services.core.LatLonPoint d -> d
    java.lang.Float e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAoiId() -> getAoiId
    java.lang.String getAoiName() -> getAoiName
    java.lang.String getAdCode() -> getAdCode
    com.amap.api.services.core.LatLonPoint getAoiCenterPoint() -> getAoiCenterPoint
    java.lang.Float getAoiArea() -> getAoiArea
    void setId(java.lang.String) -> setId
    void setName(java.lang.String) -> setName
    void setAdcode(java.lang.String) -> setAdcode
    void setLocation(com.amap.api.services.core.LatLonPoint) -> setLocation
    void setArea(java.lang.Float) -> setArea
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.BusinessArea -> com.amap.api.services.geocoder.BusinessArea:
    com.amap.api.services.core.LatLonPoint a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getCenterPoint() -> getCenterPoint
    void setCenterPoint(com.amap.api.services.core.LatLonPoint) -> setCenterPoint
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.GeocodeAddress -> com.amap.api.services.geocoder.GeocodeAddress:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.amap.api.services.core.LatLonPoint i -> i
    java.lang.String j -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getFormatAddress() -> getFormatAddress
    void setFormatAddress(java.lang.String) -> setFormatAddress
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getTownship() -> getTownship
    void setTownship(java.lang.String) -> setTownship
    java.lang.String getNeighborhood() -> getNeighborhood
    void setNeighborhood(java.lang.String) -> setNeighborhood
    java.lang.String getBuilding() -> getBuilding
    void setBuilding(java.lang.String) -> setBuilding
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getLevel() -> getLevel
    void setLevel(java.lang.String) -> setLevel
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.GeocodeQuery -> com.amap.api.services.geocoder.GeocodeQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getLocationName() -> getLocationName
    void setLocationName(java.lang.String) -> setLocationName
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.geocoder.GeocodeResult -> com.amap.api.services.geocoder.GeocodeResult:
    com.amap.api.services.geocoder.GeocodeQuery a -> a
    java.util.List b -> b
    com.amap.api.services.geocoder.GeocodeQuery getGeocodeQuery() -> getGeocodeQuery
    void setGeocodeQuery(com.amap.api.services.geocoder.GeocodeQuery) -> setGeocodeQuery
    java.util.List getGeocodeAddressList() -> getGeocodeAddressList
    void setGeocodeAddressList(java.util.List) -> setGeocodeAddressList
com.amap.api.services.geocoder.GeocodeSearch -> com.amap.api.services.geocoder.GeocodeSearch:
    java.lang.String GPS -> GPS
    java.lang.String AMAP -> AMAP
    android.content.Context a -> a
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener b -> b
    android.os.Handler c -> c
    com.amap.api.services.geocoder.RegeocodeAddress getFromLocation(com.amap.api.services.geocoder.RegeocodeQuery) -> getFromLocation
    java.util.List getFromLocationName(com.amap.api.services.geocoder.GeocodeQuery) -> getFromLocationName
    void setOnGeocodeSearchListener(com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener) -> setOnGeocodeSearchListener
    void getFromLocationAsyn(com.amap.api.services.geocoder.RegeocodeQuery) -> getFromLocationAsyn
    void getFromLocationNameAsyn(com.amap.api.services.geocoder.GeocodeQuery) -> getFromLocationNameAsyn
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener a(com.amap.api.services.geocoder.GeocodeSearch) -> a
    android.os.Handler b(com.amap.api.services.geocoder.GeocodeSearch) -> b
com.amap.api.services.geocoder.GeocodeSearch$1 -> com.amap.api.services.geocoder.GeocodeSearch$1:
    com.amap.api.services.geocoder.RegeocodeQuery a -> a
    com.amap.api.services.geocoder.GeocodeSearch b -> b
    void run() -> run
com.amap.api.services.geocoder.GeocodeSearch$2 -> com.amap.api.services.geocoder.GeocodeSearch$2:
    com.amap.api.services.geocoder.GeocodeQuery a -> a
    com.amap.api.services.geocoder.GeocodeSearch b -> b
    void run() -> run
com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener -> com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener:
    void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult,int) -> onRegeocodeSearched
    void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult,int) -> onGeocodeSearched
com.amap.api.services.geocoder.RegeocodeAddress -> com.amap.api.services.geocoder.RegeocodeAddress:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.amap.api.services.geocoder.StreetNumber h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.List k -> k
    java.util.List l -> l
    java.util.List m -> m
    java.util.List n -> n
    java.util.List o -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getFormatAddress() -> getFormatAddress
    void setFormatAddress(java.lang.String) -> setFormatAddress
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getTownship() -> getTownship
    void setTownship(java.lang.String) -> setTownship
    java.lang.String getNeighborhood() -> getNeighborhood
    void setNeighborhood(java.lang.String) -> setNeighborhood
    java.lang.String getBuilding() -> getBuilding
    void setBuilding(java.lang.String) -> setBuilding
    com.amap.api.services.geocoder.StreetNumber getStreetNumber() -> getStreetNumber
    void setStreetNumber(com.amap.api.services.geocoder.StreetNumber) -> setStreetNumber
    java.util.List getRoads() -> getRoads
    void setRoads(java.util.List) -> setRoads
    java.util.List getPois() -> getPois
    void setPois(java.util.List) -> setPois
    java.util.List getCrossroads() -> getCrossroads
    void setCrossroads(java.util.List) -> setCrossroads
    java.util.List getBusinessAreas() -> getBusinessAreas
    void setBusinessAreas(java.util.List) -> setBusinessAreas
    java.util.List getAois() -> getAois
    void setAois(java.util.List) -> setAois
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.RegeocodeQuery -> com.amap.api.services.geocoder.RegeocodeQuery:
    com.amap.api.services.core.LatLonPoint a -> a
    float b -> b
    java.lang.String c -> c
    com.amap.api.services.core.LatLonPoint getPoint() -> getPoint
    void setPoint(com.amap.api.services.core.LatLonPoint) -> setPoint
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getLatLonType() -> getLatLonType
    void setLatLonType(java.lang.String) -> setLatLonType
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.geocoder.RegeocodeResult -> com.amap.api.services.geocoder.RegeocodeResult:
    com.amap.api.services.geocoder.RegeocodeQuery a -> a
    com.amap.api.services.geocoder.RegeocodeAddress b -> b
    com.amap.api.services.geocoder.RegeocodeQuery getRegeocodeQuery() -> getRegeocodeQuery
    void setRegeocodeQuery(com.amap.api.services.geocoder.RegeocodeQuery) -> setRegeocodeQuery
    com.amap.api.services.geocoder.RegeocodeAddress getRegeocodeAddress() -> getRegeocodeAddress
    void setRegeocodeAddress(com.amap.api.services.geocoder.RegeocodeAddress) -> setRegeocodeAddress
com.amap.api.services.geocoder.RegeocodeRoad -> com.amap.api.services.geocoder.RegeocodeRoad:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    java.lang.String d -> d
    com.amap.api.services.core.LatLonPoint e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    com.amap.api.services.core.LatLonPoint getLatLngPoint() -> getLatLngPoint
    void setLatLngPoint(com.amap.api.services.core.LatLonPoint) -> setLatLngPoint
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.StreetNumber -> com.amap.api.services.geocoder.StreetNumber:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.core.LatLonPoint c -> c
    java.lang.String d -> d
    float e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getStreet() -> getStreet
    void setStreet(java.lang.String) -> setStreet
    java.lang.String getNumber() -> getNumber
    void setNumber(java.lang.String) -> setNumber
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.a -> com.amap.api.services.geocoder.a:
    com.amap.api.services.geocoder.AoiItem a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.AoiItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.b -> com.amap.api.services.geocoder.b:
    com.amap.api.services.geocoder.BusinessArea a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.BusinessArea[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.c -> com.amap.api.services.geocoder.c:
    com.amap.api.services.geocoder.GeocodeAddress[] a(int) -> a
    com.amap.api.services.geocoder.GeocodeAddress a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.d -> com.amap.api.services.geocoder.d:
    com.amap.api.services.geocoder.RegeocodeAddress a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.RegeocodeAddress[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.e -> com.amap.api.services.geocoder.e:
    com.amap.api.services.geocoder.RegeocodeRoad a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.RegeocodeRoad[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.f -> com.amap.api.services.geocoder.f:
    com.amap.api.services.geocoder.StreetNumber a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.StreetNumber[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.help.Inputtips -> com.amap.api.services.help.Inputtips:
    android.content.Context a -> a
    com.amap.api.services.help.Inputtips$InputtipsListener b -> b
    android.os.Handler c -> c
    com.amap.api.services.help.InputtipsQuery d -> d
    com.amap.api.services.help.InputtipsQuery getQuery() -> getQuery
    void setQuery(com.amap.api.services.help.InputtipsQuery) -> setQuery
    void setInputtipsListener(com.amap.api.services.help.Inputtips$InputtipsListener) -> setInputtipsListener
    void requestInputtipsAsyn() -> requestInputtipsAsyn
    java.util.ArrayList a(com.amap.api.services.help.InputtipsQuery) -> a
    void requestInputtips(java.lang.String,java.lang.String) -> requestInputtips
    void requestInputtips(java.lang.String,java.lang.String,java.lang.String) -> requestInputtips
    com.amap.api.services.help.Inputtips$InputtipsListener a(com.amap.api.services.help.Inputtips) -> a
    com.amap.api.services.help.InputtipsQuery b(com.amap.api.services.help.Inputtips) -> b
    java.util.ArrayList a(com.amap.api.services.help.Inputtips,com.amap.api.services.help.InputtipsQuery) -> a
    android.os.Handler c(com.amap.api.services.help.Inputtips) -> c
    android.content.Context d(com.amap.api.services.help.Inputtips) -> d
com.amap.api.services.help.Inputtips$1 -> com.amap.api.services.help.Inputtips$1:
    com.amap.api.services.help.Inputtips a -> a
    void run() -> run
com.amap.api.services.help.Inputtips$2 -> com.amap.api.services.help.Inputtips$2:
    com.amap.api.services.help.InputtipsQuery a -> a
    com.amap.api.services.help.Inputtips b -> b
    void run() -> run
com.amap.api.services.help.Inputtips$InputtipsListener -> com.amap.api.services.help.Inputtips$InputtipsListener:
    void onGetInputtips(java.util.List,int) -> onGetInputtips
com.amap.api.services.help.InputtipsQuery -> com.amap.api.services.help.InputtipsQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.lang.String d -> d
    java.lang.String getKeyword() -> getKeyword
    java.lang.String getCity() -> getCity
    void setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    void setCityLimit(boolean) -> setCityLimit
    boolean getCityLimit() -> getCityLimit
com.amap.api.services.help.Tip -> com.amap.api.services.help.Tip:
    java.lang.String a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPoiID() -> getPoiID
    void setID(java.lang.String) -> setID
    com.amap.api.services.core.LatLonPoint getPoint() -> getPoint
    void setPostion(com.amap.api.services.core.LatLonPoint) -> setPostion
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.help.a -> com.amap.api.services.help.a:
    com.amap.api.services.help.Tip a(android.os.Parcel) -> a
    com.amap.api.services.help.Tip[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.nearby.NearbyInfo -> com.amap.api.services.nearby.NearbyInfo:
    java.lang.String a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    long c -> c
    int d -> d
    int e -> e
    void setUserID(java.lang.String) -> setUserID
    java.lang.String getUserID() -> getUserID
    com.amap.api.services.core.LatLonPoint getPoint() -> getPoint
    void setPoint(com.amap.api.services.core.LatLonPoint) -> setPoint
    void setTimeStamp(long) -> setTimeStamp
    long getTimeStamp() -> getTimeStamp
    void setDistance(int) -> setDistance
    int getDistance() -> getDistance
    void setDrivingDistance(int) -> setDrivingDistance
    int getDrivingDistance() -> getDrivingDistance
com.amap.api.services.nearby.NearbySearch -> com.amap.api.services.nearby.NearbySearch:
    int GPS -> GPS
    int AMAP -> AMAP
    com.amap.api.services.nearby.NearbySearch a -> a
    java.util.List b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    com.amap.api.services.core.t e -> e
    long f -> f
    java.util.concurrent.ExecutorService g -> g
    com.amap.api.services.core.LatLonPoint h -> h
    java.lang.String i -> i
    boolean j -> j
    java.util.Timer k -> k
    com.amap.api.services.nearby.UploadInfoCallback l -> l
    java.util.TimerTask m -> m
    com.amap.api.services.nearby.NearbySearch getInstance(android.content.Context) -> getInstance
    void addNearbyListener(com.amap.api.services.nearby.NearbySearch$NearbyListener) -> addNearbyListener
    void removeNearbyListener(com.amap.api.services.nearby.NearbySearch$NearbyListener) -> removeNearbyListener
    void clearUserInfoAsyn() -> clearUserInfoAsyn
    int b() -> b
    void setUserID(java.lang.String) -> setUserID
    void startUploadNearbyInfoAuto(com.amap.api.services.nearby.UploadInfoCallback,int) -> startUploadNearbyInfoAuto
    void stopUploadNearbyInfoAuto() -> stopUploadNearbyInfoAuto
    int a(com.amap.api.services.nearby.UploadInfo) -> a
    boolean a(java.lang.String) -> a
    int b(com.amap.api.services.nearby.UploadInfo) -> b
    void uploadNearbyInfoAsyn(com.amap.api.services.nearby.UploadInfo) -> uploadNearbyInfoAsyn
    void searchNearbyInfoAsyn(com.amap.api.services.nearby.NearbySearch$NearbyQuery) -> searchNearbyInfoAsyn
    com.amap.api.services.nearby.NearbySearchResult searchNearbyInfo(com.amap.api.services.nearby.NearbySearch$NearbyQuery) -> searchNearbyInfo
    void destroy() -> destroy
    void c() -> c
    com.amap.api.services.core.t a(com.amap.api.services.nearby.NearbySearch) -> a
    java.util.List b(com.amap.api.services.nearby.NearbySearch) -> b
    int c(com.amap.api.services.nearby.NearbySearch) -> c
    int a(com.amap.api.services.nearby.NearbySearch,com.amap.api.services.nearby.UploadInfo) -> a
    com.amap.api.services.nearby.NearbySearch a() -> a
    com.amap.api.services.nearby.UploadInfoCallback d(com.amap.api.services.nearby.NearbySearch) -> d
    int b(com.amap.api.services.nearby.NearbySearch,com.amap.api.services.nearby.UploadInfo) -> b
com.amap.api.services.nearby.NearbySearch$1 -> com.amap.api.services.nearby.NearbySearch$1:
    com.amap.api.services.nearby.NearbySearch a -> a
    void run() -> run
com.amap.api.services.nearby.NearbySearch$2 -> com.amap.api.services.nearby.NearbySearch$2:
    com.amap.api.services.nearby.UploadInfo a -> a
    com.amap.api.services.nearby.NearbySearch b -> b
    void run() -> run
com.amap.api.services.nearby.NearbySearch$3 -> com.amap.api.services.nearby.NearbySearch$3:
    com.amap.api.services.nearby.NearbySearch$NearbyQuery a -> a
    com.amap.api.services.nearby.NearbySearch b -> b
    void run() -> run
com.amap.api.services.nearby.NearbySearch$NearbyListener -> com.amap.api.services.nearby.NearbySearch$NearbyListener:
    void onUserInfoCleared(int) -> onUserInfoCleared
    void onNearbyInfoSearched(com.amap.api.services.nearby.NearbySearchResult,int) -> onNearbyInfoSearched
    void onNearbyInfoUploaded(int) -> onNearbyInfoUploaded
com.amap.api.services.nearby.NearbySearch$NearbyQuery -> com.amap.api.services.nearby.NearbySearch$NearbyQuery:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.nearby.NearbySearchFunctionType b -> b
    int c -> c
    int d -> d
    int e -> e
    void setCenterPoint(com.amap.api.services.core.LatLonPoint) -> setCenterPoint
    com.amap.api.services.core.LatLonPoint getCenterPoint() -> getCenterPoint
    int getRadius() -> getRadius
    void setRadius(int) -> setRadius
    void setType(com.amap.api.services.nearby.NearbySearchFunctionType) -> setType
    int getType() -> getType
    void setCoordType(int) -> setCoordType
    int getCoordType() -> getCoordType
    void setTimeRange(int) -> setTimeRange
    int getTimeRange() -> getTimeRange
com.amap.api.services.nearby.NearbySearch$a -> com.amap.api.services.nearby.NearbySearch$a:
    void run() -> run
com.amap.api.services.nearby.NearbySearchFunctionType -> com.amap.api.services.nearby.NearbySearchFunctionType:
    com.amap.api.services.nearby.NearbySearchFunctionType DISTANCE_SEARCH -> DISTANCE_SEARCH
    com.amap.api.services.nearby.NearbySearchFunctionType DRIVING_DISTANCE_SEARCH -> DRIVING_DISTANCE_SEARCH
    com.amap.api.services.nearby.NearbySearchFunctionType[] a -> a
    com.amap.api.services.nearby.NearbySearchFunctionType[] values() -> values
    com.amap.api.services.nearby.NearbySearchFunctionType valueOf(java.lang.String) -> valueOf
com.amap.api.services.nearby.NearbySearchResult -> com.amap.api.services.nearby.NearbySearchResult:
    java.util.List a -> a
    int b -> b
    java.util.List getNearbyInfoList() -> getNearbyInfoList
    int getTotalNum() -> getTotalNum
    void setNearbyInfoList(java.util.List) -> setNearbyInfoList
com.amap.api.services.nearby.UploadInfo -> com.amap.api.services.nearby.UploadInfo:
    int a -> a
    java.lang.String b -> b
    com.amap.api.services.core.LatLonPoint c -> c
    void setPoint(com.amap.api.services.core.LatLonPoint) -> setPoint
    com.amap.api.services.core.LatLonPoint getPoint() -> getPoint
    void setUserID(java.lang.String) -> setUserID
    java.lang.String getUserID() -> getUserID
    int getCoordType() -> getCoordType
    void setCoordType(int) -> setCoordType
com.amap.api.services.nearby.UploadInfoCallback -> com.amap.api.services.nearby.UploadInfoCallback:
    com.amap.api.services.nearby.UploadInfo OnUploadInfoCallback() -> OnUploadInfoCallback
com.amap.api.services.nearby.a -> com.amap.api.services.nearby.a:
    int[] a -> a
com.amap.api.services.poisearch.IndoorData -> com.amap.api.services.poisearch.IndoorData:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    int getFloor() -> getFloor
    void setFloor(int) -> setFloor
    java.lang.String getFloorName() -> getFloorName
    void setFloorName(java.lang.String) -> setFloorName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.PoiResult -> com.amap.api.services.poisearch.PoiResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.poisearch.d c -> c
    com.amap.api.services.poisearch.PoiResult a(com.amap.api.services.poisearch.d,java.util.ArrayList) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.poisearch.PoiSearch$Query getQuery() -> getQuery
    com.amap.api.services.poisearch.PoiSearch$SearchBound getBound() -> getBound
    java.util.ArrayList getPois() -> getPois
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCitys() -> getSearchSuggestionCitys
    int a(int) -> a
com.amap.api.services.poisearch.PoiSearch -> com.amap.api.services.poisearch.PoiSearch:
    com.amap.api.services.poisearch.PoiSearch$SearchBound a -> a
    com.amap.api.services.poisearch.PoiSearch$Query b -> b
    android.content.Context c -> c
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener d -> d
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String CHINESE -> CHINESE
    java.lang.String e -> e
    com.amap.api.services.poisearch.PoiSearch$Query f -> f
    com.amap.api.services.poisearch.PoiSearch$SearchBound g -> g
    int h -> h
    java.util.HashMap i -> i
    android.os.Handler j -> j
    void setOnPoiSearchListener(com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener) -> setOnPoiSearchListener
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String getLanguage() -> getLanguage
    boolean a() -> a
    boolean b() -> b
    com.amap.api.services.poisearch.PoiResult searchPOI() -> searchPOI
    void searchPOIAsyn() -> searchPOIAsyn
    com.amap.api.services.core.PoiItem searchPOIId(java.lang.String) -> searchPOIId
    void searchPOIIdAsyn(java.lang.String) -> searchPOIIdAsyn
    void setQuery(com.amap.api.services.poisearch.PoiSearch$Query) -> setQuery
    void setBound(com.amap.api.services.poisearch.PoiSearch$SearchBound) -> setBound
    com.amap.api.services.poisearch.PoiSearch$Query getQuery() -> getQuery
    com.amap.api.services.poisearch.PoiSearch$SearchBound getBound() -> getBound
    boolean b(java.lang.String,java.lang.String) -> b
    void a(com.amap.api.services.poisearch.PoiResult) -> a
    com.amap.api.services.poisearch.PoiResult getPageLocal(int) -> getPageLocal
    boolean a(int) -> a
    android.os.Handler a(com.amap.api.services.poisearch.PoiSearch) -> a
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener b(com.amap.api.services.poisearch.PoiSearch) -> b
    boolean a(java.lang.String,java.lang.String) -> a
com.amap.api.services.poisearch.PoiSearch$1 -> com.amap.api.services.poisearch.PoiSearch$1:
    com.amap.api.services.poisearch.PoiSearch a -> a
    void run() -> run
com.amap.api.services.poisearch.PoiSearch$2 -> com.amap.api.services.poisearch.PoiSearch$2:
    java.lang.String a -> a
    com.amap.api.services.poisearch.PoiSearch b -> b
    void run() -> run
com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener -> com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener:
    void onPoiSearched(com.amap.api.services.poisearch.PoiResult,int) -> onPoiSearched
    void onPoiItemSearched(com.amap.api.services.core.PoiItem,int) -> onPoiItemSearched
com.amap.api.services.poisearch.PoiSearch$Query -> com.amap.api.services.poisearch.PoiSearch$Query:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String getQueryString() -> getQueryString
    void setQueryLanguage(java.lang.String) -> setQueryLanguage
    java.lang.String getQueryLanguage() -> getQueryLanguage
    java.lang.String getCategory() -> getCategory
    java.lang.String a() -> a
    java.lang.String getCity() -> getCity
    int getPageNum() -> getPageNum
    void setPageNum(int) -> setPageNum
    void setPageSize(int) -> setPageSize
    int getPageSize() -> getPageSize
    void setCityLimit(boolean) -> setCityLimit
    boolean getCityLimit() -> getCityLimit
    void requireSubPois(boolean) -> requireSubPois
    boolean isRequireSubPois() -> isRequireSubPois
    boolean queryEquals(com.amap.api.services.poisearch.PoiSearch$Query) -> queryEquals
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.poisearch.PoiSearch$Query clone() -> clone
    java.lang.Object clone() -> clone
    java.lang.String a(com.amap.api.services.poisearch.PoiSearch$Query) -> a
    java.lang.String b(com.amap.api.services.poisearch.PoiSearch$Query) -> b
    int c(com.amap.api.services.poisearch.PoiSearch$Query) -> c
    int d(com.amap.api.services.poisearch.PoiSearch$Query) -> d
com.amap.api.services.poisearch.PoiSearch$SearchBound -> com.amap.api.services.poisearch.PoiSearch$SearchBound:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    int c -> c
    com.amap.api.services.core.LatLonPoint d -> d
    java.lang.String e -> e
    boolean f -> f
    java.util.List g -> g
    java.lang.String BOUND_SHAPE -> BOUND_SHAPE
    java.lang.String POLYGON_SHAPE -> POLYGON_SHAPE
    java.lang.String RECTANGLE_SHAPE -> RECTANGLE_SHAPE
    java.lang.String ELLIPSE_SHAPE -> ELLIPSE_SHAPE
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.services.core.LatLonPoint,double,double) -> a
    com.amap.api.services.core.LatLonPoint getLowerLeft() -> getLowerLeft
    com.amap.api.services.core.LatLonPoint getUpperRight() -> getUpperRight
    com.amap.api.services.core.LatLonPoint getCenter() -> getCenter
    double getLonSpanInMeter() -> getLonSpanInMeter
    double getLatSpanInMeter() -> getLatSpanInMeter
    int getRange() -> getRange
    java.lang.String getShape() -> getShape
    boolean isDistanceSort() -> isDistanceSort
    java.util.List getPolyGonList() -> getPolyGonList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.poisearch.PoiSearch$SearchBound clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.poisearch.SubPoiItem -> com.amap.api.services.poisearch.SubPoiItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    com.amap.api.services.core.LatLonPoint e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getSubName() -> getSubName
    void setSubName(java.lang.String) -> setSubName
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getSnippet() -> getSnippet
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSubTypeDes() -> getSubTypeDes
    void setSubTypeDes(java.lang.String) -> setSubTypeDes
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.a -> com.amap.api.services.poisearch.a:
    com.amap.api.services.poisearch.IndoorData a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.IndoorData[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.b -> com.amap.api.services.poisearch.b:
    boolean d(java.lang.String) -> d
com.amap.api.services.poisearch.c -> com.amap.api.services.poisearch.c:
    java.lang.String g() -> g
    com.amap.api.services.core.PoiItem e(java.lang.String) -> e
    com.amap.api.services.core.PoiItem a(org.json.JSONObject) -> a
    java.lang.String e() -> e
    java.lang.String h() -> h
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.poisearch.d -> com.amap.api.services.poisearch.d:
    int h -> h
    int i -> i
    int j -> j
    java.util.List k -> k
    java.util.List l -> l
    void a(int) -> a
    void b(int) -> b
    int h() -> h
    int i() -> i
    com.amap.api.services.poisearch.PoiSearch$Query j() -> j
    com.amap.api.services.poisearch.PoiSearch$SearchBound k() -> k
    java.util.List l() -> l
    java.util.List m() -> m
    java.lang.String g() -> g
    java.util.ArrayList e(java.lang.String) -> e
    java.lang.String e() -> e
    java.lang.String p() -> p
    java.lang.Object a(java.lang.String) -> a
com.amap.api.services.poisearch.e -> com.amap.api.services.poisearch.e:
    com.amap.api.services.poisearch.SubPoiItem a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.SubPoiItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.road.Crossroad -> com.amap.api.services.road.Crossroad:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    java.lang.String getFirstRoadId() -> getFirstRoadId
    void setFirstRoadId(java.lang.String) -> setFirstRoadId
    java.lang.String getFirstRoadName() -> getFirstRoadName
    void setFirstRoadName(java.lang.String) -> setFirstRoadName
    java.lang.String getSecondRoadId() -> getSecondRoadId
    void setSecondRoadId(java.lang.String) -> setSecondRoadId
    java.lang.String getSecondRoadName() -> getSecondRoadName
    void setSecondRoadName(java.lang.String) -> setSecondRoadName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.road.Road -> com.amap.api.services.road.Road:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    java.lang.String e -> e
    com.amap.api.services.core.LatLonPoint f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setId(java.lang.String) -> setId
    void setName(java.lang.String) -> setName
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    float getRoadWidth() -> getRoadWidth
    void setRoadWidth(float) -> setRoadWidth
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.amap.api.services.core.LatLonPoint getCenterPoint() -> getCenterPoint
    void setCenterPoint(com.amap.api.services.core.LatLonPoint) -> setCenterPoint
    java.lang.String getId() -> getId
    java.lang.String getName() -> getName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.road.a -> com.amap.api.services.road.a:
    com.amap.api.services.road.Crossroad[] a(int) -> a
    com.amap.api.services.road.Crossroad a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.road.b -> com.amap.api.services.road.b:
    com.amap.api.services.road.Road a(android.os.Parcel) -> a
    com.amap.api.services.road.Road[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.BusPath -> com.amap.api.services.route.BusPath:
    float a -> a
    boolean b -> b
    float c -> c
    float d -> d
    java.util.List e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getCost() -> getCost
    void setCost(float) -> setCost
    boolean isNightBus() -> isNightBus
    void setNightBus(boolean) -> setNightBus
    float getDistance() -> getDistance
    float getWalkDistance() -> getWalkDistance
    void setWalkDistance(float) -> setWalkDistance
    float getBusDistance() -> getBusDistance
    void setBusDistance(float) -> setBusDistance
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.BusRouteResult -> com.amap.api.services.route.BusRouteResult:
    float a -> a
    java.util.List b -> b
    com.amap.api.services.route.RouteSearch$BusRouteQuery c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getTaxiCost() -> getTaxiCost
    void setTaxiCost(float) -> setTaxiCost
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$BusRouteQuery getBusQuery() -> getBusQuery
    void setBusQuery(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> setBusQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.BusStep -> com.amap.api.services.route.BusStep:
    com.amap.api.services.route.RouteBusWalkItem a -> a
    java.util.List b -> b
    com.amap.api.services.route.Doorway c -> c
    com.amap.api.services.route.Doorway d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.route.RouteBusWalkItem getWalk() -> getWalk
    void setWalk(com.amap.api.services.route.RouteBusWalkItem) -> setWalk
    com.amap.api.services.route.RouteBusLineItem getBusLine() -> getBusLine
    java.util.List getBusLines() -> getBusLines
    void setBusLine(com.amap.api.services.route.RouteBusLineItem) -> setBusLine
    void setBusLines(java.util.List) -> setBusLines
    com.amap.api.services.route.Doorway getEntrance() -> getEntrance
    void setEntrance(com.amap.api.services.route.Doorway) -> setEntrance
    com.amap.api.services.route.Doorway getExit() -> getExit
    void setExit(com.amap.api.services.route.Doorway) -> setExit
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.District -> com.amap.api.services.route.District:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDistrictName() -> getDistrictName
    void setDistrictName(java.lang.String) -> setDistrictName
    java.lang.String getDistrictAdcode() -> getDistrictAdcode
    void setDistrictAdcode(java.lang.String) -> setDistrictAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.Doorway -> com.amap.api.services.route.Doorway:
    java.lang.String a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DrivePath -> com.amap.api.services.route.DrivePath:
    java.lang.String a -> a
    float b -> b
    float c -> c
    int d -> d
    java.util.List e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getStrategy() -> getStrategy
    void setStrategy(java.lang.String) -> setStrategy
    float getTolls() -> getTolls
    void setTolls(float) -> setTolls
    float getTollDistance() -> getTollDistance
    void setTollDistance(float) -> setTollDistance
    int getTotalTrafficlights() -> getTotalTrafficlights
    void setTotalTrafficlights(int) -> setTotalTrafficlights
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DriveRouteResult -> com.amap.api.services.route.DriveRouteResult:
    float a -> a
    java.util.List b -> b
    com.amap.api.services.route.RouteSearch$DriveRouteQuery c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getTaxiCost() -> getTaxiCost
    void setTaxiCost(float) -> setTaxiCost
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$DriveRouteQuery getDriveQuery() -> getDriveQuery
    void setDriveQuery(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> setDriveQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DriveStep -> com.amap.api.services.route.DriveStep:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    float e -> e
    float f -> f
    java.lang.String g -> g
    float h -> h
    java.util.List i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.util.List l -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getInstruction() -> getInstruction
    void setInstruction(java.lang.String) -> setInstruction
    java.lang.String getOrientation() -> getOrientation
    void setOrientation(java.lang.String) -> setOrientation
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    float getTolls() -> getTolls
    void setTolls(float) -> setTolls
    float getTollDistance() -> getTollDistance
    void setTollDistance(float) -> setTollDistance
    java.lang.String getTollRoad() -> getTollRoad
    void setTollRoad(java.lang.String) -> setTollRoad
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getAssistantAction() -> getAssistantAction
    void setAssistantAction(java.lang.String) -> setAssistantAction
    java.util.List getRouteSearchCityList() -> getRouteSearchCityList
    void setRouteSearchCityList(java.util.List) -> setRouteSearchCityList
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.Path -> com.amap.api.services.route.Path:
    float a -> a
    long b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteBusLineItem -> com.amap.api.services.route.RouteBusLineItem:
    com.amap.api.services.busline.BusStationItem a -> a
    com.amap.api.services.busline.BusStationItem b -> b
    java.util.List c -> c
    int d -> d
    java.util.List e -> e
    float f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.busline.BusStationItem getDepartureBusStation() -> getDepartureBusStation
    void setDepartureBusStation(com.amap.api.services.busline.BusStationItem) -> setDepartureBusStation
    com.amap.api.services.busline.BusStationItem getArrivalBusStation() -> getArrivalBusStation
    void setArrivalBusStation(com.amap.api.services.busline.BusStationItem) -> setArrivalBusStation
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.util.List getPassStations() -> getPassStations
    void setPassStations(java.util.List) -> setPassStations
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.route.RouteBusWalkItem -> com.amap.api.services.route.RouteBusWalkItem:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getOrigin() -> getOrigin
    void setOrigin(com.amap.api.services.core.LatLonPoint) -> setOrigin
    com.amap.api.services.core.LatLonPoint getDestination() -> getDestination
    void setDestination(com.amap.api.services.core.LatLonPoint) -> setDestination
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteResult -> com.amap.api.services.route.RouteResult:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getStartPos() -> getStartPos
    void setStartPos(com.amap.api.services.core.LatLonPoint) -> setStartPos
    com.amap.api.services.core.LatLonPoint getTargetPos() -> getTargetPos
    void setTargetPos(com.amap.api.services.core.LatLonPoint) -> setTargetPos
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteSearch -> com.amap.api.services.route.RouteSearch:
    int BusDefault -> BusDefault
    int BusSaveMoney -> BusSaveMoney
    int BusLeaseChange -> BusLeaseChange
    int BusLeaseWalk -> BusLeaseWalk
    int BusComfortable -> BusComfortable
    int BusNoSubway -> BusNoSubway
    int DrivingDefault -> DrivingDefault
    int DrivingSaveMoney -> DrivingSaveMoney
    int DrivingShortDistance -> DrivingShortDistance
    int DrivingNoExpressways -> DrivingNoExpressways
    int DrivingAvoidCongestion -> DrivingAvoidCongestion
    int DrivingMultiStrategy -> DrivingMultiStrategy
    int DrivingNoHighWay -> DrivingNoHighWay
    int DrivingNoHighWaySaveMoney -> DrivingNoHighWaySaveMoney
    int DrivingSaveMoneyAvoidCongestion -> DrivingSaveMoneyAvoidCongestion
    int DrivingNoHighAvoidCongestionSaveMoney -> DrivingNoHighAvoidCongestionSaveMoney
    int WalkDefault -> WalkDefault
    int WalkMultipath -> WalkMultipath
    com.amap.api.services.route.RouteSearch$OnRouteSearchListener a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    void setRouteSearchListener(com.amap.api.services.route.RouteSearch$OnRouteSearchListener) -> setRouteSearchListener
    com.amap.api.services.route.WalkRouteResult calculateWalkRoute(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> calculateWalkRoute
    void calculateWalkRouteAsyn(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> calculateWalkRouteAsyn
    com.amap.api.services.route.BusRouteResult calculateBusRoute(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> calculateBusRoute
    void calculateBusRouteAsyn(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> calculateBusRouteAsyn
    com.amap.api.services.route.DriveRouteResult calculateDriveRoute(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> calculateDriveRoute
    void calculateDriveRouteAsyn(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> calculateDriveRouteAsyn
    com.amap.api.services.route.RouteSearch$OnRouteSearchListener a(com.amap.api.services.route.RouteSearch) -> a
    android.os.Handler b(com.amap.api.services.route.RouteSearch) -> b
com.amap.api.services.route.RouteSearch$1 -> com.amap.api.services.route.RouteSearch$1:
    com.amap.api.services.route.RouteSearch$WalkRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$2 -> com.amap.api.services.route.RouteSearch$2:
    com.amap.api.services.route.RouteSearch$BusRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$3 -> com.amap.api.services.route.RouteSearch$3:
    com.amap.api.services.route.RouteSearch$DriveRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$BusRouteQuery -> com.amap.api.services.route.RouteSearch$BusRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    java.lang.String getCity() -> getCity
    int getNightFlag() -> getNightFlag
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$BusRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$DriveRouteQuery -> com.amap.api.services.route.RouteSearch$DriveRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    java.util.List getPassedByPoints() -> getPassedByPoints
    java.util.List getAvoidpolygons() -> getAvoidpolygons
    java.lang.String getAvoidRoad() -> getAvoidRoad
    java.lang.String getPassedPointStr() -> getPassedPointStr
    boolean hasPassPoint() -> hasPassPoint
    java.lang.String getAvoidpolygonsStr() -> getAvoidpolygonsStr
    boolean hasAvoidpolygons() -> hasAvoidpolygons
    boolean hasAvoidRoad() -> hasAvoidRoad
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$DriveRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$FromAndTo -> com.amap.api.services.route.RouteSearch$FromAndTo:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getFrom() -> getFrom
    com.amap.api.services.core.LatLonPoint getTo() -> getTo
    java.lang.String getStartPoiID() -> getStartPoiID
    void setStartPoiID(java.lang.String) -> setStartPoiID
    java.lang.String getDestinationPoiID() -> getDestinationPoiID
    void setDestinationPoiID(java.lang.String) -> setDestinationPoiID
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$FromAndTo clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$OnRouteSearchListener -> com.amap.api.services.route.RouteSearch$OnRouteSearchListener:
    void onBusRouteSearched(com.amap.api.services.route.BusRouteResult,int) -> onBusRouteSearched
    void onDriveRouteSearched(com.amap.api.services.route.DriveRouteResult,int) -> onDriveRouteSearched
    void onWalkRouteSearched(com.amap.api.services.route.WalkRouteResult,int) -> onWalkRouteSearched
com.amap.api.services.route.RouteSearch$WalkRouteQuery -> com.amap.api.services.route.RouteSearch$WalkRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$WalkRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearchCity -> com.amap.api.services.route.RouteSearchCity:
    java.util.List a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDistricts() -> getDistricts
    void setDistricts(java.util.List) -> setDistricts
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.SearchCity -> com.amap.api.services.route.SearchCity:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSearchCityName() -> getSearchCityName
    void setSearchCityName(java.lang.String) -> setSearchCityName
    java.lang.String getSearchCitycode() -> getSearchCitycode
    void setSearchCitycode(java.lang.String) -> setSearchCitycode
    java.lang.String getSearchCityAdCode() -> getSearchCityAdCode
    void setSearchCityhAdCode(java.lang.String) -> setSearchCityhAdCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkPath -> com.amap.api.services.route.WalkPath:
    java.util.List a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkRouteResult -> com.amap.api.services.route.WalkRouteResult:
    java.util.List a -> a
    com.amap.api.services.route.RouteSearch$WalkRouteQuery b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$WalkRouteQuery getWalkQuery() -> getWalkQuery
    void setWalkQuery(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> setWalkQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkStep -> com.amap.api.services.route.WalkStep:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    float e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getInstruction() -> getInstruction
    void setInstruction(java.lang.String) -> setInstruction
    java.lang.String getOrientation() -> getOrientation
    void setOrientation(java.lang.String) -> setOrientation
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getAssistantAction() -> getAssistantAction
    void setAssistantAction(java.lang.String) -> setAssistantAction
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.a -> com.amap.api.services.route.a:
    com.amap.api.services.route.BusPath a(android.os.Parcel) -> a
    com.amap.api.services.route.BusPath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.b -> com.amap.api.services.route.b:
    com.amap.api.services.route.BusRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.BusRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.c -> com.amap.api.services.route.c:
    com.amap.api.services.route.BusStep a(android.os.Parcel) -> a
    com.amap.api.services.route.BusStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.d -> com.amap.api.services.route.d:
    com.amap.api.services.route.District a(android.os.Parcel) -> a
    com.amap.api.services.route.District[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.e -> com.amap.api.services.route.e:
    com.amap.api.services.route.Doorway a(android.os.Parcel) -> a
    com.amap.api.services.route.Doorway[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.f -> com.amap.api.services.route.f:
    com.amap.api.services.route.DrivePath a(android.os.Parcel) -> a
    com.amap.api.services.route.DrivePath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.g -> com.amap.api.services.route.g:
    com.amap.api.services.route.DriveRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.DriveRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.h -> com.amap.api.services.route.h:
    com.amap.api.services.route.DriveStep a(android.os.Parcel) -> a
    com.amap.api.services.route.DriveStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.i -> com.amap.api.services.route.i:
    com.amap.api.services.route.Path a(android.os.Parcel) -> a
    com.amap.api.services.route.Path[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.j -> com.amap.api.services.route.j:
    com.amap.api.services.route.RouteBusLineItem a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteBusLineItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.k -> com.amap.api.services.route.k:
    com.amap.api.services.route.RouteBusWalkItem a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteBusWalkItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.l -> com.amap.api.services.route.l:
    com.amap.api.services.route.RouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.m -> com.amap.api.services.route.m:
    com.amap.api.services.route.RouteSearch$BusRouteQuery a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearch$BusRouteQuery[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.n -> com.amap.api.services.route.n:
    com.amap.api.services.route.RouteSearch$DriveRouteQuery a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearch$DriveRouteQuery[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.o -> com.amap.api.services.route.o:
    com.amap.api.services.route.RouteSearch$FromAndTo a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearch$FromAndTo[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.p -> com.amap.api.services.route.p:
    com.amap.api.services.route.RouteSearch$WalkRouteQuery a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearch$WalkRouteQuery[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.q -> com.amap.api.services.route.q:
    com.amap.api.services.route.RouteSearchCity a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearchCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.r -> com.amap.api.services.route.r:
    com.amap.api.services.route.SearchCity a(android.os.Parcel) -> a
    com.amap.api.services.route.SearchCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.s -> com.amap.api.services.route.s:
    com.amap.api.services.route.WalkPath a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkPath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.t -> com.amap.api.services.route.t:
    com.amap.api.services.route.WalkRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.u -> com.amap.api.services.route.u:
    com.amap.api.services.route.WalkStep a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.share.ShareSearch -> com.amap.api.services.share.ShareSearch:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.amap.api.services.share.ShareSearch$OnShareSearchListener h -> h
    int BusDefault -> BusDefault
    int BusSaveMoney -> BusSaveMoney
    int BusLeaseChange -> BusLeaseChange
    int BusLeaseWalk -> BusLeaseWalk
    int BusComfortable -> BusComfortable
    int BusNoSubway -> BusNoSubway
    int DrivingDefault -> DrivingDefault
    int DrivingSaveMoney -> DrivingSaveMoney
    int DrivingShortDistance -> DrivingShortDistance
    int DrivingNoHighWay -> DrivingNoHighWay
    int DrivingAvoidCongestion -> DrivingAvoidCongestion
    int DrivingNoHighWaySaveMoney -> DrivingNoHighWaySaveMoney
    int DrivingNoHighWayAvoidCongestion -> DrivingNoHighWayAvoidCongestion
    int DrivingSaveMoneyAvoidCongestion -> DrivingSaveMoneyAvoidCongestion
    int DrivingNoHighWaySaveMoneyAvoidCongestion -> DrivingNoHighWaySaveMoneyAvoidCongestion
    int NaviDefault -> NaviDefault
    int NaviSaveMoney -> NaviSaveMoney
    int NaviShortDistance -> NaviShortDistance
    int NaviNoHighWay -> NaviNoHighWay
    int NaviAvoidCongestion -> NaviAvoidCongestion
    int NaviNoHighWaySaveMoney -> NaviNoHighWaySaveMoney
    int NaviNoHighWayAvoidCongestion -> NaviNoHighWayAvoidCongestion
    int NaviSaveMoneyAvoidCongestion -> NaviSaveMoneyAvoidCongestion
    int NaviNoHighWaySaveMoneyAvoidCongestion -> NaviNoHighWaySaveMoneyAvoidCongestion
    void setOnShareSearchListener(com.amap.api.services.share.ShareSearch$OnShareSearchListener) -> setOnShareSearchListener
    void searchPoiShareUrlAsyn(com.amap.api.services.core.PoiItem) -> searchPoiShareUrlAsyn
    void searchBusRouteShareUrlAsyn(com.amap.api.services.share.ShareSearch$ShareBusRouteQuery) -> searchBusRouteShareUrlAsyn
    void searchWalkRouteShareUrlAsyn(com.amap.api.services.share.ShareSearch$ShareWalkRouteQuery) -> searchWalkRouteShareUrlAsyn
    void searchDrivingRouteShareUrlAsyn(com.amap.api.services.share.ShareSearch$ShareDrivingRouteQuery) -> searchDrivingRouteShareUrlAsyn
    void searchNaviShareUrlAsyn(com.amap.api.services.share.ShareSearch$ShareNaviQuery) -> searchNaviShareUrlAsyn
    void searchLocationShareUrlAsyn(com.amap.api.services.core.LatLonSharePoint) -> searchLocationShareUrlAsyn
    java.lang.String searchPoiShareUrl(com.amap.api.services.core.PoiItem) -> searchPoiShareUrl
    java.lang.String searchNaviShareUrl(com.amap.api.services.share.ShareSearch$ShareNaviQuery) -> searchNaviShareUrl
    java.lang.String searchLocationShareUrl(com.amap.api.services.core.LatLonSharePoint) -> searchLocationShareUrl
    java.lang.String searchBusRouteShareUrl(com.amap.api.services.share.ShareSearch$ShareBusRouteQuery) -> searchBusRouteShareUrl
    java.lang.String searchDrivingRouteShareUrl(com.amap.api.services.share.ShareSearch$ShareDrivingRouteQuery) -> searchDrivingRouteShareUrl
    java.lang.String searchWalkRouteShareUrl(com.amap.api.services.share.ShareSearch$ShareWalkRouteQuery) -> searchWalkRouteShareUrl
    com.amap.api.services.share.ShareSearch$OnShareSearchListener a(com.amap.api.services.share.ShareSearch) -> a
com.amap.api.services.share.ShareSearch$1 -> com.amap.api.services.share.ShareSearch$1:
    com.amap.api.services.core.PoiItem a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$2 -> com.amap.api.services.share.ShareSearch$2:
    com.amap.api.services.share.ShareSearch$ShareBusRouteQuery a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$3 -> com.amap.api.services.share.ShareSearch$3:
    com.amap.api.services.share.ShareSearch$ShareWalkRouteQuery a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$4 -> com.amap.api.services.share.ShareSearch$4:
    com.amap.api.services.share.ShareSearch$ShareDrivingRouteQuery a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$5 -> com.amap.api.services.share.ShareSearch$5:
    com.amap.api.services.share.ShareSearch$ShareNaviQuery a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$6 -> com.amap.api.services.share.ShareSearch$6:
    com.amap.api.services.core.LatLonSharePoint a -> a
    com.amap.api.services.share.ShareSearch b -> b
    void run() -> run
com.amap.api.services.share.ShareSearch$OnShareSearchListener -> com.amap.api.services.share.ShareSearch$OnShareSearchListener:
    void onPoiShareUrlSearched(java.lang.String,int) -> onPoiShareUrlSearched
    void onLocationShareUrlSearched(java.lang.String,int) -> onLocationShareUrlSearched
    void onNaviShareUrlSearched(java.lang.String,int) -> onNaviShareUrlSearched
    void onBusRouteShareUrlSearched(java.lang.String,int) -> onBusRouteShareUrlSearched
    void onWalkRouteShareUrlSearched(java.lang.String,int) -> onWalkRouteShareUrlSearched
    void onDrivingRouteShareUrlSearched(java.lang.String,int) -> onDrivingRouteShareUrlSearched
com.amap.api.services.share.ShareSearch$ShareBusRouteQuery -> com.amap.api.services.share.ShareSearch$ShareBusRouteQuery:
    com.amap.api.services.share.ShareSearch$ShareFromAndTo a -> a
    int b -> b
    int getBusMode() -> getBusMode
    com.amap.api.services.share.ShareSearch$ShareFromAndTo getShareFromAndTo() -> getShareFromAndTo
com.amap.api.services.share.ShareSearch$ShareDrivingRouteQuery -> com.amap.api.services.share.ShareSearch$ShareDrivingRouteQuery:
    com.amap.api.services.share.ShareSearch$ShareFromAndTo a -> a
    int b -> b
    int getDrivingMode() -> getDrivingMode
    com.amap.api.services.share.ShareSearch$ShareFromAndTo getShareFromAndTo() -> getShareFromAndTo
com.amap.api.services.share.ShareSearch$ShareFromAndTo -> com.amap.api.services.share.ShareSearch$ShareFromAndTo:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void setFromName(java.lang.String) -> setFromName
    void setToName(java.lang.String) -> setToName
    com.amap.api.services.core.LatLonPoint getFrom() -> getFrom
    com.amap.api.services.core.LatLonPoint getTo() -> getTo
    java.lang.String getFromName() -> getFromName
    java.lang.String getToName() -> getToName
com.amap.api.services.share.ShareSearch$ShareNaviQuery -> com.amap.api.services.share.ShareSearch$ShareNaviQuery:
    com.amap.api.services.share.ShareSearch$ShareFromAndTo a -> a
    int b -> b
    com.amap.api.services.share.ShareSearch$ShareFromAndTo getFromAndTo() -> getFromAndTo
    int getNaviMode() -> getNaviMode
com.amap.api.services.share.ShareSearch$ShareWalkRouteQuery -> com.amap.api.services.share.ShareSearch$ShareWalkRouteQuery:
    com.amap.api.services.share.ShareSearch$ShareFromAndTo a -> a
    int b -> b
    int getWalkMode() -> getWalkMode
    com.amap.api.services.share.ShareSearch$ShareFromAndTo getShareFromAndTo() -> getShareFromAndTo
com.amap.api.services.weather.LocalDayWeatherForecast -> com.amap.api.services.weather.LocalDayWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getWeek() -> getWeek
    void setWeek(java.lang.String) -> setWeek
    java.lang.String getDayWeather() -> getDayWeather
    void setDayWeather(java.lang.String) -> setDayWeather
    java.lang.String getNightWeather() -> getNightWeather
    void setNightWeather(java.lang.String) -> setNightWeather
    java.lang.String getDayTemp() -> getDayTemp
    void setDayTemp(java.lang.String) -> setDayTemp
    java.lang.String getNightTemp() -> getNightTemp
    void setNightTemp(java.lang.String) -> setNightTemp
    java.lang.String getDayWindDirection() -> getDayWindDirection
    void setDayWindDirection(java.lang.String) -> setDayWindDirection
    java.lang.String getNightWindDirection() -> getNightWindDirection
    void setNightWindDirection(java.lang.String) -> setNightWindDirection
    java.lang.String getDayWindPower() -> getDayWindPower
    void setDayWindPower(java.lang.String) -> setDayWindPower
    java.lang.String getNightWindPower() -> getNightWindPower
    void setNightWindPower(java.lang.String) -> setNightWindPower
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.weather.LocalWeatherForecast -> com.amap.api.services.weather.LocalWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getReportTime() -> getReportTime
    void setReportTime(java.lang.String) -> setReportTime
    java.util.List getWeatherForecast() -> getWeatherForecast
    void setWeatherForecast(java.util.List) -> setWeatherForecast
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.weather.LocalWeatherForecastResult -> com.amap.api.services.weather.LocalWeatherForecastResult:
    com.amap.api.services.weather.WeatherSearchQuery a -> a
    com.amap.api.services.weather.LocalWeatherForecast b -> b
    com.amap.api.services.weather.LocalWeatherForecastResult a(com.amap.api.services.core.ae,com.amap.api.services.weather.LocalWeatherForecast) -> a
    com.amap.api.services.weather.WeatherSearchQuery getWeatherForecastQuery() -> getWeatherForecastQuery
    com.amap.api.services.weather.LocalWeatherForecast getForecastResult() -> getForecastResult
com.amap.api.services.weather.LocalWeatherLive -> com.amap.api.services.weather.LocalWeatherLive:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getAdCode() -> getAdCode
    java.lang.String getWeather() -> getWeather
    java.lang.String getTemperature() -> getTemperature
    java.lang.String getWindDirection() -> getWindDirection
    java.lang.String getWindPower() -> getWindPower
    java.lang.String getHumidity() -> getHumidity
    java.lang.String getReportTime() -> getReportTime
    void setProvince(java.lang.String) -> setProvince
    void setCity(java.lang.String) -> setCity
    void setAdCode(java.lang.String) -> setAdCode
    void setWeather(java.lang.String) -> setWeather
    void setTemperature(java.lang.String) -> setTemperature
    void setWindDirection(java.lang.String) -> setWindDirection
    void setWindPower(java.lang.String) -> setWindPower
    void setHumidity(java.lang.String) -> setHumidity
    void setReportTime(java.lang.String) -> setReportTime
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.weather.LocalWeatherLiveResult -> com.amap.api.services.weather.LocalWeatherLiveResult:
    com.amap.api.services.weather.WeatherSearchQuery a -> a
    com.amap.api.services.weather.LocalWeatherLive b -> b
    com.amap.api.services.weather.LocalWeatherLiveResult a(com.amap.api.services.core.af,com.amap.api.services.weather.LocalWeatherLive) -> a
    com.amap.api.services.weather.WeatherSearchQuery getWeatherLiveQuery() -> getWeatherLiveQuery
    com.amap.api.services.weather.LocalWeatherLive getLiveResult() -> getLiveResult
com.amap.api.services.weather.WeatherSearch -> com.amap.api.services.weather.WeatherSearch:
    android.content.Context a -> a
    com.amap.api.services.weather.WeatherSearchQuery b -> b
    com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener c -> c
    com.amap.api.services.weather.LocalWeatherLiveResult d -> d
    com.amap.api.services.weather.LocalWeatherForecastResult e -> e
    android.os.Handler f -> f
    com.amap.api.services.weather.WeatherSearchQuery getQuery() -> getQuery
    void setQuery(com.amap.api.services.weather.WeatherSearchQuery) -> setQuery
    void searchWeatherAsyn() -> searchWeatherAsyn
    com.amap.api.services.weather.LocalWeatherLiveResult a() -> a
    com.amap.api.services.weather.LocalWeatherForecastResult b() -> b
    void setOnWeatherSearchListener(com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener) -> setOnWeatherSearchListener
    com.amap.api.services.weather.WeatherSearchQuery a(com.amap.api.services.weather.WeatherSearch) -> a
    com.amap.api.services.weather.LocalWeatherLiveResult a(com.amap.api.services.weather.WeatherSearch,com.amap.api.services.weather.LocalWeatherLiveResult) -> a
    com.amap.api.services.weather.LocalWeatherLiveResult b(com.amap.api.services.weather.WeatherSearch) -> b
    com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener c(com.amap.api.services.weather.WeatherSearch) -> c
    com.amap.api.services.weather.LocalWeatherLiveResult d(com.amap.api.services.weather.WeatherSearch) -> d
    android.os.Handler e(com.amap.api.services.weather.WeatherSearch) -> e
    com.amap.api.services.weather.LocalWeatherForecastResult a(com.amap.api.services.weather.WeatherSearch,com.amap.api.services.weather.LocalWeatherForecastResult) -> a
    com.amap.api.services.weather.LocalWeatherForecastResult f(com.amap.api.services.weather.WeatherSearch) -> f
    com.amap.api.services.weather.LocalWeatherForecastResult g(com.amap.api.services.weather.WeatherSearch) -> g
com.amap.api.services.weather.WeatherSearch$1 -> com.amap.api.services.weather.WeatherSearch$1:
    com.amap.api.services.weather.WeatherSearch a -> a
    void run() -> run
com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener -> com.amap.api.services.weather.WeatherSearch$OnWeatherSearchListener:
    void onWeatherLiveSearched(com.amap.api.services.weather.LocalWeatherLiveResult,int) -> onWeatherLiveSearched
    void onWeatherForecastSearched(com.amap.api.services.weather.LocalWeatherForecastResult,int) -> onWeatherForecastSearched
com.amap.api.services.weather.WeatherSearchQuery -> com.amap.api.services.weather.WeatherSearchQuery:
    int WEATHER_TYPE_LIVE -> WEATHER_TYPE_LIVE
    int WEATHER_TYPE_FORECAST -> WEATHER_TYPE_FORECAST
    java.lang.String a -> a
    int b -> b
    java.lang.String getCity() -> getCity
    int getType() -> getType
    com.amap.api.services.weather.WeatherSearchQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.weather.a -> com.amap.api.services.weather.a:
    com.amap.api.services.weather.LocalDayWeatherForecast a(android.os.Parcel) -> a
    com.amap.api.services.weather.LocalDayWeatherForecast[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.weather.b -> com.amap.api.services.weather.b:
    com.amap.api.services.weather.LocalWeatherForecast a(android.os.Parcel) -> a
    com.amap.api.services.weather.LocalWeatherForecast[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.weather.c -> com.amap.api.services.weather.c:
    com.amap.api.services.weather.LocalWeatherLive a(android.os.Parcel) -> a
    com.amap.api.services.weather.LocalWeatherLive[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.autonavi.amap.mapcore.AMapNativeRenderer -> com.autonavi.amap.mapcore.AMapNativeRenderer:
    void nativeDrawLineByTextureID(float[],int,float,int,float,float,float,float,float,boolean,boolean,boolean) -> nativeDrawLineByTextureID
    void nativeDrawLineByMultiTextureID(float[],int,float,int[],int,int[],int,float) -> nativeDrawLineByMultiTextureID
    void nativeDrawLineByMultiColor(float[],int,float,int,int[],int,int[],int) -> nativeDrawLineByMultiColor
    void nativeDrawGradientColorLine(float[],int,float,int[],int,int[],int,int) -> nativeDrawGradientColorLine
com.autonavi.amap.mapcore.BaseMapCallImplement -> com.autonavi.amap.mapcore.BaseMapCallImplement:
    java.util.ArrayList roadReqMapGrids -> roadReqMapGrids
    java.util.ArrayList bldReqMapGrids -> bldReqMapGrids
    java.util.ArrayList regionReqMapGrids -> regionReqMapGrids
    java.util.ArrayList poiReqMapGrids -> poiReqMapGrids
    java.util.ArrayList versionMapGrids -> versionMapGrids
    java.util.ArrayList indoorMapGrids -> indoorMapGrids
    java.util.ArrayList vectmcReqMapGirds -> vectmcReqMapGirds
    java.util.ArrayList stiReqMapGirds -> stiReqMapGirds
    java.util.ArrayList curRoadMapGrids -> curRoadMapGrids
    java.util.ArrayList curBldMapGrids -> curBldMapGrids
    java.util.ArrayList curRegionMapGrids -> curRegionMapGrids
    java.util.ArrayList curPoiMapGrids -> curPoiMapGrids
    java.util.ArrayList curVectmcMapGirds -> curVectmcMapGirds
    java.util.ArrayList curStiMapGirds -> curStiMapGirds
    java.util.ArrayList curScreenGirds -> curScreenGirds
    java.util.ArrayList curIndoorMapGirds -> curIndoorMapGirds
    com.autonavi.amap.mapcore.ConnectionManager connectionManager -> connectionManager
    com.autonavi.amap.mapcore.d tileProcessCtrl -> tileProcessCtrl
    com.autonavi.amap.mapcore.TextTextureGenerator textTextureGenerator -> textTextureGenerator
    java.lang.Object mapGridFillLock -> mapGridFillLock
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    java.util.ArrayList getReqGridList(int) -> getReqGridList
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    java.util.ArrayList getCurGridList(int) -> getCurGridList
    boolean isGridsInScreen(java.util.ArrayList,int) -> isGridsInScreen
    boolean isGridInScreen(int,java.lang.String) -> isGridInScreen
    boolean isGridInList(java.lang.String,java.util.ArrayList) -> isGridInList
    boolean isIndoorGridsInScreen(java.util.ArrayList,int) -> isIndoorGridsInScreen
    boolean isIndoorGridInScreen(int,java.lang.String,short) -> isIndoorGridInScreen
    boolean isIndoorGridInList(java.lang.String,java.util.ArrayList) -> isIndoorGridInList
    void proccessRequiredData(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> proccessRequiredData
    void OnMapSurfaceCreate(com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void onPause() -> onPause
    void onResume(com.autonavi.amap.mapcore.MapCore) -> onResume
    void OnMapDestory(com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    void newMap(com.autonavi.amap.mapcore.MapCore) -> newMap
    void destoryMap(com.autonavi.amap.mapcore.MapCore) -> destoryMap
com.autonavi.amap.mapcore.BaseMapLoader -> com.autonavi.amap.mapcore.BaseMapLoader:
    com.autonavi.amap.mapcore.MapCore mGLMapEngine -> mGLMapEngine
    com.autonavi.amap.mapcore.BaseMapCallImplement mMapCallback -> mMapCallback
    java.util.ArrayList mapTiles -> mapTiles
    long createtime -> createtime
    int mapLevel -> mapLevel
    byte[] recievedDataBuffer -> recievedDataBuffer
    int recievedDataSize -> recievedDataSize
    int nextImgDataLength -> nextImgDataLength
    boolean recievedHeader -> recievedHeader
    int mCapaticy -> mCapaticy
    int mCapaticyExt -> mCapaticyExt
    boolean inRequest -> inRequest
    boolean isFinished -> isFinished
    boolean mCanceled -> mCanceled
    int datasource -> datasource
    long m_reqestStartLen -> m_reqestStartLen
    java.net.HttpURLConnection httpURLConnection -> httpURLConnection
    java.lang.String getMapSvrPath() -> getMapSvrPath
    java.lang.String getGridParma() -> getGridParma
    boolean isRequestValid() -> isRequestValid
    java.lang.String getMapAddress() -> getMapAddress
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    void processRecivedDataByType() -> processRecivedDataByType
    void processReceivedTileDataV4(byte[],int,int) -> processReceivedTileDataV4
    java.lang.String getURL(java.lang.String,java.lang.String,java.lang.String) -> getURL
    void initTestTime() -> initTestTime
    void privteTestTime(java.lang.String,java.lang.String) -> privteTestTime
    boolean isAssic(java.lang.String) -> isAssic
    boolean containllegal(java.lang.String) -> containllegal
    void OnException(int) -> OnException
    boolean hasFinished() -> hasFinished
    void doCancel() -> doCancel
    void onConnectionOver() -> onConnectionOver
    void doRequest() -> doRequest
    void onConnectionError(com.autonavi.amap.mapcore.BaseMapLoader,int,java.lang.String) -> onConnectionError
    void onConnectionOpened() -> onConnectionOpened
    void addReuqestTiles(com.autonavi.amap.mapcore.MapSourceGridData) -> addReuqestTiles
    void onConnectionRecieveData(byte[],int) -> onConnectionRecieveData
    void processRecivedData() -> processRecivedData
    void processReceivedDataV4() -> processReceivedDataV4
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedVersionData(byte[],int,int) -> processRecivedVersionData
com.autonavi.amap.mapcore.ConnectionManager -> com.autonavi.amap.mapcore.ConnectionManager:
    int MAX_THREAD_COUNT -> MAX_THREAD_COUNT
    boolean threadFlag -> threadFlag
    com.autonavi.amap.mapcore.MapCore mGLMapEngine -> mGLMapEngine
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.ArrayList threadPoolList -> threadPoolList
    java.util.ArrayList connPool -> connPool
    void shutDown() -> shutDown
    void insertConntionTask(com.autonavi.amap.mapcore.BaseMapLoader) -> insertConntionTask
    void checkListPoolOld() -> checkListPoolOld
    void checkListPool() -> checkListPool
    void run() -> run
    void doAsyncRequest() -> doAsyncRequest
com.autonavi.amap.mapcore.Convert -> com.autonavi.amap.mapcore.Convert:
    int getInt(byte[],int) -> getInt
    short getShort(byte[],int) -> getShort
    int getUShort(byte[],int) -> getUShort
    boolean getBit(byte,int) -> getBit
    byte[] copyString(byte[],int,int) -> copyString
    byte[] covertBytes(byte) -> covertBytes
    byte[] convertInt(int) -> convertInt
    int getNum(byte,int,int) -> getNum
    int getNum(short,int,int) -> getNum
    byte[] convertShort(int) -> convertShort
    void writeInt(byte[],int,int) -> writeInt
    void writeShort(byte[],int,short) -> writeShort
    void moveArray(byte[],int,byte[],int,int) -> moveArray
    java.lang.String getString(byte[],int,int) -> getString
    byte[] getSubBytes(byte[],int,int) -> getSubBytes
    byte[] get1BString(java.lang.String) -> get1BString
    byte[] get2BString(java.lang.String) -> get2BString
    double convertDouble(byte[],int) -> convertDouble
    byte[] getDouble(double) -> getDouble
    void convert1bString(byte[],int,com.autonavi.amap.mapcore.b) -> convert1bString
    void convert2bString(byte[],int,com.autonavi.amap.mapcore.b) -> convert2bString
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.autonavi.amap.mapcore.CoordUtil -> com.autonavi.amap.mapcore.CoordUtil:
    int convertToGcj(double[],double[]) -> convertToGcj
com.autonavi.amap.mapcore.DPoint -> com.autonavi.amap.mapcore.DPoint:
    double x -> x
    double y -> y
com.autonavi.amap.mapcore.ERROR_CODE -> com.autonavi.amap.mapcore.ERROR_CODE:
    int CONN_CREATE_FALSE -> CONN_CREATE_FALSE
    int CONN_ERROR -> CONN_ERROR
    int ERROR_NONE -> ERROR_NONE
    int CANCEL_ERROR -> CANCEL_ERROR
com.autonavi.amap.mapcore.FPoint -> com.autonavi.amap.mapcore.FPoint:
    float x -> x
    float y -> y
    boolean equals(java.lang.Object) -> equals
com.autonavi.amap.mapcore.FileUtil -> com.autonavi.amap.mapcore.FileUtil:
    java.lang.String TAG -> TAG
    void copy(android.content.Context,java.lang.String,java.io.File) -> copy
    void deleteFile(java.io.File) -> deleteFile
    java.lang.String getMapBaseStorage(android.content.Context) -> getMapBaseStorage
    java.lang.String getExternalStroragePath(android.content.Context) -> getExternalStroragePath
    void writeDatasToFile(java.lang.String,byte[]) -> writeDatasToFile
    byte[] readFileContents(java.lang.String) -> readFileContents
    void createNoMediaFileIfNotExist(java.lang.String) -> createNoMediaFileIfNotExist
com.autonavi.amap.mapcore.GLMapResManager -> com.autonavi.amap.mapcore.GLMapResManager:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_TMC_BLACK -> TEXTURE_TMC_BLACK
    int TEXTURE_TMC_GRAY -> TEXTURE_TMC_GRAY
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int TEXTURE_TIANQIAO -> TEXTURE_TIANQIAO
    int TEXTURE_CHANGDUAN -> TEXTURE_CHANGDUAN
    int TEXTURE_HK_GAOSU_GUIDE_BOARD -> TEXTURE_HK_GAOSU_GUIDE_BOARD
    int TEXTURE_GJ_GAOSU_GUIDE_BOARD -> TEXTURE_GJ_GAOSU_GUIDE_BOARD
    int TEXTURE_SHENG_GAOSU_GUIDE_BOARD -> TEXTURE_SHENG_GAOSU_GUIDE_BOARD
    int TEXTURE_GUODAO_GUIDE_BOARD -> TEXTURE_GUODAO_GUIDE_BOARD
    int TEXTURE_SHENGDAO_GUIDE_BOARD -> TEXTURE_SHENGDAO_GUIDE_BOARD
    int TEXTURE_XIANDAO_GUIDE_BOARD -> TEXTURE_XIANDAO_GUIDE_BOARD
    int TEXTURE_XIANGDAO_GUIDE_BOARD -> TEXTURE_XIANGDAO_GUIDE_BOARD
    int TEXTURE_TOP_COVER -> TEXTURE_TOP_COVER
    int TEXTURE_BIG_ICON -> TEXTURE_BIG_ICON
    int TEXTURE_INDOORICON -> TEXTURE_INDOORICON
    int AM_STYLEDATA_INDOOR -> AM_STYLEDATA_INDOOR
    boolean isBigIcon -> isBigIcon
    com.amap.api.mapcore.AMapDelegateImp mapDelegateImp -> mapDelegateImp
    android.content.Context mContext -> mContext
    com.autonavi.amap.mapcore.MapCore mMapCore -> mMapCore
    java.lang.String styleName1 -> styleName1
    java.lang.String styleName2 -> styleName2
    java.lang.String styleName3 -> styleName3
    java.lang.String styleName4 -> styleName4
    java.lang.String styleName5 -> styleName5
    java.lang.String styleName6 -> styleName6
    java.lang.String styleName7 -> styleName7
    java.lang.String styleName8 -> styleName8
    java.lang.String styleName9 -> styleName9
    java.lang.String iconName1 -> iconName1
    java.lang.String iconName2 -> iconName2
    java.lang.String iconName3 -> iconName3
    java.lang.String iconName4 -> iconName4
    java.lang.String styleName50 -> styleName50
    java.lang.String iconName50 -> iconName50
    int AM_STYLE_DATA_TYPE_BASE_MAP -> AM_STYLE_DATA_TYPE_BASE_MAP
    int AM_DATA_FORMAT_TYPE_GZIP -> AM_DATA_FORMAT_TYPE_GZIP
    void setStyleData() -> setStyleData
    void setIconsData(boolean) -> setIconsData
    java.lang.String getBigIconName(java.lang.String) -> getBigIconName
    java.lang.String getStyleName() -> getStyleName
    java.lang.String getIconName() -> getIconName
    void setTrafficTexture(boolean) -> setTrafficTexture
    void setBkTexture(boolean) -> setBkTexture
    void setRoadGuideTexture(boolean) -> setRoadGuideTexture
    void setOtherMapTexture(boolean) -> setOtherMapTexture
    com.autonavi.amap.mapcore.MapCore access$000(com.autonavi.amap.mapcore.GLMapResManager) -> access$000
com.autonavi.amap.mapcore.GLMapResManager$1 -> com.autonavi.amap.mapcore.GLMapResManager$1:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    com.autonavi.amap.mapcore.GLMapResManager d -> d
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$2 -> com.autonavi.amap.mapcore.GLMapResManager$2:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    com.autonavi.amap.mapcore.GLMapResManager f -> f
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$3 -> com.autonavi.amap.mapcore.GLMapResManager$3:
    byte[] a -> a
    byte[] b -> b
    com.autonavi.amap.mapcore.GLMapResManager c -> c
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$4 -> com.autonavi.amap.mapcore.GLMapResManager$4:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    com.autonavi.amap.mapcore.GLMapResManager f -> f
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$MapViewMode -> com.autonavi.amap.mapcore.GLMapResManager$MapViewMode:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode NORAML -> NORAML
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode SATELLITE -> SATELLITE
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode BUS -> BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState -> com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NORMAL -> NORMAL
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_CAR -> PREVIEW_CAR
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_BUS -> PREVIEW_BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_FOOT -> PREVIEW_FOOT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_CAR -> NAVI_CAR
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_BUS -> NAVI_BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_FOOT -> NAVI_FOOT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.GLMapResManager$MapViewTime -> com.autonavi.amap.mapcore.GLMapResManager$MapViewTime:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime DAY -> DAY
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime NIGHT -> NIGHT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.IBaseMapCallback -> com.autonavi.amap.mapcore.IBaseMapCallback:
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
com.autonavi.amap.mapcore.IMapCallback -> com.autonavi.amap.mapcore.IMapCallback:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    void requestRender() -> requestRender
    void onIndoorBuildingActivity(com.autonavi.amap.mapcore.MapCore,byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
com.autonavi.amap.mapcore.IPoint -> com.autonavi.amap.mapcore.IPoint:
    int x -> x
    int y -> y
    java.lang.Object clone() -> clone
com.autonavi.amap.mapcore.IndoorMapLoader -> com.autonavi.amap.mapcore.IndoorMapLoader:
    java.lang.String mIndoorChannel -> mIndoorChannel
    java.lang.String IndoorSignKey -> IndoorSignKey
    int getInt2(byte[],int) -> getInt2
    short getShort2(byte[],int) -> getShort2
    java.lang.String getIndoorMD5Params(java.lang.String) -> getIndoorMD5Params
    java.lang.String getIndoorRequestParams() -> getIndoorRequestParams
    java.lang.String assScodeToParma(java.lang.StringBuffer) -> assScodeToParma
    java.lang.String getGridParma() -> getGridParma
    java.lang.String getMapAddress() -> getMapAddress
    java.lang.String getMapSvrPath() -> getMapSvrPath
    boolean isRequestValid() -> isRequestValid
    void processReceivedIndoorData() -> processReceivedIndoorData
    void processReceivedTileDataV4(byte[],int,int) -> processReceivedTileDataV4
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedDataByType() -> processRecivedDataByType
com.autonavi.amap.mapcore.MapCore -> com.autonavi.amap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_TMC_BLACK -> TEXTURE_TMC_BLACK
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int AM_DATA_ROADMAP -> AM_DATA_ROADMAP
    int AM_DATA_GEO_BUILDING -> AM_DATA_GEO_BUILDING
    int AM_DATA_BMP_BASEMAP -> AM_DATA_BMP_BASEMAP
    int AM_DATA_SATELLITE -> AM_DATA_SATELLITE
    int AM_DATA_VEC_TMC -> AM_DATA_VEC_TMC
    int AM_DATA_SCREEN -> AM_DATA_SCREEN
    int AM_DATA_MODEL -> AM_DATA_MODEL
    int AM_DATA_STANDARD -> AM_DATA_STANDARD
    int AM_DATA_POI -> AM_DATA_POI
    int AM_DATA_VERSION -> AM_DATA_VERSION
    int AM_DATA_INDOOR -> AM_DATA_INDOOR
    int AM_DATA_GUIDE -> AM_DATA_GUIDE
    int AM_DATA_SCENIC_WIDGET -> AM_DATA_SCENIC_WIDGET
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    android.content.Context mContext -> mContext
    com.autonavi.amap.mapcore.IMapCallback mMapcallback -> mMapcallback
    com.autonavi.amap.mapcore.TextTextureGenerator textTextureGenerator -> textTextureGenerator
    long native_instance -> native_instance
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    byte[] tmp_3072bytes_data -> tmp_3072bytes_data
    void newMap() -> newMap
    android.content.Context getContext() -> getContext
    void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    void setMapCallback(com.autonavi.amap.mapcore.IMapCallback) -> setMapCallback
    boolean isMapEngineValid() -> isMapEngineValid
    void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    void setStyleData(byte[],int,int) -> setStyleData
    void setInternaltexture(byte[],int) -> setInternaltexture
    long getInstanceHandle() -> getInstanceHandle
    com.autonavi.amap.mapcore.MapProjection getMapstate() -> getMapstate
    void setMapstate(com.autonavi.amap.mapcore.MapProjection) -> setMapstate
    void setParameter(int,int,int,int,int) -> setParameter
    void setIndoorBuildingToBeActive(java.lang.String,int,java.lang.String) -> setIndoorBuildingToBeActive
    boolean putMapData(byte[],int,int,int,int) -> putMapData
    int getLabelBuffer(int,int,int,byte[]) -> getLabelBuffer
    com.autonavi.amap.mapcore.SelectedMapPoi GetSelectedMapPoi(int,int,int) -> GetSelectedMapPoi
    void putCharbitmap(int,byte[]) -> putCharbitmap
    boolean canStopRenderMap() -> canStopRenderMap
    void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    void OnMapProcessEvent() -> OnMapProcessEvent
    void OnMapDestory() -> OnMapDestory
    void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    void onIndoorBuildingActivity(byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
    void destroy() -> destroy
    void fillCurGridListWithDataType(java.util.ArrayList,int) -> fillCurGridListWithDataType
    long nativeNewInstance(java.lang.String,java.lang.String) -> nativeNewInstance
    void nativeDestroy(long,com.autonavi.amap.mapcore.MapCore) -> nativeDestroy
    void nativeSetStyleData(long,byte[],int,int) -> nativeSetStyleData
    void nativeSetInternaltexture(long,byte[],int) -> nativeSetInternaltexture
    void nativeSurfaceCreate(long,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(long,com.autonavi.amap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRenderMap(long,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceRenderMap
    void nativeSetMapstate(long,long) -> nativeSetMapstate
    long nativeGetMapstate(long) -> nativeGetMapstate
    int nativeGetSelectedMapPois(long,int,int,int,byte[]) -> nativeGetSelectedMapPois
    void nativeSetparameter(long,int,int,int,int,int) -> nativeSetparameter
    int nativePutMapdata(long,int,byte[]) -> nativePutMapdata
    void nativePutCharbitmap(long,int,byte[]) -> nativePutCharbitmap
    void nativeGetScreenGrids(long,byte[],int) -> nativeGetScreenGrids
    void nativeChangeMapEnv(long,java.lang.String) -> nativeChangeMapEnv
    void nativeSetInternalTexture(long,byte[],int) -> nativeSetInternalTexture
    void nativeSetCityBound(long,byte[]) -> nativeSetCityBound
    boolean nativeCanStopRenderMap(long) -> nativeCanStopRenderMap
    int nativePutMapdata(long,int,byte[],int) -> nativePutMapdata
    void nativeSetParmater(long,int,int,int,int,int) -> nativeSetParmater
    int nativeGetMapStateInstance(long) -> nativeGetMapStateInstance
    int nativeSelectMapPois(long,int,int,int,byte[]) -> nativeSelectMapPois
    void nativeAddPoiFilter(long,int,int,int,float,float,java.lang.String) -> nativeAddPoiFilter
    void nativeRemovePoiFilter(long,java.lang.String) -> nativeRemovePoiFilter
    void nativeClearPoiFilter(long) -> nativeClearPoiFilter
    void nativeSetIndoorBuildingToBeActive(long,java.lang.String,int,java.lang.String) -> nativeSetIndoorBuildingToBeActive
com.autonavi.amap.mapcore.MapCoreManager -> com.autonavi.amap.mapcore.MapCoreManager:
    java.util.Hashtable mapCoreTable -> mapCoreTable
    com.autonavi.amap.mapcore.MapCoreManager mapCoreManager -> mapCoreManager
    com.autonavi.amap.mapcore.MapCoreManager getInstance() -> getInstance
    void putMapCore(int,com.autonavi.amap.mapcore.MapCore) -> putMapCore
    com.autonavi.amap.mapcore.MapCore getMapCore(int) -> getMapCore
    void removeMapCore(int) -> removeMapCore
    int getMapCoreSize() -> getMapCoreSize
    void OnMapDataRequired(int,java.lang.String[],int) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int,int) -> OnMapLabelsRequired
    void onIndoorBuildingActivity(byte[],int) -> onIndoorBuildingActivity
    void onIndoorDataRequired(int,java.lang.String[],int[],int[],int) -> onIndoorDataRequired
com.autonavi.amap.mapcore.MapProjection -> com.autonavi.amap.mapcore.MapProjection:
    long native_instance -> native_instance
    boolean m_bNewInstance -> m_bNewInstance
    void recycle() -> recycle
    long getInstanceHandle() -> getInstanceHandle
    void getBound(com.autonavi.amap.mapcore.IPoint) -> getBound
    void setGeoCenter(int,int) -> setGeoCenter
    void getGeoCenter(com.autonavi.amap.mapcore.IPoint) -> getGeoCenter
    void setMapCenter(float,float) -> setMapCenter
    void getMapCenter(com.autonavi.amap.mapcore.FPoint) -> getMapCenter
    void setMapZoomer(float) -> setMapZoomer
    float getMapZoomer() -> getMapZoomer
    void setMapAngle(float) -> setMapAngle
    float getMapAngle() -> getMapAngle
    void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    float getCameraHeaderAngle() -> getCameraHeaderAngle
    void geo2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> geo2Map
    void map2Win(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Win
    void win2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> win2Map
    float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    float getMapLenWithWin(int) -> getMapLenWithWin
    void map2Geo(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Geo
    void setCenterWithMap(float,float) -> setCenterWithMap
    void getCenterMap(com.autonavi.amap.mapcore.FPoint) -> getCenterMap
    void lonlat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> lonlat2Geo
    void geo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> geo2LonLat
    float getMapLenWithGeo(int) -> getMapLenWithGeo
    void recalculate() -> recalculate
    long nativeNewInstance(long) -> nativeNewInstance
    void nativeDestroy(long) -> nativeDestroy
    void nativeGetBound(long,com.autonavi.amap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(long,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(long,com.autonavi.amap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(long,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(long,com.autonavi.amap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(long,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(long) -> nativeGetMapZoomer
    void nativeSetMapAngle(long,float) -> nativeSetMapAngle
    float nativeGetMapAngle(long) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(long,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(long) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(long,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(long,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(long,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(long,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(long,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(long,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(long,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(long,com.autonavi.amap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> nativeGeo2LonLat
    float nativeGetMapLenWithGeo(long,int) -> nativeGetMapLenWithGeo
    void nativeRecalculate(long) -> nativeRecalculate
com.autonavi.amap.mapcore.MapSourceGridData -> com.autonavi.amap.mapcore.MapSourceGridData:
    java.lang.String gridName -> gridName
    int sourceType -> sourceType
    java.lang.Object obj -> obj
    java.lang.String keyGridName -> keyGridName
    int mIndoorIndex -> mIndoorIndex
    int mIndoorVersion -> mIndoorVersion
    java.lang.String getKeyGridName() -> getKeyGridName
    int getSourceType() -> getSourceType
    java.lang.String getGridName() -> getGridName
com.autonavi.amap.mapcore.MapTilsCacheAndResManager -> com.autonavi.amap.mapcore.MapTilsCacheAndResManager:
    int STYLE_DATA -> STYLE_DATA
    int ICONS_DATA -> ICONS_DATA
    java.lang.String AUTONAVI_PATH -> AUTONAVI_PATH
    java.lang.String AUTONAVI_DATA_PATH -> AUTONAVI_DATA_PATH
    java.lang.String MAP_DATA_OFFLINE_PATH_NAME -> MAP_DATA_OFFLINE_PATH_NAME
    java.lang.String MAP_CACHE_PATH_NAME -> MAP_CACHE_PATH_NAME
    java.lang.String MAP_TILES_PATH_NAME -> MAP_TILES_PATH_NAME
    java.lang.String MAP_RES_EXT_PATH_NAME -> MAP_RES_EXT_PATH_NAME
    java.lang.String MAP_MAP_ASSETS_NAME -> MAP_MAP_ASSETS_NAME
    com.autonavi.amap.mapcore.MapTilsCacheAndResManager getInstance(android.content.Context) -> getInstance
    void checkDir() -> checkDir
    void clearOnlineMapTilsCache() -> clearOnlineMapTilsCache
    java.lang.String getBaseMapPath() -> getBaseMapPath
    java.lang.String getMapCachePath() -> getMapCachePath
    java.lang.String getMapOnlineDataPath() -> getMapOnlineDataPath
    java.lang.String getMapExtResPath() -> getMapExtResPath
    java.lang.String getMapOfflineDataPath() -> getMapOfflineDataPath
    byte[] getStyleData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleData
    byte[] getIconsData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getIconsData
    byte[] getOtherResData(java.lang.String) -> getOtherResData
    void saveFile(java.lang.String,int,int,byte[]) -> saveFile
    boolean canUpate(java.lang.String) -> canUpate
com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile -> com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile:
    java.lang.String fullName -> fullName
    java.lang.String name -> name
    int serverVersion -> serverVersion
    int clientVersion -> clientVersion
    int type -> type
com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl -> com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl:
    com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl instance -> instance
    android.content.Context mContext -> mContext
    java.lang.String mMapBaseDataPath -> mMapBaseDataPath
    java.lang.String mMapOfflinePath -> mMapOfflinePath
    java.lang.String mCachePath -> mCachePath
    java.lang.String mMapOnlineTilesPath -> mMapOnlineTilesPath
    java.lang.String mMapExtResPath -> mMapExtResPath
    long Style_Update_Internal_Time -> Style_Update_Internal_Time
    int CREATE_DIR_COUNT -> CREATE_DIR_COUNT
    com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl instance(android.content.Context) -> instance
    void reset() -> reset
    java.lang.String getBaseMapPath() -> getBaseMapPath
    java.lang.String getMapCachePath() -> getMapCachePath
    java.lang.String getMapOnlineDataPath() -> getMapOnlineDataPath
    java.lang.String getMapOfflineDataPath() -> getMapOfflineDataPath
    java.lang.String getMapExtResPath() -> getMapExtResPath
    byte[] getStyleData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleData
    byte[] getIconsData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getIconsData
    byte[] getOtherResData(java.lang.String) -> getOtherResData
    void init() -> init
    void initRelease() -> initRelease
    void initDebug() -> initDebug
    void saveFile(java.lang.String,int,int,byte[]) -> saveFile
    java.lang.String getFilePreName(java.lang.String) -> getFilePreName
    void setRetFile(com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile,java.lang.String) -> setRetFile
    byte[] getStyleIconsData(java.lang.String,int,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleIconsData
    void copyAssertToTmp(android.content.Context,java.lang.String,java.io.File) -> copyAssertToTmp
    void checkDir() -> checkDir
    void clearOnlineMapTilsCache() -> clearOnlineMapTilsCache
    void addUdateRecorder(java.lang.String) -> addUdateRecorder
    boolean canUpate(java.lang.String) -> canUpate
com.autonavi.amap.mapcore.Md5Utility -> com.autonavi.amap.mapcore.Md5Utility:
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String getFileMD5(java.lang.String) -> getFileMD5
    java.lang.String getFileMD5(java.io.File) -> getFileMD5
    java.lang.String getStringMD5(java.lang.String) -> getStringMD5
    java.lang.String getCharArrayMD5(char[]) -> getCharArrayMD5
    java.lang.String getByteArrayMD5(byte[]) -> getByteArrayMD5
com.autonavi.amap.mapcore.NormalMapLoader -> com.autonavi.amap.mapcore.NormalMapLoader:
    java.lang.String getGridParmaV4() -> getGridParmaV4
    java.lang.String getGridParma() -> getGridParma
    java.lang.String getMapSvrPath() -> getMapSvrPath
    java.lang.String getMapAddress() -> getMapAddress
    boolean isRequestValid() -> isRequestValid
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    void processRecivedDataByType() -> processRecivedDataByType
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedTileDataBmp(byte[],int,int) -> processRecivedTileDataBmp
    void processRecivedTileDataVTmc(byte[],int,int) -> processRecivedTileDataVTmc
    void processRecivedModels(byte[],int,int) -> processRecivedModels
com.autonavi.amap.mapcore.ResUtil -> com.autonavi.amap.mapcore.ResUtil:
    android.graphics.Bitmap decodeBitmapWithAdaptiveSize(android.content.Context,int) -> decodeBitmapWithAdaptiveSize
    android.graphics.Bitmap decodeAssetBitmap(android.content.Context,java.lang.String) -> decodeAssetBitmap
    android.graphics.Bitmap decodeAssetBitmapWithSize(android.content.Context,java.lang.String,int,int) -> decodeAssetBitmapWithSize
    byte[] decodeAssetResData(android.content.Context,java.lang.String) -> decodeAssetResData
    int dipToPixel(android.content.Context,int) -> dipToPixel
    int spToPixel(android.content.Context,int) -> spToPixel
    java.lang.String getString(android.content.Context,int) -> getString
com.autonavi.amap.mapcore.SelectedMapPoi -> com.autonavi.amap.mapcore.SelectedMapPoi:
    int winx -> winx
    int winy -> winy
    int mapx -> mapx
    int mapy -> mapy
    int iconXmin -> iconXmin
    int iconXmax -> iconXmax
    int iconYmin -> iconYmin
    int iconYmax -> iconYmax
    java.lang.String name -> name
    java.lang.String poiid -> poiid
com.autonavi.amap.mapcore.SingalThread -> com.autonavi.amap.mapcore.SingalThread:
    java.util.concurrent.locks.Lock mLock -> mLock
    java.util.concurrent.locks.Condition mWaiting -> mWaiting
    boolean isWaiting -> isWaiting
    java.lang.String logTag -> logTag
    void doWait() -> doWait
    void doAwake() -> doAwake
com.autonavi.amap.mapcore.TextTextureGenerator -> com.autonavi.amap.mapcore.TextTextureGenerator:
    int TEXT_FONTSIZE -> TEXT_FONTSIZE
    int TEXT_FONTSIZE_TRUE -> TEXT_FONTSIZE_TRUE
    int AN_LABEL_MAXCHARINLINE -> AN_LABEL_MAXCHARINLINE
    int AN_LABEL_MULITYLINE_SPAN -> AN_LABEL_MULITYLINE_SPAN
    int ALIGNCENTER -> ALIGNCENTER
    int ALIGNLEFT -> ALIGNLEFT
    int ALIGNRIGHT -> ALIGNRIGHT
    float base_line -> base_line
    float start_x -> start_x
    android.graphics.Paint text_paint -> text_paint
    int GetNearstSize2N(int) -> GetNearstSize2N
    byte[] getTextPixelBuffer(int) -> getTextPixelBuffer
    byte[] getCharsWidths(int[]) -> getCharsWidths
    android.graphics.Paint newPaint(java.lang.String,int,int) -> newPaint
    float getFontlength(android.graphics.Paint,java.lang.String) -> getFontlength
    float getFontHeight(android.graphics.Paint) -> getFontHeight
    void generaAsccIITexturePng() -> generaAsccIITexturePng
    java.lang.String getFontVersion() -> getFontVersion
com.autonavi.amap.mapcore.VMapDataCache -> com.autonavi.amap.mapcore.VMapDataCache:
    int MAXSIZE -> MAXSIZE
    java.util.HashMap vMapDataHs -> vMapDataHs
    java.util.ArrayList vMapDataList -> vMapDataList
    java.util.HashMap vCancelMapDataHs -> vCancelMapDataHs
    java.util.ArrayList vCancelMapDataList -> vCancelMapDataList
    com.autonavi.amap.mapcore.VMapDataCache instance -> instance
    com.autonavi.amap.mapcore.VMapDataCache getInstance() -> getInstance
    void reset() -> reset
    int getSize() -> getSize
    java.lang.String getKey(java.lang.String,int) -> getKey
    com.autonavi.amap.mapcore.e getRecoder(java.lang.String,int) -> getRecoder
    com.autonavi.amap.mapcore.e getCancelRecoder(java.lang.String,int) -> getCancelRecoder
    com.autonavi.amap.mapcore.e putRecoder(byte[],java.lang.String,int) -> putRecoder
    com.autonavi.amap.mapcore.e putCancelRecoder(byte[],java.lang.String,int) -> putCancelRecoder
com.autonavi.amap.mapcore.VTMCDataCache -> com.autonavi.amap.mapcore.VTMCDataCache:
    int MAXSIZE -> MAXSIZE
    int MAX_EXPIREDTIME -> MAX_EXPIREDTIME
    java.util.Hashtable vtmcHs -> vtmcHs
    java.util.ArrayList vtmcList -> vtmcList
    com.autonavi.amap.mapcore.VTMCDataCache instance -> instance
    int mNewestTimeStamp -> mNewestTimeStamp
    com.autonavi.amap.mapcore.VTMCDataCache getInstance() -> getInstance
    void reset() -> reset
    int getSize() -> getSize
    void deleteData(java.lang.String) -> deleteData
    com.autonavi.amap.mapcore.f getData(java.lang.String,boolean) -> getData
    com.autonavi.amap.mapcore.f putData(byte[]) -> putData
com.autonavi.amap.mapcore.a -> com.autonavi.amap.mapcore.a:
    com.autonavi.amap.mapcore.BaseMapLoader a -> a
    void run() -> run
com.autonavi.amap.mapcore.b -> com.autonavi.amap.mapcore.b:
    int a -> a
    java.lang.String b -> b
com.autonavi.amap.mapcore.c -> com.autonavi.amap.mapcore.c:
    java.lang.String a -> a
    int b -> b
com.autonavi.amap.mapcore.d -> com.autonavi.amap.mapcore.d:
    java.util.Hashtable d -> d
    int a -> a
    long b -> b
    boolean c -> c
    void a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
    void b() -> b
com.autonavi.amap.mapcore.e -> com.autonavi.amap.mapcore.e:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
com.autonavi.amap.mapcore.f -> com.autonavi.amap.mapcore.f:
    byte[] a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    void a(int) -> a
com.autonavi.aps.amapapi.model.AmapLoc -> com.autonavi.aps.amapapi.model.AmapLoc:
    java.lang.String a -> a
    double b -> b
    double c -> c
    double d -> d
    float e -> e
    float f -> f
    float g -> g
    long h -> h
    java.lang.String i -> i
    int j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    int C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    boolean G -> G
    boolean H -> H
    org.json.JSONObject I -> I
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int a() -> a
    int b() -> b
    void a(int) -> a
    void b(int) -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    boolean e() -> e
    void a(boolean) -> a
    boolean f() -> f
    void b(boolean) -> b
    java.lang.String g() -> g
    void c(java.lang.String) -> c
    double h() -> h
    void a(double) -> a
    void d(java.lang.String) -> d
    double i() -> i
    void b(double) -> b
    void e(java.lang.String) -> e
    void c(double) -> c
    float j() -> j
    void a(float) -> a
    void z(java.lang.String) -> z
    void b(float) -> b
    void A(java.lang.String) -> A
    void c(float) -> c
    void B(java.lang.String) -> B
    long k() -> k
    void a(long) -> a
    java.lang.String l() -> l
    void f(java.lang.String) -> f
    java.lang.String m() -> m
    void g(java.lang.String) -> g
    java.lang.String n() -> n
    void h(java.lang.String) -> h
    java.lang.String o() -> o
    void i(java.lang.String) -> i
    java.lang.String p() -> p
    void j(java.lang.String) -> j
    java.lang.String q() -> q
    void k(java.lang.String) -> k
    java.lang.String r() -> r
    void l(java.lang.String) -> l
    java.lang.String s() -> s
    void m(java.lang.String) -> m
    java.lang.String t() -> t
    void n(java.lang.String) -> n
    java.lang.String u() -> u
    void o(java.lang.String) -> o
    java.lang.String v() -> v
    void p(java.lang.String) -> p
    java.lang.String w() -> w
    void q(java.lang.String) -> q
    java.lang.String x() -> x
    void r(java.lang.String) -> r
    java.lang.String y() -> y
    void s(java.lang.String) -> s
    java.lang.String z() -> z
    void t(java.lang.String) -> t
    void u(java.lang.String) -> u
    java.lang.String A() -> A
    void v(java.lang.String) -> v
    void w(java.lang.String) -> w
    int B() -> B
    void x(java.lang.String) -> x
    java.lang.String C() -> C
    com.autonavi.aps.amapapi.model.AmapLoc D() -> D
    void y(java.lang.String) -> y
    org.json.JSONObject E() -> E
    void a(org.json.JSONObject) -> a
    java.lang.String F() -> F
    java.lang.String c(int) -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.autonavi.aps.amapapi.model.a -> com.autonavi.aps.amapapi.model.a:
    com.autonavi.aps.amapapi.model.AmapLoc a(android.os.Parcel) -> a
    com.autonavi.aps.amapapi.model.AmapLoc[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.autonavi.tbt.AvoidJamArea -> com.autonavi.tbt.AvoidJamArea:
    float x -> x
    float y -> y
    java.lang.String roadName -> roadName
    int length -> length
    int state -> state
    int priority -> priority
com.autonavi.tbt.Camera -> com.autonavi.tbt.Camera:
    int m_CameraType -> m_CameraType
    int m_CameraSpeed -> m_CameraSpeed
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
com.autonavi.tbt.CarLocation -> com.autonavi.tbt.CarLocation:
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    int m_CarDir -> m_CarDir
    int m_Speed -> m_Speed
    int m_MatchStatus -> m_MatchStatus
com.autonavi.tbt.DGNaviInfo -> com.autonavi.tbt.DGNaviInfo:
    int m_Type -> m_Type
    java.lang.String m_CurRoadName -> m_CurRoadName
    java.lang.String m_NextRoadName -> m_NextRoadName
    int m_SAPADist -> m_SAPADist
    int m_SAPAType -> m_SAPAType
    int m_CameraDist -> m_CameraDist
    int m_CameraType -> m_CameraType
    int m_CameraSpeed -> m_CameraSpeed
    int m_CameraIndex -> m_CameraIndex
    int m_Icon -> m_Icon
    int m_RouteRemainDis -> m_RouteRemainDis
    int m_RouteRemainTime -> m_RouteRemainTime
    int m_SegRemainDis -> m_SegRemainDis
    int m_SegRemainTime -> m_SegRemainTime
    int m_CarDirection -> m_CarDirection
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    int m_LimitedSpeed -> m_LimitedSpeed
    int m_CurSegNum -> m_CurSegNum
    int m_CurLinkNum -> m_CurLinkNum
    int m_CurPointNum -> m_CurPointNum
com.autonavi.tbt.EtaRestrictInfo -> com.autonavi.tbt.EtaRestrictInfo:
    float x -> x
    float y -> y
    java.lang.String roadName -> roadName
    int distance -> distance
    int type -> type
    int priority -> priority
com.autonavi.tbt.EventTip -> com.autonavi.tbt.EventTip:
    double lon -> lon
    double lat -> lat
    int type -> type
com.autonavi.tbt.FrameForTBT -> com.autonavi.tbt.FrameForTBT:
    int MESSAGE_CALCULATE_ROUTE_SUCCESS -> MESSAGE_CALCULATE_ROUTE_SUCCESS
    int MESSAGE_CALCULATE_ROUTE_FAILED -> MESSAGE_CALCULATE_ROUTE_FAILED
    int MESSAGE_YAW -> MESSAGE_YAW
    int MESSAGE_INIT_SUCCESS -> MESSAGE_INIT_SUCCESS
    int MESSAGE_INIT_FAILED -> MESSAGE_INIT_FAILED
    int MESSAGE_NOTIFY_PARALLEL_ROAD -> MESSAGE_NOTIFY_PARALLEL_ROAD
    com.amap.api.navi.model.NaviInfo naviInfo -> naviInfo
    com.autonavi.tbt.Camera[] camera -> camera
    int cameraIndex -> cameraIndex
    int errorCode -> errorCode
    com.amap.api.navi.h mTbtControl -> mTbtControl
    android.content.Context mContext -> mContext
    java.util.List mAMapNaviListeners -> mAMapNaviListeners
    com.autonavi.tbt.FrameForTBT$a naviListenerTriggerHandler -> naviListenerTriggerHandler
    boolean isReCalculateRouteForYaw -> isReCalculateRouteForYaw
    boolean isReCalculateRouteForTrafficJam -> isReCalculateRouteForTrafficJam
    com.autonavi.tbt.TrafficFacilityInfo mTrafficFacilityInfo -> mTrafficFacilityInfo
    com.amap.api.navi.model.AMapNaviCross cross -> cross
    com.amap.api.navi.model.AMapLaneInfo[] laneInfos -> laneInfos
    byte[] backgroundInfo -> backgroundInfo
    byte[] foregroundInfo -> foregroundInfo
    java.lang.StringBuffer playBuff -> playBuff
    int soundType -> soundType
    int arrayWayId -> arrayWayId
    com.amap.api.navi.model.c mCurrentGpsNaviLocation -> mCurrentGpsNaviLocation
    int naviType -> naviType
    boolean isGpsOpen -> isGpsOpen
    int routeCalculatedSize -> routeCalculatedSize
    int[] routeIds -> routeIds
    int parallelType -> parallelType
    void setReCalculateRouteForYaw(boolean) -> setReCalculateRouteForYaw
    void setReCalculateRouteForTrafficJam(boolean) -> setReCalculateRouteForTrafficJam
    void requestHttp(int,int,int,java.lang.String,java.lang.String,byte[],int) -> requestHttp
    com.amap.api.navi.model.NaviInfo getNaviInfo() -> getNaviInfo
    void setGpsValid(int) -> setGpsValid
    void updateNaviInfo(com.autonavi.tbt.DGNaviInfo) -> updateNaviInfo
    void showCross(int,byte[],byte[],int,int) -> showCross
    void hideCross() -> hideCross
    void showLaneInfo(byte[],byte[]) -> showLaneInfo
    com.amap.api.navi.model.AMapLaneInfo[] parseLaneInfoByte(byte[],byte[]) -> parseLaneInfoByte
    int simpleLaneAlgorithm(byte,byte) -> simpleLaneAlgorithm
    com.amap.api.navi.model.AMapLaneInfo[] initLaneInfos(int) -> initLaneInfos
    int parseDriveWaySize(byte[]) -> parseDriveWaySize
    boolean isComplexLane(int) -> isComplexLane
    int complexLaneAlgorithm(int,int) -> complexLaneAlgorithm
    void hideLaneInfo() -> hideLaneInfo
    void playNaviSound(int,java.lang.String,int) -> playNaviSound
    void endEmulatorNavi() -> endEmulatorNavi
    void arriveWay(int) -> arriveWay
    void routeDestroy() -> routeDestroy
    void carLocationChange(com.autonavi.tbt.CarLocation) -> carLocationChange
    void setRouteRequestState(int) -> setRouteRequestState
    void tmcUpdate() -> tmcUpdate
    void showTrafficPanel(int,byte[]) -> showTrafficPanel
    void hideTrafficPanel() -> hideTrafficPanel
    void rerouteForTMC(int,int,int) -> rerouteForTMC
    void tmcUpdate(int,int,int) -> tmcUpdate
    void showTrafficPanel(byte[]) -> showTrafficPanel
    int getPlayState() -> getPlayState
    void lockScreenNaviTips(java.lang.String,int,int) -> lockScreenNaviTips
    void notifyMessage(int,int,int,java.lang.String) -> notifyMessage
    void initSuccess() -> initSuccess
    void initFailure() -> initFailure
    void addAMapNaviListener(com.amap.api.navi.AMapNaviListener) -> addAMapNaviListener
    void removeNaviListener(com.amap.api.navi.AMapNaviListener) -> removeNaviListener
    void destroy() -> destroy
    void onStartNavi(int) -> onStartNavi
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    int matchRouteChanged(int) -> matchRouteChanged
    void offRoute(int) -> offRoute
    void updateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> updateTrafficFacility
    void updateServiceFacility(com.autonavi.tbt.ServiceFacilityInfo[]) -> updateServiceFacility
    void updateCameraInfo(com.autonavi.tbt.ViewCameraInfo[]) -> updateCameraInfo
    void updateTrack(com.autonavi.tbt.TrackPosition[]) -> updateTrack
    java.util.List access$000(com.autonavi.tbt.FrameForTBT) -> access$000
    int access$100(com.autonavi.tbt.FrameForTBT) -> access$100
    java.lang.StringBuffer access$200(com.autonavi.tbt.FrameForTBT) -> access$200
    int access$300(com.autonavi.tbt.FrameForTBT) -> access$300
    com.amap.api.navi.model.c access$400(com.autonavi.tbt.FrameForTBT) -> access$400
    int access$500(com.autonavi.tbt.FrameForTBT) -> access$500
    int access$600(com.autonavi.tbt.FrameForTBT) -> access$600
    com.amap.api.navi.h access$700(com.autonavi.tbt.FrameForTBT) -> access$700
    int[] access$800(com.autonavi.tbt.FrameForTBT) -> access$800
    boolean access$900(com.autonavi.tbt.FrameForTBT) -> access$900
    com.amap.api.navi.model.AMapLaneInfo[] access$1000(com.autonavi.tbt.FrameForTBT) -> access$1000
    byte[] access$1100(com.autonavi.tbt.FrameForTBT) -> access$1100
    byte[] access$1200(com.autonavi.tbt.FrameForTBT) -> access$1200
    com.autonavi.tbt.TrafficFacilityInfo access$1300(com.autonavi.tbt.FrameForTBT) -> access$1300
    com.amap.api.navi.model.AMapNaviCross access$1400(com.autonavi.tbt.FrameForTBT) -> access$1400
    int access$1500(com.autonavi.tbt.FrameForTBT) -> access$1500
com.autonavi.tbt.FrameForTBT$a -> com.autonavi.tbt.FrameForTBT$a:
    com.autonavi.tbt.FrameForTBT a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.autonavi.tbt.GPSDataInfo -> com.autonavi.tbt.GPSDataInfo:
    double lon -> lon
    double lat -> lat
    short speed -> speed
    short angle -> angle
    short year -> year
    short month -> month
    short day -> day
    short hour -> hour
    short minute -> minute
    short second -> second
com.autonavi.tbt.GeoPoint -> com.autonavi.tbt.GeoPoint:
    double m_Lon -> m_Lon
    double m_Lat -> m_Lat
com.autonavi.tbt.GroupSegment -> com.autonavi.tbt.GroupSegment:
    java.lang.String m_GroupName -> m_GroupName
    int m_nSegCount -> m_nSegCount
    int m_bArrivePass -> m_bArrivePass
    int m_nStartSegId -> m_nStartSegId
    int m_nDistance -> m_nDistance
    int m_nToll -> m_nToll
    int m_nStatus -> m_nStatus
    int m_nSpeed -> m_nSpeed
    int m_bIsSrucial -> m_bIsSrucial
com.autonavi.tbt.IFrameForTBT -> com.autonavi.tbt.IFrameForTBT:
    void requestHttp(int,int,int,java.lang.String,java.lang.String,byte[],int) -> requestHttp
    void updateNaviInfo(com.autonavi.tbt.DGNaviInfo) -> updateNaviInfo
    void showCross(int,byte[],byte[],int,int) -> showCross
    void hideCross() -> hideCross
    void showLaneInfo(byte[],byte[]) -> showLaneInfo
    void hideLaneInfo() -> hideLaneInfo
    void playNaviSound(int,java.lang.String,int) -> playNaviSound
    void endEmulatorNavi() -> endEmulatorNavi
    void arriveWay(int) -> arriveWay
    int matchRouteChanged(int) -> matchRouteChanged
    void offRoute(int) -> offRoute
    void rerouteForTMC(int,int,int) -> rerouteForTMC
    void routeDestroy() -> routeDestroy
    void carLocationChange(com.autonavi.tbt.CarLocation) -> carLocationChange
    void setRouteRequestState(int) -> setRouteRequestState
    void tmcUpdate(int,int,int) -> tmcUpdate
    void showTrafficPanel(byte[]) -> showTrafficPanel
    void hideTrafficPanel() -> hideTrafficPanel
    int getPlayState() -> getPlayState
    void lockScreenNaviTips(java.lang.String,int,int) -> lockScreenNaviTips
    void notifyMessage(int,int,int,java.lang.String) -> notifyMessage
    void updateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> updateTrafficFacility
    void updateServiceFacility(com.autonavi.tbt.ServiceFacilityInfo[]) -> updateServiceFacility
    void updateCameraInfo(com.autonavi.tbt.ViewCameraInfo[]) -> updateCameraInfo
    void updateTrack(com.autonavi.tbt.TrackPosition[]) -> updateTrack
com.autonavi.tbt.JamInfo -> com.autonavi.tbt.JamInfo:
    double lon -> lon
    double lat -> lat
    int speed -> speed
com.autonavi.tbt.LinkStatus -> com.autonavi.tbt.LinkStatus:
    short m_Speed -> m_Speed
    int m_Status -> m_Status
    int m_PassTime -> m_PassTime
    int m_LinkLen -> m_LinkLen
com.autonavi.tbt.LocationCode -> com.autonavi.tbt.LocationCode:
    int m_Code -> m_Code
    int m_Length -> m_Length
    int m_Time -> m_Time
    int m_State -> m_State
com.autonavi.tbt.MotionVector3D -> com.autonavi.tbt.MotionVector3D:
    double x -> x
    double y -> y
    double z -> z
com.autonavi.tbt.NaviAction -> com.autonavi.tbt.NaviAction:
    int m_MainAction -> m_MainAction
    int m_AssitAction -> m_AssitAction
com.autonavi.tbt.NaviGuideItem -> com.autonavi.tbt.NaviGuideItem:
    int m_Length -> m_Length
    int m_UseTime -> m_UseTime
    int m_Icon -> m_Icon
    java.lang.String m_Name -> m_Name
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
com.autonavi.tbt.NaviStaticInfo -> com.autonavi.tbt.NaviStaticInfo:
    int m_nStartSecond -> m_nStartSecond
    int m_nNormalRouteTime -> m_nNormalRouteTime
    int m_nEstimateTime -> m_nEstimateTime
    int m_nEstimateDist -> m_nEstimateDist
    int m_nDrivenTime -> m_nDrivenTime
    int m_nDrivenDist -> m_nDrivenDist
    int m_nAverageSpeed -> m_nAverageSpeed
    int m_nHighestSpeed -> m_nHighestSpeed
    int m_nOverspeedCount -> m_nOverspeedCount
    int m_nRerouteCount -> m_nRerouteCount
    int m_nBrakesCount -> m_nBrakesCount
    int m_nSlowTime -> m_nSlowTime
com.autonavi.tbt.PointOfInterest -> com.autonavi.tbt.PointOfInterest:
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    java.lang.String m_StrID -> m_StrID
    java.lang.String m_Typdecode -> m_Typdecode
    int m_Flag -> m_Flag
com.autonavi.tbt.RestAreaInfo -> com.autonavi.tbt.RestAreaInfo:
    int m_iRemainDist -> m_iRemainDist
    double m_dLongitude -> m_dLongitude
    double m_dLatitude -> m_dLatitude
    java.lang.String m_StrName -> m_StrName
com.autonavi.tbt.RestrictionInfo -> com.autonavi.tbt.RestrictionInfo:
    java.lang.String restrictionTitle -> restrictionTitle
    java.lang.String restrictionDesc -> restrictionDesc
    int titleLen -> titleLen
    int descLen -> descLen
    int titleType -> titleType
com.autonavi.tbt.RoadStatus -> com.autonavi.tbt.RoadStatus:
    short m_Speed -> m_Speed
    int m_Status -> m_Status
    int m_PassTime -> m_PassTime
    int m_DelayTime -> m_DelayTime
com.autonavi.tbt.RouteIncident -> com.autonavi.tbt.RouteIncident:
    float x -> x
    float y -> y
    java.lang.String title -> title
    java.lang.String desc -> desc
    int type -> type
    int priority -> priority
com.autonavi.tbt.ServiceFacilityInfo -> com.autonavi.tbt.ServiceFacilityInfo:
    int remainDist -> remainDist
    int type -> type
    java.lang.String name -> name
    double lon -> lon
    double lat -> lat
com.autonavi.tbt.TBT -> com.autonavi.tbt.TBT:
    int ERROR_STATE_ENV_FAILED -> ERROR_STATE_ENV_FAILED
    int SUCCEED_STATE -> SUCCEED_STATE
    int ERROR_STATE_PARAM_INVALID -> ERROR_STATE_PARAM_INVALID
    int ERROR_STATE_StartPointFalse -> ERROR_STATE_StartPointFalse
    int ERROR_STATE_IllegalRequest -> ERROR_STATE_IllegalRequest
    int ERROR_STATE_CallCenterError -> ERROR_STATE_CallCenterError
    int ERROR_STATE_EndPointFalse -> ERROR_STATE_EndPointFalse
    int ERROR_STATE_EncodeFalse -> ERROR_STATE_EncodeFalse
    int ERROR_STATE_LackPreview -> ERROR_STATE_LackPreview
    int ERROR_STATE_DataBufError -> ERROR_STATE_DataBufError
    int ERROR_STATE_StartNoRoad -> ERROR_STATE_StartNoRoad
    int ERROR_STATE_EndNoRoad -> ERROR_STATE_EndNoRoad
    int ERROR_STATE_HalfwayNoRoad -> ERROR_STATE_HalfwayNoRoad
    int ERROR_STATE_RouteFail -> ERROR_STATE_RouteFail
    int ERROR_STATE_FORBID -> ERROR_STATE_FORBID
    int OFFLINE_DATAMANAGER -> OFFLINE_DATAMANAGER
    int VERSION_GET_OP -> VERSION_GET_OP
    int DATA_ADD_OP -> DATA_ADD_OP
    int DATA_UPDAE_OP -> DATA_UPDAE_OP
    int DATA_FINISH_OP -> DATA_FINISH_OP
    int DATA_DELETE_OP -> DATA_DELETE_OP
    int init(com.autonavi.tbt.IFrameForTBT,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> init
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    java.lang.String getRouteVersion() -> getRouteVersion
    int startEmulatorNavi() -> startEmulatorNavi
    int startGPSNavi() -> startGPSNavi
    void stopEmulatorNavi() -> stopEmulatorNavi
    void pauseNavi() -> pauseNavi
    void resumeNavi() -> resumeNavi
    void stopNavi() -> stopNavi
    void manualRefreshTMC() -> manualRefreshTMC
    int playNaviManual() -> playNaviManual
    int playTrafficRadioManual(int) -> playTrafficRadioManual
    com.autonavi.tbt.TmcBarItem[] createTmcBar(int,int) -> createTmcBar
    void setGPSInfo(int,double,double,double,double,int,int,int,int,int,int,int,double,int) -> setGPSInfo
    void setMotionData(com.autonavi.tbt.MotionVector3D,com.autonavi.tbt.MotionVector3D,com.autonavi.tbt.MotionVector3D,double) -> setMotionData
    void setCarLocation(int,double,double) -> setCarLocation
    int requestRoute(int,int,int,double[],int,double[]) -> requestRoute
    int requestRouteWithStart(int,int,int,double[],int,double[],int,double[]) -> requestRouteWithStart
    int requestRouteWithPOI(int,int,int,int,com.autonavi.tbt.PointOfInterest[],int,com.autonavi.tbt.PointOfInterest[],int,com.autonavi.tbt.PointOfInterest[],double) -> requestRouteWithPOI
    void receiveNetData(int,int,byte[],int) -> receiveNetData
    void setNetRequestState(int,int,int) -> setNetRequestState
    int reroute(int,int) -> reroute
    int switchNaviRoute(int,int) -> switchNaviRoute
    void switchParallelRoad() -> switchParallelRoad
    int pushRouteData(int,int,byte[],int) -> pushRouteData
    int[] getAllRouteID() -> getAllRouteID
    int selectRoute(int) -> selectRoute
    int getRouteStrategy() -> getRouteStrategy
    int getRouteLength() -> getRouteLength
    int getRouteTime() -> getRouteTime
    int getSegNum() -> getSegNum
    int getSegLength(int) -> getSegLength
    int getSegTime(int) -> getSegTime
    int getSegLinkNum(int) -> getSegLinkNum
    int getSegChargeLength(int) -> getSegChargeLength
    int getSegTollCost(int) -> getSegTollCost
    int getSegAccessType(int) -> getSegAccessType
    double[] getSegCoor(int) -> getSegCoor
    java.lang.String getLinkRoadName(int,int) -> getLinkRoadName
    double[] getLinkCoor(int,int) -> getLinkCoor
    int getLinkLength(int,int) -> getLinkLength
    int getLinkTime(int,int) -> getLinkTime
    int getLinkFormWay(int,int) -> getLinkFormWay
    int getLinkRoadClass(int,int) -> getLinkRoadClass
    int getLinkType(int,int) -> getLinkType
    int getLinkIsBranched(int,int) -> getLinkIsBranched
    int getLinkIOFlag(int,int) -> getLinkIOFlag
    int getLinkCityCode(int,int) -> getLinkCityCode
    int haveTrafficLights(int,int) -> haveTrafficLights
    com.autonavi.tbt.LinkStatus getLinkTrafficStatus(int,int) -> getLinkTrafficStatus
    com.autonavi.tbt.GroupSegment[] getGroupSegmentList() -> getGroupSegmentList
    com.autonavi.tbt.NaviGuideItem[] getNaviGuideList() -> getNaviGuideList
    com.autonavi.tbt.Camera[] getAllCamera() -> getAllCamera
    com.autonavi.tbt.RestAreaInfo[] getRestAreas(int,int) -> getRestAreas
    com.autonavi.tbt.NaviStaticInfo getNaviStaticInfo() -> getNaviStaticInfo
    void openTMC() -> openTMC
    void closeTMC() -> closeTMC
    void openTrafficRadio() -> openTrafficRadio
    void closeTrafficRadio() -> closeTrafficRadio
    void openTrafficPanel() -> openTrafficPanel
    void closeTrafficPanel() -> closeTrafficPanel
    void openCamera() -> openCamera
    void closeCamera() -> closeCamera
    void setEmulatorSpeed(int) -> setEmulatorSpeed
    void setTimeForOneWord(int) -> setTimeForOneWord
    void setTMCRerouteStrategy(int) -> setTMCRerouteStrategy
    void setCrossDisplayMode(int) -> setCrossDisplayMode
    int setParam(java.lang.String,java.lang.String) -> setParam
    com.autonavi.tbt.GPSDataInfo[] getRecentGPS(int,int,int) -> getRecentGPS
    int getDiffToTMCRoute() -> getDiffToTMCRoute
    int getBypassLimitedRoad() -> getBypassLimitedRoad
    java.lang.String getSegTollPathName(int) -> getSegTollPathName
    int getDestDirection() -> getDestDirection
    com.autonavi.tbt.GeoPoint getRouteStartPos() -> getRouteStartPos
    com.autonavi.tbt.GeoPoint getRouteEndPos() -> getRouteEndPos
    com.autonavi.tbt.GeoPoint[] getPassPoints() -> getPassPoints
    com.autonavi.tbt.NaviAction getSegNaviAction(int) -> getSegNaviAction
    int moveToRoute(int) -> moveToRoute
    int getTMCRouteTime() -> getTMCRouteTime
    com.autonavi.tbt.JamInfo[] getJamInfoList() -> getJamInfoList
    void setDetectedMode(int) -> setDetectedMode
    void setClientNetType(int) -> setClientNetType
    com.autonavi.tbt.AvoidJamArea getAvoidJamArea() -> getAvoidJamArea
    com.autonavi.tbt.AvoidJamArea getAvoidInfo() -> getAvoidInfo
    com.autonavi.tbt.RouteIncident[] getRouteIncident() -> getRouteIncident
    com.autonavi.tbt.RestrictionInfo getRestrictionInfo() -> getRestrictionInfo
    com.autonavi.tbt.EventTip[] getNaviEvents() -> getNaviEvents
    com.autonavi.tbt.EtaRestrictInfo getEtaRestrictInfo() -> getEtaRestrictInfo
    int IOParam(int,int,int) -> IOParam
    byte[] getManeuverIcon(int,int,int,int,int,int,int) -> getManeuverIcon
    int getSegNumEx(int) -> getSegNumEx
    int getSegLinkNumEx(int,int) -> getSegLinkNumEx
    double[] getSegCoorEx(int,int) -> getSegCoorEx
    int getSegLengthEx(int,int) -> getSegLengthEx
    int getSegTimeEx(int,int) -> getSegTimeEx
    int getLinkLengthEx(int,int,int) -> getLinkLengthEx
    int getLinkTimeEx(int,int,int) -> getLinkTimeEx
    double[] getLinkCoorEx(int,int,int) -> getLinkCoorEx
    com.autonavi.tbt.LinkStatus getLinkTrafficStatusEx(int,int,int) -> getLinkTrafficStatusEx
    int getLinkOwnershipEx(int,int,int) -> getLinkOwnershipEx
    com.autonavi.tbt.GroupSegment[] getGroupSegmentListEx(int) -> getGroupSegmentListEx
    com.autonavi.tbt.NaviGuideItem[] getNaviGuideListEx(int) -> getNaviGuideListEx
    com.autonavi.tbt.Camera[] getAllCameraEx(int) -> getAllCameraEx
    com.autonavi.tbt.RestAreaInfo[] getRestAreasEx(int,int,int) -> getRestAreasEx
    int getRouteStrategyEx(int) -> getRouteStrategyEx
    int getRouteLengthEx(int) -> getRouteLengthEx
    int getRouteTimeEx(int) -> getRouteTimeEx
    int getSegChargeLengthEx(int,int) -> getSegChargeLengthEx
    int getSegTollCostEx(int,int) -> getSegTollCostEx
    int getSegAccessTypeEx(int,int) -> getSegAccessTypeEx
    java.lang.String getLinkRoadNameEx(int,int,int) -> getLinkRoadNameEx
    int getLinkFormWayEx(int,int,int) -> getLinkFormWayEx
    int getLinkRoadClassEx(int,int,int) -> getLinkRoadClassEx
    int getLinkTypeEx(int,int,int) -> getLinkTypeEx
    int getLinkIsBranchedEx(int,int,int) -> getLinkIsBranchedEx
    int getLinkIOFlagEx(int,int,int) -> getLinkIOFlagEx
    int getLinkCityCodeEx(int,int,int) -> getLinkCityCodeEx
    int haveTrafficLightsEx(int,int,int) -> haveTrafficLightsEx
com.autonavi.tbt.TmcBarItem -> com.autonavi.tbt.TmcBarItem:
    int m_Status -> m_Status
    int m_Length -> m_Length
com.autonavi.tbt.TrackPosition -> com.autonavi.tbt.TrackPosition:
    double m_dLongitude -> m_dLongitude
    double m_dLatitude -> m_dLatitude
    int m_iCarDir -> m_iCarDir
    int m_iSegId -> m_iSegId
    int m_iPointId -> m_iPointId
com.autonavi.tbt.TrafficFacilityInfo -> com.autonavi.tbt.TrafficFacilityInfo:
    double coor_X -> coor_X
    double coor_Y -> coor_Y
    int boardcastType -> boardcastType
    int distance -> distance
    int limitSpeed -> limitSpeed
    int getLimitSpeed() -> getLimitSpeed
    void setLimitSpeed(int) -> setLimitSpeed
    double getCoorX() -> getCoorX
    void setCoorX(double) -> setCoorX
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getBoardcastType() -> getBoardcastType
    void setBoardcastType(int) -> setBoardcastType
    double getCoorY() -> getCoorY
    void setCoorY(double) -> setCoorY
com.autonavi.tbt.ViewCameraInfo -> com.autonavi.tbt.ViewCameraInfo:
    int m_CameraType -> m_CameraType
    int m_CameraSpeed -> m_CameraSpeed
    int m_CameraDist -> m_CameraDist
    int m_CameraIndex -> m_CameraIndex
com.autonavi.tbt.a -> com.autonavi.tbt.a:
    int a -> a
    int b -> b
    com.amap.api.navi.h c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    byte[] i -> i
    com.autonavi.tbt.ay j -> j
    android.content.Context k -> k
    void a(int) -> a
    void b(int) -> b
    void a() -> a
    byte[] b() -> b
com.autonavi.tbt.aa -> com.autonavi.tbt.aa:
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a(long) -> a
com.autonavi.tbt.ab -> com.autonavi.tbt.ab:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.autonavi.tbt.ac -> com.autonavi.tbt.ac:
    com.autonavi.tbt.ag a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.autonavi.tbt.ab c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    android.database.sqlite.SQLiteDatabase b(boolean) -> b
    java.lang.String a(java.util.Map) -> a
    void a(java.lang.String,com.autonavi.tbt.ad) -> a
    void b(java.lang.String,com.autonavi.tbt.ad) -> b
    void a(java.lang.String,com.autonavi.tbt.ad,boolean) -> a
    void a(com.autonavi.tbt.ad) -> a
    void a(com.autonavi.tbt.ad,boolean) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.autonavi.tbt.ad) -> a
    java.util.List b(java.lang.String,com.autonavi.tbt.ad,boolean) -> b
com.autonavi.tbt.ad -> com.autonavi.tbt.ad:
    android.content.ContentValues a() -> a
    java.lang.Object a(android.database.Cursor) -> a
    java.lang.String b() -> b
com.autonavi.tbt.ae -> com.autonavi.tbt.ae:
    java.lang.String b() -> b
com.autonavi.tbt.af -> com.autonavi.tbt.af:
    java.lang.String b() -> b
com.autonavi.tbt.ag -> com.autonavi.tbt.ag:
    com.autonavi.tbt.ab a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.autonavi.tbt.ah -> com.autonavi.tbt.ah:
    java.lang.String b() -> b
com.autonavi.tbt.ai -> com.autonavi.tbt.ai:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    com.autonavi.tbt.ai u -> u
    com.autonavi.tbt.ai c() -> c
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.autonavi.tbt.aj -> com.autonavi.tbt.aj:
    com.autonavi.tbt.ac a -> a
    com.autonavi.tbt.ak a(int) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void a(com.autonavi.tbt.al,int) -> a
    void a(com.autonavi.tbt.al,com.autonavi.tbt.ak) -> a
    void b(com.autonavi.tbt.al,com.autonavi.tbt.ak) -> b
com.autonavi.tbt.ak -> com.autonavi.tbt.ak:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.autonavi.tbt.al e -> e
    android.content.ContentValues a() -> a
    com.autonavi.tbt.al b(android.database.Cursor) -> b
    void a(com.autonavi.tbt.al) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.autonavi.tbt.al -> com.autonavi.tbt.al:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
com.autonavi.tbt.am -> com.autonavi.tbt.am:
    com.autonavi.tbt.ac a -> a
    android.content.Context b -> b
    com.autonavi.tbt.ac a(android.content.Context,boolean) -> a
    java.util.List a() -> a
com.autonavi.tbt.an -> com.autonavi.tbt.an:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.autonavi.tbt.p g -> g
    android.content.ContentValues a() -> a
    com.autonavi.tbt.p b(android.database.Cursor) -> b
    java.lang.String b() -> b
    java.lang.String[] a(java.lang.String) -> a
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String c() -> c
    java.lang.Object a(android.database.Cursor) -> a
com.autonavi.tbt.ao -> com.autonavi.tbt.ao:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.autonavi.tbt.ap -> com.autonavi.tbt.ap:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    com.autonavi.tbt.as n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    void a(com.autonavi.tbt.as) -> a
    com.autonavi.tbt.ap a(java.io.File,int,int,long) -> a
    void e() -> e
    void d(java.lang.String) -> d
    void f() -> f
    void g() -> g
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.autonavi.tbt.ap$b a(java.lang.String) -> a
    com.autonavi.tbt.ap$a b(java.lang.String) -> b
    com.autonavi.tbt.ap$a a(java.lang.String,long) -> a
    void a(com.autonavi.tbt.ap$a,boolean) -> a
    boolean h() -> h
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void i() -> i
    void b() -> b
    void close() -> close
    void j() -> j
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.autonavi.tbt.ap) -> a
    void b(com.autonavi.tbt.ap) -> b
    boolean c(com.autonavi.tbt.ap) -> c
    void d(com.autonavi.tbt.ap) -> d
    int a(com.autonavi.tbt.ap,int) -> a
    int e(com.autonavi.tbt.ap) -> e
    java.io.File f(com.autonavi.tbt.ap) -> f
    java.io.OutputStream d() -> d
    void a(com.autonavi.tbt.ap,com.autonavi.tbt.ap$a,boolean) -> a
com.autonavi.tbt.ap$a -> com.autonavi.tbt.ap$a:
    com.autonavi.tbt.ap$c b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.autonavi.tbt.ap a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.autonavi.tbt.ap$c a(com.autonavi.tbt.ap$a) -> a
    boolean[] b(com.autonavi.tbt.ap$a) -> b
    boolean a(com.autonavi.tbt.ap$a,boolean) -> a
com.autonavi.tbt.ap$a$a -> com.autonavi.tbt.ap$a$a:
    com.autonavi.tbt.ap$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.autonavi.tbt.ap$b -> com.autonavi.tbt.ap$b:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.autonavi.tbt.ap a -> a
    void close() -> close
com.autonavi.tbt.ap$c -> com.autonavi.tbt.ap$c:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.autonavi.tbt.ap$a e -> e
    long f -> f
    com.autonavi.tbt.ap a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.autonavi.tbt.ap$c,boolean) -> a
    com.autonavi.tbt.ap$a a(com.autonavi.tbt.ap$c,com.autonavi.tbt.ap$a) -> a
    void a(com.autonavi.tbt.ap$c,java.lang.String[]) -> a
    com.autonavi.tbt.ap$a a(com.autonavi.tbt.ap$c) -> a
    long[] b(com.autonavi.tbt.ap$c) -> b
    java.lang.String c(com.autonavi.tbt.ap$c) -> c
    boolean d(com.autonavi.tbt.ap$c) -> d
    long e(com.autonavi.tbt.ap$c) -> e
    long a(com.autonavi.tbt.ap$c,long) -> a
com.autonavi.tbt.aq -> com.autonavi.tbt.aq:
    com.autonavi.tbt.ap a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.autonavi.tbt.ar -> com.autonavi.tbt.ar:
    void write(int) -> write
com.autonavi.tbt.as -> com.autonavi.tbt.as:
    void a(java.lang.String) -> a
com.autonavi.tbt.at -> com.autonavi.tbt.at:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.autonavi.tbt.at) -> a
com.autonavi.tbt.at$1 -> com.autonavi.tbt.at$1:
    com.autonavi.tbt.at a -> a
    java.lang.String toString() -> toString
com.autonavi.tbt.au -> com.autonavi.tbt.au:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.autonavi.tbt.av -> com.autonavi.tbt.av:
    com.autonavi.tbt.av a -> a
    com.autonavi.tbt.av a() -> a
    byte[] a(com.autonavi.tbt.az) -> a
    void b(com.autonavi.tbt.az) -> b
    com.autonavi.tbt.bb a(com.autonavi.tbt.az,boolean) -> a
com.autonavi.tbt.aw -> com.autonavi.tbt.aw:
    com.autonavi.tbt.ax a -> a
    int b -> b
    int c -> c
    boolean d -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy f -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    com.autonavi.tbt.bb a(java.lang.String,java.util.Map,java.util.Map) -> a
    com.autonavi.tbt.bb a(java.lang.String,java.util.Map,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    com.autonavi.tbt.bb a(java.net.HttpURLConnection) -> a
    void a(java.util.Map,java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.Map) -> a
com.autonavi.tbt.ax -> com.autonavi.tbt.ax:
    void a() -> a
com.autonavi.tbt.ay -> com.autonavi.tbt.ay:
    com.autonavi.tbt.ay a -> a
    com.autonavi.tbt.be b -> b
    android.os.Handler c -> c
    com.autonavi.tbt.ay a(boolean) -> a
    com.autonavi.tbt.ay a(boolean,int) -> a
    byte[] a(com.autonavi.tbt.az) -> a
    byte[] c(com.autonavi.tbt.az) -> c
    com.autonavi.tbt.bb b(com.autonavi.tbt.az,boolean) -> b
    void a(com.autonavi.tbt.h,com.autonavi.tbt.ba) -> a
    void a(com.autonavi.tbt.bb,com.autonavi.tbt.ba) -> a
    void a(com.autonavi.tbt.ay,com.autonavi.tbt.bb,com.autonavi.tbt.ba) -> a
    void a(com.autonavi.tbt.ay,com.autonavi.tbt.h,com.autonavi.tbt.ba) -> a
com.autonavi.tbt.ay$1 -> com.autonavi.tbt.ay$1:
    com.autonavi.tbt.az a -> a
    com.autonavi.tbt.ba b -> b
    com.autonavi.tbt.ay c -> c
    void a() -> a
com.autonavi.tbt.ay$a -> com.autonavi.tbt.ay$a:
    void handleMessage(android.os.Message) -> handleMessage
com.autonavi.tbt.az -> com.autonavi.tbt.az:
    int e -> e
    int f -> f
    java.net.Proxy g -> g
    java.lang.String e() -> e
    byte[] f() -> f
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
    void a(int) -> a
    void b(int) -> b
    byte[] d() -> d
    void a(java.net.Proxy) -> a
com.autonavi.tbt.b -> com.autonavi.tbt.b:
    java.lang.String l -> l
    java.lang.String m -> m
    void a() -> a
com.autonavi.tbt.ba -> com.autonavi.tbt.ba:
    void a() -> a
    void a(java.util.Map,byte[]) -> a
    void a(com.autonavi.tbt.h) -> a
com.autonavi.tbt.bb -> com.autonavi.tbt.bb:
    byte[] a -> a
    java.util.Map b -> b
com.autonavi.tbt.bc -> com.autonavi.tbt.bc:
    com.autonavi.tbt.aw a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.autonavi.tbt.bd -> com.autonavi.tbt.bd:
    com.autonavi.tbt.h a -> a
    com.autonavi.tbt.ba b -> b
com.autonavi.tbt.be -> com.autonavi.tbt.be:
    com.autonavi.tbt.be a -> a
    java.util.concurrent.ExecutorService b -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    com.autonavi.tbt.bf$a d -> d
    com.autonavi.tbt.be a(int) -> a
    void a(com.autonavi.tbt.bf) -> a
    void a() -> a
    void b() -> b
    boolean b(com.autonavi.tbt.bf) -> b
    void a(com.autonavi.tbt.bf,java.util.concurrent.Future) -> a
    void a(com.autonavi.tbt.bf,boolean) -> a
    void a(com.autonavi.tbt.be,com.autonavi.tbt.bf,boolean) -> a
com.autonavi.tbt.bf -> com.autonavi.tbt.bf:
    com.autonavi.tbt.bf$a n -> n
    void run() -> run
    void a() -> a
com.autonavi.tbt.bf$a -> com.autonavi.tbt.bf$a:
    void a(com.autonavi.tbt.bf) -> a
    void b(com.autonavi.tbt.bf) -> b
com.autonavi.tbt.bg -> com.autonavi.tbt.bg:
    com.autonavi.tbt.be a -> a
    void a(com.autonavi.tbt.bf) -> a
    void b(com.autonavi.tbt.bf) -> b
com.autonavi.tbt.bh -> com.autonavi.tbt.bh:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.tbt.bi -> com.autonavi.tbt.bi:
    boolean a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.autonavi.tbt.bj -> com.autonavi.tbt.bj:
    short a -> a
    int b -> b
    com.autonavi.tbt.bl c -> c
    com.autonavi.tbt.bh d -> d
    com.autonavi.tbt.bu e -> e
    com.autonavi.tbt.bq f -> f
    com.autonavi.tbt.bo g -> g
com.autonavi.tbt.bk -> com.autonavi.tbt.bk:
    boolean a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object i -> i
    com.autonavi.tbt.bk j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    long q -> q
    android.content.Context r -> r
    android.location.LocationManager s -> s
    com.autonavi.tbt.bw t -> t
    com.autonavi.tbt.ck u -> u
    com.autonavi.tbt.cr v -> v
    com.autonavi.tbt.bt w -> w
    com.autonavi.tbt.cq x -> x
    com.autonavi.tbt.cj y -> y
    com.autonavi.tbt.bn z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    com.autonavi.tbt.ch C -> C
    android.location.Location D -> D
    com.autonavi.tbt.cg E -> E
    android.os.Handler F -> F
    com.autonavi.tbt.ci G -> G
    android.location.LocationListener H -> H
    android.content.BroadcastReceiver I -> I
    android.location.GpsStatus J -> J
    int K -> K
    int L -> L
    java.util.HashMap M -> M
    int N -> N
    int O -> O
    float P -> P
    float Q -> Q
    float R -> R
    float S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    com.autonavi.tbt.bk a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    com.autonavi.tbt.bs e() -> e
    void a(com.autonavi.tbt.bs,java.lang.String) -> a
    boolean f() -> f
    int g() -> g
    void b(int) -> b
    void o() -> o
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.autonavi.tbt.bk) -> a
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    int l() -> l
    com.autonavi.tbt.cj b(com.autonavi.tbt.bk) -> b
    long a(com.autonavi.tbt.bk,long) -> a
    android.location.Location a(com.autonavi.tbt.bk,android.location.Location) -> a
    boolean c(com.autonavi.tbt.bk) -> c
    void a(com.autonavi.tbt.bk,android.location.Location,int,long) -> a
    void a(com.autonavi.tbt.bk,java.lang.String) -> a
    android.os.Looper a(com.autonavi.tbt.bk,android.os.Looper) -> a
    com.autonavi.tbt.cg a(com.autonavi.tbt.bk,com.autonavi.tbt.cg) -> a
    com.autonavi.tbt.cg d(com.autonavi.tbt.bk) -> d
    android.location.LocationManager e(com.autonavi.tbt.bk) -> e
    android.os.Handler a(com.autonavi.tbt.bk,android.os.Handler) -> a
    int m() -> m
    android.location.LocationListener f(com.autonavi.tbt.bk) -> f
    android.location.Location g(com.autonavi.tbt.bk) -> g
    int h(com.autonavi.tbt.bk) -> h
    android.location.GpsStatus i(com.autonavi.tbt.bk) -> i
    android.location.GpsStatus a(com.autonavi.tbt.bk,android.location.GpsStatus) -> a
    int a(com.autonavi.tbt.bk,int) -> a
    int b(com.autonavi.tbt.bk,int) -> b
    java.util.HashMap a(com.autonavi.tbt.bk,java.util.HashMap) -> a
    int n() -> n
    int j(com.autonavi.tbt.bk) -> j
    int k(com.autonavi.tbt.bk) -> k
    int c(com.autonavi.tbt.bk,int) -> c
    com.autonavi.tbt.bw l(com.autonavi.tbt.bk) -> l
    int d(com.autonavi.tbt.bk,int) -> d
    java.util.HashMap m(com.autonavi.tbt.bk) -> m
    int b(com.autonavi.tbt.bk,java.util.HashMap) -> b
    android.os.Handler n(com.autonavi.tbt.bk) -> n
    int e(com.autonavi.tbt.bk,int) -> e
    int o(com.autonavi.tbt.bk) -> o
    int a(com.autonavi.tbt.bk,com.autonavi.tbt.bi,int) -> a
    int p(com.autonavi.tbt.bk) -> p
    java.lang.String b(com.autonavi.tbt.bk,java.lang.String) -> b
com.autonavi.tbt.bl -> com.autonavi.tbt.bl:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.tbt.bm -> com.autonavi.tbt.bm:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.autonavi.tbt.bn -> com.autonavi.tbt.bn:
    com.autonavi.tbt.bm a(android.location.Location,com.autonavi.tbt.bw,int,byte,long,boolean) -> a
com.autonavi.tbt.bo -> com.autonavi.tbt.bo:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.tbt.bp -> com.autonavi.tbt.bp:
    byte a -> a
    byte[] b -> b
    double c -> c
    int d -> d
    int e -> e
    double f -> f
    byte g -> g
    byte h -> h
    byte[] i -> i
    byte j -> j
com.autonavi.tbt.bq -> com.autonavi.tbt.bq:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.tbt.br -> com.autonavi.tbt.br:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.autonavi.tbt.bs -> com.autonavi.tbt.bs:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.autonavi.tbt.bt -> com.autonavi.tbt.bt:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File d() -> d
    java.util.ArrayList a(java.io.File[]) -> a
    int e() -> e
    java.io.File f() -> f
    java.io.File c(long) -> c
    byte[] a(byte[]) -> a
    com.autonavi.tbt.bm a(android.location.Location,com.autonavi.tbt.bw,int,byte,long,boolean) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
com.autonavi.tbt.bu -> com.autonavi.tbt.bu:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.tbt.bv -> com.autonavi.tbt.bv:
    short a -> a
    int b -> b
    byte c -> c
com.autonavi.tbt.bw -> com.autonavi.tbt.bw:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    android.hardware.SensorManager e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    int q -> q
    java.lang.String r -> r
    long s -> s
    long t -> t
    com.autonavi.tbt.bw u -> u
    com.autonavi.tbt.by v -> v
    com.autonavi.tbt.bz w -> w
    android.telephony.CellLocation x -> x
    com.autonavi.tbt.ca y -> y
    java.util.List z -> z
    java.util.Timer A -> A
    java.lang.Thread B -> B
    android.os.Looper C -> C
    int D -> D
    com.autonavi.tbt.bw a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List a(boolean) -> a
    byte k() -> k
    java.util.List l() -> l
    java.util.List m() -> m
    long n() -> n
    java.lang.String o() -> o
    int p() -> p
    int q() -> q
    int r() -> r
    java.lang.String s() -> s
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List t() -> t
    void a(int) -> a
    void u() -> u
    void v() -> v
    byte w() -> w
    java.lang.String b(int) -> b
    double c(int) -> c
    int d(int) -> d
    int e(int) -> e
    double f(int) -> f
    byte g(int) -> g
    java.lang.String h(int) -> h
    byte i(int) -> i
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    void z() -> z
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean a(android.telephony.CellLocation) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    android.telephony.CellLocation A() -> A
    android.telephony.CellLocation b(java.util.List) -> b
    boolean c(android.content.Context) -> c
    android.content.Context x() -> x
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.autonavi.tbt.bw,android.os.Looper) -> a
    java.util.Timer a(com.autonavi.tbt.bw,java.util.Timer) -> a
    com.autonavi.tbt.by a(com.autonavi.tbt.bw,com.autonavi.tbt.by) -> a
    com.autonavi.tbt.by a(com.autonavi.tbt.bw) -> a
    void a(com.autonavi.tbt.bw,android.telephony.PhoneStateListener) -> a
    com.autonavi.tbt.bz a(com.autonavi.tbt.bw,com.autonavi.tbt.bz) -> a
    com.autonavi.tbt.bz b(com.autonavi.tbt.bw) -> b
    void a(com.autonavi.tbt.bw,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.autonavi.tbt.bw) -> c
    java.util.Timer d(com.autonavi.tbt.bw) -> d
    java.util.List e(com.autonavi.tbt.bw) -> e
    long a(com.autonavi.tbt.bw,long) -> a
    int y() -> y
    boolean a(com.autonavi.tbt.bw,boolean) -> a
    android.telephony.TelephonyManager f(com.autonavi.tbt.bw) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.autonavi.tbt.bw,int) -> a
    int b(com.autonavi.tbt.bw,int) -> b
    long b(com.autonavi.tbt.bw,long) -> b
    android.telephony.CellLocation a(com.autonavi.tbt.bw,android.telephony.CellLocation) -> a
    boolean g(com.autonavi.tbt.bw) -> g
    int c(com.autonavi.tbt.bw,int) -> c
    int h(com.autonavi.tbt.bw) -> h
    long c(com.autonavi.tbt.bw,long) -> c
    java.lang.String a(com.autonavi.tbt.bw,java.lang.String) -> a
com.autonavi.tbt.bx -> com.autonavi.tbt.bx:
    com.autonavi.tbt.bw a -> a
    void run() -> run
com.autonavi.tbt.by -> com.autonavi.tbt.by:
    com.autonavi.tbt.bw a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.autonavi.tbt.bz -> com.autonavi.tbt.bz:
    com.autonavi.tbt.bw a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.autonavi.tbt.c -> com.autonavi.tbt.c:
    java.util.Map a -> a
    java.util.Map b -> b
    java.lang.String c -> c
    byte[] d -> d
    void a(java.util.Map) -> a
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    byte[] d() -> d
    void a(byte[]) -> a
com.autonavi.tbt.ca -> com.autonavi.tbt.ca:
    com.autonavi.tbt.bw a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.autonavi.tbt.cb -> com.autonavi.tbt.cb:
    com.autonavi.tbt.ca a -> a
    void run() -> run
com.autonavi.tbt.cc -> com.autonavi.tbt.cc:
    com.autonavi.tbt.bk a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.autonavi.tbt.cd -> com.autonavi.tbt.cd:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.autonavi.tbt.ce -> com.autonavi.tbt.ce:
    com.autonavi.tbt.bk a -> a
    void run() -> run
com.autonavi.tbt.cf -> com.autonavi.tbt.cf:
    com.autonavi.tbt.ce a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.autonavi.tbt.cg -> com.autonavi.tbt.cg:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.autonavi.tbt.bk h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.autonavi.tbt.ch -> com.autonavi.tbt.ch:
    com.autonavi.tbt.bk a -> a
    void run() -> run
com.autonavi.tbt.ci -> com.autonavi.tbt.ci:
    com.autonavi.tbt.bk a -> a
    void a() -> a
com.autonavi.tbt.cj -> com.autonavi.tbt.cj:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.autonavi.tbt.ci k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.autonavi.tbt.ci) -> a
    com.autonavi.tbt.cj a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.autonavi.tbt.ck -> com.autonavi.tbt.ck:
    int c -> c
    int d -> d
    com.autonavi.tbt.bw e -> e
    float f -> f
    com.autonavi.tbt.co a -> a
    com.autonavi.tbt.cl b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.autonavi.tbt.cl -> com.autonavi.tbt.cl:
    com.autonavi.tbt.cm a -> a
    android.location.Location b -> b
com.autonavi.tbt.cm -> com.autonavi.tbt.cm:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.autonavi.tbt.cn -> com.autonavi.tbt.cn:
    java.lang.String a -> a
com.autonavi.tbt.co -> com.autonavi.tbt.co:
    java.util.List a -> a
    android.location.Location b -> b
com.autonavi.tbt.cp -> com.autonavi.tbt.cp:
    boolean a -> a
    java.lang.String[] b -> b
    boolean a(java.lang.String[],java.lang.String) -> a
com.autonavi.tbt.cq -> com.autonavi.tbt.cq:
    java.io.RandomAccessFile a -> a
    com.autonavi.tbt.bt b -> b
    java.io.File c -> c
    com.autonavi.tbt.bs a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.autonavi.tbt.bs) -> a
com.autonavi.tbt.cr -> com.autonavi.tbt.cr:
    java.io.RandomAccessFile a -> a
    com.autonavi.tbt.bt b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.autonavi.tbt.cs -> com.autonavi.tbt.cs:
    java.lang.String a -> a
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
com.autonavi.tbt.d -> com.autonavi.tbt.d:
    void a() -> a
com.autonavi.tbt.e -> com.autonavi.tbt.e:
    void a() -> a
com.autonavi.tbt.f -> com.autonavi.tbt.f:
    float a -> a
    int b -> b
    int[] c -> c
    double[] d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    int g -> g
    double h -> h
    java.text.SimpleDateFormat i -> i
    void a(int) -> a
    java.lang.String[] a() -> a
    void a(java.lang.Object[]) -> a
    void a(java.lang.Throwable) -> a
    java.lang.String b() -> b
    long c() -> c
    long d() -> d
    java.lang.String a(long,java.lang.String) -> a
    java.lang.String b(int) -> b
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String c(int) -> c
    java.lang.String d(int) -> d
    com.amap.api.navi.model.NaviLatLng a(double,double,double,double) -> a
    com.amap.api.navi.model.NaviLatLng a(com.amap.api.navi.model.NaviLatLng,com.amap.api.navi.model.NaviLatLng,double) -> a
    int a(com.amap.api.navi.model.NaviLatLng,com.amap.api.navi.model.NaviLatLng) -> a
    int b(double,double,double,double) -> b
    void a(android.content.Context) -> a
    int a(android.content.Context,int) -> a
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
com.autonavi.tbt.g -> com.autonavi.tbt.g:
    android.content.res.AssetManager a -> a
    android.content.res.Resources b -> b
    android.content.res.Resources c -> c
    boolean d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    android.content.res.Resources$Theme n -> n
    android.content.res.Resources$Theme o -> o
    java.lang.reflect.Field p -> p
    java.lang.reflect.Field q -> q
    android.app.Activity r -> r
    boolean a(android.content.Context) -> a
    android.content.res.Resources a() -> a
    android.content.res.Resources a(android.content.Context,android.content.res.AssetManager) -> a
    android.content.res.AssetManager b(java.lang.String) -> b
    boolean b(android.content.Context) -> b
    java.io.OutputStream a(java.io.InputStream,java.io.OutputStream) -> a
    boolean a(java.io.InputStream) -> a
    void f() -> f
    void c(android.content.Context) -> c
    android.view.View a(android.app.Activity,int,android.view.ViewGroup) -> a
    boolean a(android.app.Activity) -> a
    android.content.res.Resources$Theme g() -> g
    java.lang.reflect.Field h() -> h
    java.lang.reflect.Field i() -> i
    int a(java.lang.String) -> a
    void b(android.app.Activity) -> b
    android.view.animation.Animation a(android.content.Context,int) -> a
    android.view.animation.Animation a(android.content.Context,org.xmlpull.v1.XmlPullParser) -> a
    android.view.animation.Animation a(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet) -> a
    void b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
com.autonavi.tbt.g$a -> com.autonavi.tbt.g$a:
    boolean accept(java.io.File,java.lang.String) -> accept
com.autonavi.tbt.h -> com.autonavi.tbt.h:
    java.lang.String a -> a
    int b -> b
    int a() -> a
    void a(java.lang.String) -> a
com.autonavi.tbt.i -> com.autonavi.tbt.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String g(android.content.Context) -> g
    java.lang.String f(android.content.Context) -> f
com.autonavi.tbt.j -> com.autonavi.tbt.j:
    int a -> a
    java.lang.String b -> b
    com.autonavi.tbt.p c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean a(android.content.Context,com.autonavi.tbt.p,boolean) -> a
    boolean a(android.content.Context,com.autonavi.tbt.p) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean a(byte[]) -> a
    java.util.Map a(android.content.Context) -> a
com.autonavi.tbt.k -> com.autonavi.tbt.k:
    java.lang.String a(android.content.Context,com.autonavi.tbt.p,java.util.Map,boolean) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
    java.lang.String a(android.content.Context,com.autonavi.tbt.p) -> a
    void a(java.io.ByteArrayOutputStream,java.lang.String) -> a
    void a(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.autonavi.tbt.l -> com.autonavi.tbt.l:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    android.net.NetworkInfo n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.util.List a(java.util.List) -> a
    boolean a(boolean) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String) -> a
com.autonavi.tbt.l$a -> com.autonavi.tbt.l$a:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.autonavi.tbt.m -> com.autonavi.tbt.m:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] a(byte[],java.security.Key) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String b(byte[]) -> b
com.autonavi.tbt.n -> com.autonavi.tbt.n:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
com.autonavi.tbt.o -> com.autonavi.tbt.o:
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy b(android.content.Context) -> b
    boolean a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    int b() -> b
com.autonavi.tbt.p -> com.autonavi.tbt.p:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    java.lang.String[] f() -> f
com.autonavi.tbt.p$1 -> com.autonavi.tbt.p$1:
com.autonavi.tbt.p$a -> com.autonavi.tbt.p$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    com.autonavi.tbt.p$a a(boolean) -> a
    com.autonavi.tbt.p$a a(java.lang.String) -> a
    com.autonavi.tbt.p$a a(java.lang.String[]) -> a
    com.autonavi.tbt.p a() -> a
    java.lang.String a(com.autonavi.tbt.p$a) -> a
    java.lang.String b(com.autonavi.tbt.p$a) -> b
    java.lang.String c(com.autonavi.tbt.p$a) -> c
    boolean d(com.autonavi.tbt.p$a) -> d
    java.lang.String e(com.autonavi.tbt.p$a) -> e
    java.lang.String[] f(com.autonavi.tbt.p$a) -> f
com.autonavi.tbt.q -> com.autonavi.tbt.q:
    byte[] a() -> a
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    byte[] e(byte[]) -> e
com.autonavi.tbt.r -> com.autonavi.tbt.r:
    java.util.Map a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(java.util.Map) -> a
    void a(java.lang.String) -> a
    void b(java.util.Map) -> b
    java.lang.String c() -> c
    java.util.Map a() -> a
    java.util.Map b() -> b
com.autonavi.tbt.s -> com.autonavi.tbt.s:
    java.lang.String a(android.content.Context,byte[]) -> a
com.autonavi.tbt.t -> com.autonavi.tbt.t:
    android.content.Context d -> d
    java.util.concurrent.ExecutorService e -> e
    java.util.concurrent.ExecutorService a() -> a
    com.autonavi.tbt.t b() -> b
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
com.autonavi.tbt.u -> com.autonavi.tbt.u:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    int d -> d
    com.autonavi.tbt.u$a e -> e
    int a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    com.autonavi.tbt.as a(com.autonavi.tbt.aj) -> a
com.autonavi.tbt.u$1 -> com.autonavi.tbt.u$1:
com.autonavi.tbt.u$a -> com.autonavi.tbt.u$a:
    com.autonavi.tbt.aj b -> b
    com.autonavi.tbt.u a -> a
    void a(java.lang.String) -> a
com.autonavi.tbt.v -> com.autonavi.tbt.v:
    com.autonavi.tbt.v a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    boolean c -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
com.autonavi.tbt.w -> com.autonavi.tbt.w:
    com.autonavi.tbt.w$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.autonavi.tbt.as a(com.autonavi.tbt.aj) -> a
com.autonavi.tbt.w$a -> com.autonavi.tbt.w$a:
    com.autonavi.tbt.aj b -> b
    com.autonavi.tbt.w a -> a
    void a(java.lang.String) -> a
com.autonavi.tbt.x -> com.autonavi.tbt.x:
    com.autonavi.tbt.x$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.autonavi.tbt.as a(com.autonavi.tbt.aj) -> a
com.autonavi.tbt.x$a -> com.autonavi.tbt.x$a:
    com.autonavi.tbt.aj b -> b
    com.autonavi.tbt.x a -> a
    void a(java.lang.String) -> a
com.autonavi.tbt.y -> com.autonavi.tbt.y:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
com.autonavi.tbt.y$1 -> com.autonavi.tbt.y$1:
    int a -> a
    android.content.Context b -> b
    java.lang.Throwable c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.autonavi.tbt.z -> com.autonavi.tbt.z:
    com.autonavi.tbt.p a -> a
    com.autonavi.tbt.z a(int) -> a
    void a(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(com.autonavi.tbt.p) -> a
    java.util.List a(android.content.Context) -> a
    void a(com.autonavi.tbt.aj,java.lang.String,java.lang.String,int,boolean) -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    com.autonavi.tbt.as a(com.autonavi.tbt.aj) -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String a(android.content.Context,com.autonavi.tbt.p) -> a
    java.lang.String b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.autonavi.tbt.aj) -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.autonavi.wtbt.CarLocation -> com.autonavi.wtbt.CarLocation:
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    int m_CarDir -> m_CarDir
    int m_Speed -> m_Speed
    int m_MatchStatus -> m_MatchStatus
com.autonavi.wtbt.DGNaviInfo -> com.autonavi.wtbt.DGNaviInfo:
    int m_Type -> m_Type
    java.lang.String m_CurRoadName -> m_CurRoadName
    java.lang.String m_NextRoadName -> m_NextRoadName
    int m_SAPADist -> m_SAPADist
    int m_SAPAType -> m_SAPAType
    int m_CameraDist -> m_CameraDist
    int m_CameraType -> m_CameraType
    int m_CameraSpeed -> m_CameraSpeed
    int m_CameraIndex -> m_CameraIndex
    int m_Icon -> m_Icon
    int m_RouteRemainDis -> m_RouteRemainDis
    int m_RouteRemainTime -> m_RouteRemainTime
    int m_SegRemainDis -> m_SegRemainDis
    int m_SegRemainTime -> m_SegRemainTime
    int m_CarDirection -> m_CarDirection
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    int m_LimitedSpeed -> m_LimitedSpeed
    int m_CurSegNum -> m_CurSegNum
    int m_CurLinkNum -> m_CurLinkNum
    int m_CurPointNum -> m_CurPointNum
    int m_Split -> m_Split
com.autonavi.wtbt.FrameForWTBT -> com.autonavi.wtbt.FrameForWTBT:
    com.amap.api.navi.model.NaviInfo currentNaviInfo -> currentNaviInfo
    int playType -> playType
    java.lang.String playSound -> playSound
    int arriveWayId -> arriveWayId
    int matchRouteChangeId -> matchRouteChangeId
    com.amap.api.navi.model.c mCarChangeNaviLocation -> mCarChangeNaviLocation
    com.autonavi.wtbt.CarLocation mCarProjectionChange -> mCarProjectionChange
    int errorcode -> errorcode
    byte[] panel -> panel
    java.lang.String lockSoundStr -> lockSoundStr
    int lockTrunIcon -> lockTrunIcon
    int segRemainLen -> segRemainLen
    int vibrateStrength -> vibrateStrength
    int vibrateTime -> vibrateTime
    com.amap.api.navi.h m_stTbt -> m_stTbt
    android.content.Context mContext -> mContext
    java.util.List mAMapNaviListeners -> mAMapNaviListeners
    com.autonavi.wtbt.FrameForWTBT$a naviListenerTriggerHandler -> naviListenerTriggerHandler
    boolean isReCalculateRouteForYaw -> isReCalculateRouteForYaw
    void setReCalculateRouteForYaw(boolean) -> setReCalculateRouteForYaw
    void requestHttp(int,int,int,java.lang.String,java.lang.String,byte[],int) -> requestHttp
    void updateNaviInfo(com.autonavi.wtbt.DGNaviInfo) -> updateNaviInfo
    void playNaviSound(int,java.lang.String) -> playNaviSound
    void endEmulatorNavi() -> endEmulatorNavi
    void arriveWay(int) -> arriveWay
    int matchRouteChanged(int) -> matchRouteChanged
    void offRoute() -> offRoute
    void routeDestroy() -> routeDestroy
    void carLocationChange(com.autonavi.wtbt.CarLocation) -> carLocationChange
    void carProjectionChange(com.autonavi.wtbt.CarLocation) -> carProjectionChange
    void setRouteRequestState(int) -> setRouteRequestState
    void showTrafficPanel(byte[]) -> showTrafficPanel
    void hideTrafficPanel() -> hideTrafficPanel
    int getPlayState() -> getPlayState
    void lockScreenNaviTips(java.lang.String,int,int) -> lockScreenNaviTips
    void vibratePhoneTips(int,int) -> vibratePhoneTips
    int GetDialect() -> GetDialect
    void addAMapNaviListener(com.amap.api.navi.AMapNaviListener) -> addAMapNaviListener
    void removeNaviListener(com.amap.api.navi.AMapNaviListener) -> removeNaviListener
    void destroy() -> destroy
    java.util.List access$000(com.autonavi.wtbt.FrameForWTBT) -> access$000
com.autonavi.wtbt.FrameForWTBT$a -> com.autonavi.wtbt.FrameForWTBT$a:
    com.autonavi.wtbt.FrameForWTBT a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.autonavi.wtbt.GPSDataInfo -> com.autonavi.wtbt.GPSDataInfo:
    double lon -> lon
    double lat -> lat
    short speed -> speed
    short angle -> angle
    short year -> year
    short month -> month
    short day -> day
    short hour -> hour
    short minute -> minute
    short second -> second
com.autonavi.wtbt.GroupSegment -> com.autonavi.wtbt.GroupSegment:
    java.lang.String m_GroupName -> m_GroupName
    int m_nSegCount -> m_nSegCount
    int m_bArrivePass -> m_bArrivePass
    int m_nStartSegId -> m_nStartSegId
    int m_nDistance -> m_nDistance
    int m_nToll -> m_nToll
com.autonavi.wtbt.IFrameForWTBT -> com.autonavi.wtbt.IFrameForWTBT:
    void requestHttp(int,int,int,java.lang.String,java.lang.String,byte[],int) -> requestHttp
    void updateNaviInfo(com.autonavi.wtbt.DGNaviInfo) -> updateNaviInfo
    void playNaviSound(int,java.lang.String) -> playNaviSound
    void endEmulatorNavi() -> endEmulatorNavi
    void arriveWay(int) -> arriveWay
    void offRoute() -> offRoute
    void routeDestroy() -> routeDestroy
    void carLocationChange(com.autonavi.wtbt.CarLocation) -> carLocationChange
    void carProjectionChange(com.autonavi.wtbt.CarLocation) -> carProjectionChange
    void setRouteRequestState(int) -> setRouteRequestState
    int getPlayState() -> getPlayState
    void lockScreenNaviTips(java.lang.String,int,int) -> lockScreenNaviTips
    void vibratePhoneTips(int,int) -> vibratePhoneTips
    int GetDialect() -> GetDialect
com.autonavi.wtbt.LocationCode -> com.autonavi.wtbt.LocationCode:
    int m_Code -> m_Code
    int m_Length -> m_Length
    int m_Time -> m_Time
    int m_State -> m_State
com.autonavi.wtbt.NaviGuideItem -> com.autonavi.wtbt.NaviGuideItem:
    int m_Length -> m_Length
    int m_UseTime -> m_UseTime
    int m_Icon -> m_Icon
    java.lang.String m_Name -> m_Name
    double m_Longitude -> m_Longitude
    double m_Latitude -> m_Latitude
    int m_WalkType -> m_WalkType
    int m_Indoor -> m_Indoor
    int m_Floor -> m_Floor
    int m_Split -> m_Split
    int m_RealSegID -> m_RealSegID
com.autonavi.wtbt.NaviStaticInfo -> com.autonavi.wtbt.NaviStaticInfo:
    int m_nStartSecond -> m_nStartSecond
    int m_nEstimateTime -> m_nEstimateTime
    int m_nEstimateDist -> m_nEstimateDist
    int m_nDrivenTime -> m_nDrivenTime
    int m_nDrivenDist -> m_nDrivenDist
    int m_nAverageSpeed -> m_nAverageSpeed
    int m_nHighestSpeed -> m_nHighestSpeed
    int m_nOverspeedCount -> m_nOverspeedCount
    int m_nRerouteCount -> m_nRerouteCount
    int m_nBrakesCount -> m_nBrakesCount
    int m_nSlowTime -> m_nSlowTime
com.autonavi.wtbt.RestAreaInfo -> com.autonavi.wtbt.RestAreaInfo:
    int m_iRemainDist -> m_iRemainDist
    double m_dLongitude -> m_dLongitude
    double m_dLatitude -> m_dLatitude
    java.lang.String m_StrName -> m_StrName
com.autonavi.wtbt.RoadStatus -> com.autonavi.wtbt.RoadStatus:
    short m_Speed -> m_Speed
    int m_Status -> m_Status
    int m_PassTime -> m_PassTime
    int m_DelayTime -> m_DelayTime
com.autonavi.wtbt.WTBT -> com.autonavi.wtbt.WTBT:
    int init(com.autonavi.wtbt.IFrameForWTBT,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> init
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    int startEmulatorNavi() -> startEmulatorNavi
    int startGPSNavi() -> startGPSNavi
    void stopEmulatorNavi() -> stopEmulatorNavi
    void pauseNavi() -> pauseNavi
    void resumeNavi() -> resumeNavi
    void stopNavi() -> stopNavi
    int playNaviManual() -> playNaviManual
    void setGPSInfo(int,int,double,double,double,double,double,int,int,int,int,int,int) -> setGPSInfo
    void setCarLocation(int,double,double) -> setCarLocation
    void setNaviEnd(int,double,double) -> setNaviEnd
    int requestRoute(int,int,int,double[],int,double[]) -> requestRoute
    int requestRouteWithStart(int,int,int,double[],int,double[],int,double[]) -> requestRouteWithStart
    void receiveNetData(int,int,byte[],int) -> receiveNetData
    void setNetRequestState(int,int,int) -> setNetRequestState
    int reroute(int,int) -> reroute
    int pushRouteData(int,int,byte[],int) -> pushRouteData
    int[] getAllRouteID() -> getAllRouteID
    int selectRoute(int) -> selectRoute
    int getRouteStrategy() -> getRouteStrategy
    int getRouteLength() -> getRouteLength
    int getRouteTime() -> getRouteTime
    int getStartDirection() -> getStartDirection
    java.lang.String getStartPoiName() -> getStartPoiName
    java.lang.String getStartPoiID() -> getStartPoiID
    double[] getStartCoor() -> getStartCoor
    java.lang.String getEndPoiName() -> getEndPoiName
    java.lang.String getEndPoiID() -> getEndPoiID
    double[] getEndCoor() -> getEndCoor
    int getSegNum() -> getSegNum
    int getSegLength(int) -> getSegLength
    int getSegTime(int) -> getSegTime
    int getSegLinkNum(int) -> getSegLinkNum
    int getSegChargeLength(int) -> getSegChargeLength
    int getSegTollCost(int) -> getSegTollCost
    int getSegIndoor(int) -> getSegIndoor
    double[] getSegCoor(int) -> getSegCoor
    java.lang.String getLinkRoadName(int,int) -> getLinkRoadName
    double[] getLinkCoor(int,int) -> getLinkCoor
    int getLinkLength(int,int) -> getLinkLength
    int getLinkTime(int,int) -> getLinkTime
    int getLinkFormWay(int,int) -> getLinkFormWay
    int getLinkRoadClass(int,int) -> getLinkRoadClass
    int getLinkType(int,int) -> getLinkType
    int getLinkIsBranched(int,int) -> getLinkIsBranched
    int getLinkIOFlag(int,int) -> getLinkIOFlag
    int haveTrafficLights(int,int) -> haveTrafficLights
    com.autonavi.wtbt.NaviGuideItem[] getNaviGuideList() -> getNaviGuideList
    com.autonavi.wtbt.NaviGuideItem[] getNaviGuideSplitList() -> getNaviGuideSplitList
    com.autonavi.wtbt.NaviStaticInfo getNaviStaticInfo() -> getNaviStaticInfo
    int getConfirmReroute() -> getConfirmReroute
    void setEmulatorSpeed(int) -> setEmulatorSpeed
    void setTimeForOneWord(int) -> setTimeForOneWord
    int setParam(java.lang.String,java.lang.String) -> setParam
    com.autonavi.wtbt.GPSDataInfo[] getRecentGPS(int,int,int) -> getRecentGPS
    void manualRefreshTMC() -> manualRefreshTMC
    int playTrafficRadioManual(int) -> playTrafficRadioManual
com.google.gson.jpush.a -> com.google.gson.jpush.a:
    java.text.DateFormat a -> a
    java.text.DateFormat b -> b
    java.text.DateFormat c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.w a(java.util.Date) -> a
    java.util.Date a(com.google.gson.jpush.w) -> a
    java.lang.String toString() -> toString
    com.google.gson.jpush.w a(java.lang.Object,java.lang.reflect.Type,com.google.gson.jpush.ad) -> a
    java.lang.Object a(com.google.gson.jpush.w,java.lang.reflect.Type,com.google.gson.jpush.u) -> a
com.google.gson.jpush.a.a -> com.google.gson.jpush.a.a:
    java.lang.Object a(java.lang.Object) -> a
    void a(boolean) -> a
com.google.gson.jpush.a.a.a -> com.google.gson.jpush.a.a.a:
    com.google.gson.jpush.am a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.aa -> com.google.gson.jpush.a.a.aa:
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ab -> com.google.gson.jpush.a.a.ab:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ac -> com.google.gson.jpush.a.a.ac:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ad -> com.google.gson.jpush.a.a.ad:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ae -> com.google.gson.jpush.a.a.ae:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.af -> com.google.gson.jpush.a.a.af:
    java.math.BigDecimal b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ag -> com.google.gson.jpush.a.a.ag:
    java.math.BigInteger b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ah -> com.google.gson.jpush.a.a.ah:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ai -> com.google.gson.jpush.a.a.ai:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.aj -> com.google.gson.jpush.a.a.aj:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ak -> com.google.gson.jpush.a.a.ak:
    java.lang.String z -> z
    java.net.URI b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.al -> com.google.gson.jpush.a.a.al:
    java.lang.String[] z -> z
    java.util.BitSet b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.am -> com.google.gson.jpush.a.a.am:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.an -> com.google.gson.jpush.a.a.an:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ao -> com.google.gson.jpush.a.a.ao:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.ap -> com.google.gson.jpush.a.a.ap:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.a.a.ao b -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.aq -> com.google.gson.jpush.a.a.aq:
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ar -> com.google.gson.jpush.a.a.ar:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.as -> com.google.gson.jpush.a.a.as:
    java.lang.String z -> z
    com.google.gson.jpush.w b(com.google.gson.jpush.c.a) -> b
    void a(com.google.gson.jpush.c.d,com.google.gson.jpush.w) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.at -> com.google.gson.jpush.a.a.at:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.au -> com.google.gson.jpush.a.a.au:
    java.lang.Class a -> a
    com.google.gson.jpush.al b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.a.a.av -> com.google.gson.jpush.a.a.av:
    java.lang.Class a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.a.a.aw -> com.google.gson.jpush.a.a.aw:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.ax -> com.google.gson.jpush.a.a.ax:
    java.lang.Class a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.a.a.ay -> com.google.gson.jpush.a.a.ay:
    java.lang.Class a -> a
    com.google.gson.jpush.al b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.a.a.az -> com.google.gson.jpush.a.a.az:
    int[] a -> a
com.google.gson.jpush.a.a.b -> com.google.gson.jpush.a.a.b:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.ba -> com.google.gson.jpush.a.a.ba:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.bb -> com.google.gson.jpush.a.a.bb:
    java.lang.Number b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.bc -> com.google.gson.jpush.a.a.bc:
    java.lang.Number b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.bd -> com.google.gson.jpush.a.a.bd:
    java.lang.Number b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.be -> com.google.gson.jpush.a.a.be:
    java.lang.Number b(com.google.gson.jpush.c.a) -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.bf -> com.google.gson.jpush.a.a.bf:
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.bg -> com.google.gson.jpush.a.a.bg:
    java.util.Map a -> a
    java.util.Map b -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.c -> com.google.gson.jpush.a.a.c:
    com.google.gson.jpush.a.f a -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.d -> com.google.gson.jpush.a.a.d:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.a.ae b -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.e -> com.google.gson.jpush.a.a.e:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.text.DateFormat c -> c
    java.text.DateFormat d -> d
    java.lang.String[] z -> z
    java.util.Date a(java.lang.String) -> a
    void a(com.google.gson.jpush.c.d,java.util.Date) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.f -> com.google.gson.jpush.a.a.f:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.g -> com.google.gson.jpush.a.a.g:
    com.google.gson.jpush.a.f a -> a
    java.lang.String z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.a.f,com.google.gson.jpush.k,com.google.gson.jpush.b.a,com.google.gson.jpush.annotations.b) -> a
com.google.gson.jpush.a.a.h -> com.google.gson.jpush.a.a.h:
    java.io.Reader a -> a
    java.lang.Object b -> b
    java.util.List c -> c
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    com.google.gson.jpush.c.c f() -> f
    java.lang.Object r() -> r
    java.lang.Object s() -> s
    void a(com.google.gson.jpush.c.c) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void j() -> j
    double k() -> k
    long l() -> l
    int m() -> m
    void close() -> close
    void n() -> n
    java.lang.String toString() -> toString
    void o() -> o
com.google.gson.jpush.a.a.i -> com.google.gson.jpush.a.a.i:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.jpush.a.a.j -> com.google.gson.jpush.a.a.j:
    java.io.Writer a -> a
    com.google.gson.jpush.ac b -> b
    java.util.List c -> c
    java.lang.String d -> d
    com.google.gson.jpush.w e -> e
    java.lang.String[] z -> z
    com.google.gson.jpush.w a() -> a
    com.google.gson.jpush.w j() -> j
    void a(com.google.gson.jpush.w) -> a
    com.google.gson.jpush.c.d b() -> b
    com.google.gson.jpush.c.d c() -> c
    com.google.gson.jpush.c.d d() -> d
    com.google.gson.jpush.c.d e() -> e
    com.google.gson.jpush.c.d a(java.lang.String) -> a
    com.google.gson.jpush.c.d b(java.lang.String) -> b
    com.google.gson.jpush.c.d f() -> f
    com.google.gson.jpush.c.d a(boolean) -> a
    com.google.gson.jpush.c.d a(long) -> a
    com.google.gson.jpush.c.d a(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.a.a.k -> com.google.gson.jpush.a.a.k:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.a.a.l -> com.google.gson.jpush.a.a.l:
    com.google.gson.jpush.a.f a -> a
    boolean b -> b
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    boolean a(com.google.gson.jpush.a.a.l) -> a
com.google.gson.jpush.a.a.m -> com.google.gson.jpush.a.a.m:
    com.google.gson.jpush.al b -> b
    com.google.gson.jpush.al c -> c
    com.google.gson.jpush.a.ae d -> d
    com.google.gson.jpush.a.a.l a -> a
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.n -> com.google.gson.jpush.a.a.n:
    com.google.gson.jpush.am a -> a
    com.google.gson.jpush.k b -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.o -> com.google.gson.jpush.a.a.o:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.p -> com.google.gson.jpush.a.a.p:
    int[] a -> a
com.google.gson.jpush.a.a.q -> com.google.gson.jpush.a.a.q:
    com.google.gson.jpush.a.f a -> a
    com.google.gson.jpush.j b -> b
    com.google.gson.jpush.a.s c -> c
    java.lang.String z -> z
    boolean a(java.lang.reflect.Field,boolean) -> a
    java.util.List a(java.lang.reflect.Field) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    java.util.Map a(com.google.gson.jpush.k,com.google.gson.jpush.b.a,java.lang.Class) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.a.a.q,com.google.gson.jpush.k,java.lang.reflect.Field,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.r -> com.google.gson.jpush.a.a.r:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.k b -> b
    java.lang.reflect.Field c -> c
    com.google.gson.jpush.b.a d -> d
    boolean e -> e
    com.google.gson.jpush.a.a.q f -> f
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
    void a(com.google.gson.jpush.c.a,java.lang.Object) -> a
    boolean a(java.lang.Object) -> a
com.google.gson.jpush.a.a.s -> com.google.gson.jpush.a.a.s:
    com.google.gson.jpush.a.ae a -> a
    java.util.Map b -> b
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.t -> com.google.gson.jpush.a.a.t:
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    boolean a(java.lang.Object) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
    void a(com.google.gson.jpush.c.a,java.lang.Object) -> a
com.google.gson.jpush.a.a.u -> com.google.gson.jpush.a.a.u:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.lang.String z -> z
    java.sql.Date b(com.google.gson.jpush.c.a) -> b
    void a(com.google.gson.jpush.c.d,java.sql.Date) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.v -> com.google.gson.jpush.a.a.v:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.w -> com.google.gson.jpush.a.a.w:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.lang.String z -> z
    java.sql.Time b(com.google.gson.jpush.c.a) -> b
    void a(com.google.gson.jpush.c.d,java.sql.Time) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.x -> com.google.gson.jpush.a.a.x:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.a.a.y -> com.google.gson.jpush.a.a.y:
    com.google.gson.jpush.k a -> a
    com.google.gson.jpush.al b -> b
    java.lang.reflect.Type c -> c
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.a.a.z -> com.google.gson.jpush.a.a.z:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.am b -> b
    com.google.gson.jpush.al c -> c
    com.google.gson.jpush.am d -> d
    com.google.gson.jpush.al e -> e
    com.google.gson.jpush.al f -> f
    com.google.gson.jpush.am g -> g
    com.google.gson.jpush.al h -> h
    com.google.gson.jpush.am i -> i
    com.google.gson.jpush.al j -> j
    com.google.gson.jpush.am k -> k
    com.google.gson.jpush.al l -> l
    com.google.gson.jpush.am m -> m
    com.google.gson.jpush.al n -> n
    com.google.gson.jpush.al o -> o
    com.google.gson.jpush.al p -> p
    com.google.gson.jpush.al q -> q
    com.google.gson.jpush.am r -> r
    com.google.gson.jpush.al s -> s
    com.google.gson.jpush.am t -> t
    com.google.gson.jpush.al u -> u
    com.google.gson.jpush.al v -> v
    com.google.gson.jpush.al w -> w
    com.google.gson.jpush.am x -> x
    com.google.gson.jpush.al y -> y
    com.google.gson.jpush.am z -> z
    com.google.gson.jpush.al A -> A
    com.google.gson.jpush.am B -> B
    com.google.gson.jpush.al C -> C
    com.google.gson.jpush.am D -> D
    com.google.gson.jpush.al E -> E
    com.google.gson.jpush.am F -> F
    com.google.gson.jpush.al G -> G
    com.google.gson.jpush.am H -> H
    com.google.gson.jpush.al I -> I
    com.google.gson.jpush.am J -> J
    com.google.gson.jpush.am K -> K
    com.google.gson.jpush.al L -> L
    com.google.gson.jpush.am M -> M
    com.google.gson.jpush.al N -> N
    com.google.gson.jpush.am O -> O
    com.google.gson.jpush.al P -> P
    com.google.gson.jpush.am Q -> Q
    com.google.gson.jpush.am R -> R
    com.google.gson.jpush.am a(java.lang.Class,com.google.gson.jpush.al) -> a
    com.google.gson.jpush.am a(java.lang.Class,java.lang.Class,com.google.gson.jpush.al) -> a
    com.google.gson.jpush.am b(java.lang.Class,com.google.gson.jpush.al) -> b
com.google.gson.jpush.a.aa -> com.google.gson.jpush.a.aa:
    com.google.gson.jpush.a.w a -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.jpush.a.ab -> com.google.gson.jpush.a.ab:
    com.google.gson.jpush.a.aa a -> a
    java.lang.Object next() -> next
com.google.gson.jpush.a.ac -> com.google.gson.jpush.a.ac:
    com.google.gson.jpush.a.ad b -> b
    com.google.gson.jpush.a.ad c -> c
    int d -> d
    com.google.gson.jpush.a.w e -> e
    boolean hasNext() -> hasNext
    com.google.gson.jpush.a.ad a() -> a
    void remove() -> remove
com.google.gson.jpush.a.ad -> com.google.gson.jpush.a.ad:
    com.google.gson.jpush.a.ad a -> a
    com.google.gson.jpush.a.ad b -> b
    com.google.gson.jpush.a.ad c -> c
    com.google.gson.jpush.a.ad d -> d
    com.google.gson.jpush.a.ad e -> e
    java.lang.Object f -> f
    java.lang.Object g -> g
    int h -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.a.ae -> com.google.gson.jpush.a.ae:
    java.lang.Object a() -> a
com.google.gson.jpush.a.af -> com.google.gson.jpush.a.af:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean a(java.lang.reflect.Type) -> a
    java.lang.Class a(java.lang.Class) -> a
com.google.gson.jpush.a.ag -> com.google.gson.jpush.a.ag:
    com.google.gson.jpush.w a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.w,com.google.gson.jpush.c.d) -> a
    java.io.Writer a(java.lang.Appendable) -> a
com.google.gson.jpush.a.ah -> com.google.gson.jpush.a.ah:
    java.lang.Appendable a -> a
    com.google.gson.jpush.a.ai b -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.a.ai -> com.google.gson.jpush.a.ai:
    char[] a -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.jpush.a.aj -> com.google.gson.jpush.a.aj:
    java.lang.String[] z -> z
    java.lang.Object a(java.lang.Class) -> a
    com.google.gson.jpush.a.aj a() -> a
com.google.gson.jpush.a.ak -> com.google.gson.jpush.a.ak:
    java.lang.reflect.Method a -> a
    java.lang.Object b -> b
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.a.al -> com.google.gson.jpush.a.al:
    java.lang.reflect.Method a -> a
    int b -> b
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.a.am -> com.google.gson.jpush.a.am:
    java.lang.reflect.Method a -> a
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.a.an -> com.google.gson.jpush.a.an:
    java.lang.String z -> z
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.a.b -> com.google.gson.jpush.a.b:
    java.lang.reflect.Type[] a -> a
    java.lang.String[] z -> z
    java.lang.reflect.GenericArrayType f(java.lang.reflect.Type) -> f
    java.lang.reflect.Type a(java.lang.reflect.Type) -> a
    java.lang.Class b(java.lang.reflect.Type) -> b
    boolean a(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.String c(java.lang.reflect.Type) -> c
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type b(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type d(java.lang.reflect.Type) -> d
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] b(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    void e(java.lang.reflect.Type) -> e
    int a(java.lang.Object) -> a
com.google.gson.jpush.a.c -> com.google.gson.jpush.a.c:
    java.lang.reflect.Type a -> a
    java.lang.String z -> z
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.a.d -> com.google.gson.jpush.a.d:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type b -> b
    java.lang.reflect.Type[] c -> c
    java.lang.String z -> z
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.a.e -> com.google.gson.jpush.a.e:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type b -> b
    java.lang.String[] z -> z
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.a.f -> com.google.gson.jpush.a.f:
    java.util.Map a -> a
    com.google.gson.jpush.a.ae a(com.google.gson.jpush.b.a) -> a
    com.google.gson.jpush.a.ae a(java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.a.g -> com.google.gson.jpush.a.g:
    com.google.gson.jpush.s a -> a
    java.lang.reflect.Type b -> b
    com.google.gson.jpush.a.f c -> c
    java.lang.Object a() -> a
com.google.gson.jpush.a.h -> com.google.gson.jpush.a.h:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.i -> com.google.gson.jpush.a.i:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.j -> com.google.gson.jpush.a.j:
    com.google.gson.jpush.a.aj d -> d
    java.lang.Class a -> a
    java.lang.reflect.Type b -> b
    com.google.gson.jpush.a.f c -> c
    java.lang.String[] z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.a.k -> com.google.gson.jpush.a.k:
    com.google.gson.jpush.s a -> a
    java.lang.reflect.Type b -> b
    com.google.gson.jpush.a.f c -> c
    java.lang.Object a() -> a
com.google.gson.jpush.a.l -> com.google.gson.jpush.a.l:
    java.lang.reflect.Constructor a -> a
    com.google.gson.jpush.a.f b -> b
    java.lang.String[] z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.a.m -> com.google.gson.jpush.a.m:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.n -> com.google.gson.jpush.a.n:
    java.lang.reflect.Type a -> a
    com.google.gson.jpush.a.f b -> b
    java.lang.String z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.a.o -> com.google.gson.jpush.a.o:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.p -> com.google.gson.jpush.a.p:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.q -> com.google.gson.jpush.a.q:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.r -> com.google.gson.jpush.a.r:
    com.google.gson.jpush.a.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.a.s -> com.google.gson.jpush.a.s:
    com.google.gson.jpush.a.s a -> a
    double b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    java.util.List f -> f
    java.util.List g -> g
    com.google.gson.jpush.a.s b() -> b
    com.google.gson.jpush.a.s a() -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
    boolean a(java.lang.reflect.Field,boolean) -> a
    boolean a(java.lang.Class,boolean) -> a
    boolean a(java.lang.Class) -> a
    boolean b(java.lang.Class) -> b
    boolean a(com.google.gson.jpush.annotations.d,com.google.gson.jpush.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.jpush.a.t -> com.google.gson.jpush.a.t:
    com.google.gson.jpush.al f -> f
    boolean a -> a
    boolean b -> b
    com.google.gson.jpush.k c -> c
    com.google.gson.jpush.b.a d -> d
    com.google.gson.jpush.a.s e -> e
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
    com.google.gson.jpush.al a() -> a
com.google.gson.jpush.a.u -> com.google.gson.jpush.a.u:
    com.google.gson.jpush.a.u a -> a
    void a(com.google.gson.jpush.c.a) -> a
com.google.gson.jpush.a.v -> com.google.gson.jpush.a.v:
    java.lang.String a -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.jpush.a.w -> com.google.gson.jpush.a.w:
    java.util.Comparator g -> g
    java.util.Comparator a -> a
    com.google.gson.jpush.a.ad b -> b
    int c -> c
    int d -> d
    com.google.gson.jpush.a.ad e -> e
    com.google.gson.jpush.a.y h -> h
    com.google.gson.jpush.a.aa i -> i
    boolean f -> f
    java.lang.String[] z -> z
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.jpush.a.ad a(java.lang.Object,boolean) -> a
    com.google.gson.jpush.a.ad b(java.lang.Object) -> b
    com.google.gson.jpush.a.ad a(java.util.Map$Entry) -> a
    void a(com.google.gson.jpush.a.ad,boolean) -> a
    com.google.gson.jpush.a.ad a(java.lang.Object) -> a
    void a(com.google.gson.jpush.a.ad,com.google.gson.jpush.a.ad) -> a
    void b(com.google.gson.jpush.a.ad,boolean) -> b
    void a(com.google.gson.jpush.a.ad) -> a
    void b(com.google.gson.jpush.a.ad) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.jpush.a.x -> com.google.gson.jpush.a.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.jpush.a.y -> com.google.gson.jpush.a.y:
    com.google.gson.jpush.a.w a -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.jpush.a.z -> com.google.gson.jpush.a.z:
    com.google.gson.jpush.a.y a -> a
    java.lang.Object next() -> next
com.google.gson.jpush.aa -> com.google.gson.jpush.aa:
com.google.gson.jpush.ab -> com.google.gson.jpush.ab:
    java.lang.String[] z -> z
    com.google.gson.jpush.w a(java.lang.String) -> a
    com.google.gson.jpush.w a(java.io.Reader) -> a
    com.google.gson.jpush.w a(com.google.gson.jpush.c.a) -> a
com.google.gson.jpush.ac -> com.google.gson.jpush.ac:
    java.lang.Class[] a -> a
    java.lang.Object b -> b
    void a(java.lang.Object) -> a
    boolean a() -> a
    boolean g() -> g
    boolean k() -> k
    java.lang.Number b() -> b
    boolean l() -> l
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.gson.jpush.ac) -> a
com.google.gson.jpush.ad -> com.google.gson.jpush.ad:
com.google.gson.jpush.ae -> com.google.gson.jpush.ae:
    com.google.gson.jpush.w a(java.lang.Object,java.lang.reflect.Type,com.google.gson.jpush.ad) -> a
com.google.gson.jpush.af -> com.google.gson.jpush.af:
com.google.gson.jpush.ag -> com.google.gson.jpush.ag:
    com.google.gson.jpush.ag a -> a
    com.google.gson.jpush.ag b -> b
    com.google.gson.jpush.ag[] c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.ag[] values() -> values
    com.google.gson.jpush.ag valueOf(java.lang.String) -> valueOf
com.google.gson.jpush.ah -> com.google.gson.jpush.ah:
com.google.gson.jpush.ai -> com.google.gson.jpush.ai:
com.google.gson.jpush.aj -> com.google.gson.jpush.aj:
    com.google.gson.jpush.ae a -> a
    com.google.gson.jpush.v b -> b
    com.google.gson.jpush.k c -> c
    com.google.gson.jpush.b.a d -> d
    com.google.gson.jpush.am e -> e
    com.google.gson.jpush.al f -> f
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
    com.google.gson.jpush.al a() -> a
    com.google.gson.jpush.am a(com.google.gson.jpush.b.a,java.lang.Object) -> a
com.google.gson.jpush.ak -> com.google.gson.jpush.ak:
    com.google.gson.jpush.b.a a -> a
    boolean b -> b
    java.lang.Class c -> c
    com.google.gson.jpush.ae d -> d
    com.google.gson.jpush.v e -> e
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.al -> com.google.gson.jpush.al:
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
    com.google.gson.jpush.w a(java.lang.Object) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
com.google.gson.jpush.am -> com.google.gson.jpush.am:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.b.a) -> a
com.google.gson.jpush.annotations.Until -> com.google.gson.jpush.annotations.Until:
    double value() -> value
com.google.gson.jpush.annotations.a -> com.google.gson.jpush.annotations.a:
    boolean a() -> a
    boolean b() -> b
com.google.gson.jpush.annotations.b -> com.google.gson.jpush.annotations.b:
    java.lang.Class a() -> a
com.google.gson.jpush.annotations.c -> com.google.gson.jpush.annotations.c:
    java.lang.String a() -> a
    java.lang.String[] b() -> b
com.google.gson.jpush.annotations.d -> com.google.gson.jpush.annotations.d:
    double a() -> a
com.google.gson.jpush.b -> com.google.gson.jpush.b:
    boolean a() -> a
    boolean b() -> b
com.google.gson.jpush.b.a -> com.google.gson.jpush.b.a:
    java.lang.Class a -> a
    java.lang.reflect.Type b -> b
    int c -> c
    java.lang.String z -> z
    java.lang.Class a() -> a
    java.lang.reflect.Type b() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.jpush.b.a a(java.lang.reflect.Type) -> a
    com.google.gson.jpush.b.a a(java.lang.Class) -> a
com.google.gson.jpush.c -> com.google.gson.jpush.c:
    java.lang.reflect.Field a -> a
com.google.gson.jpush.c.a -> com.google.gson.jpush.c.a:
    char[] a -> a
    java.io.Reader b -> b
    boolean c -> c
    char[] d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    int[] m -> m
    int n -> n
    java.lang.String[] o -> o
    int[] p -> p
    java.lang.String[] z -> z
    void a(boolean) -> a
    boolean p() -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    com.google.gson.jpush.c.c f() -> f
    int o() -> o
    int r() -> r
    int s() -> s
    boolean a(char) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void j() -> j
    double k() -> k
    long l() -> l
    java.lang.String b(char) -> b
    java.lang.String t() -> t
    void c(char) -> c
    int m() -> m
    void close() -> close
    void n() -> n
    void a(int) -> a
    boolean b(int) -> b
    int u() -> u
    int b(boolean) -> b
    void v() -> v
    void w() -> w
    java.lang.String toString() -> toString
    java.lang.String q() -> q
    char x() -> x
    java.io.IOException a(java.lang.String) -> a
    int a(com.google.gson.jpush.c.a) -> a
    int b(com.google.gson.jpush.c.a) -> b
    int a(com.google.gson.jpush.c.a,int) -> a
    int c(com.google.gson.jpush.c.a) -> c
    int d(com.google.gson.jpush.c.a) -> d
com.google.gson.jpush.c.b -> com.google.gson.jpush.c.b:
    java.lang.String[] z -> z
    void a(com.google.gson.jpush.c.a) -> a
com.google.gson.jpush.c.c -> com.google.gson.jpush.c.c:
    com.google.gson.jpush.c.c a -> a
    com.google.gson.jpush.c.c b -> b
    com.google.gson.jpush.c.c c -> c
    com.google.gson.jpush.c.c d -> d
    com.google.gson.jpush.c.c e -> e
    com.google.gson.jpush.c.c f -> f
    com.google.gson.jpush.c.c g -> g
    com.google.gson.jpush.c.c h -> h
    com.google.gson.jpush.c.c i -> i
    com.google.gson.jpush.c.c j -> j
    com.google.gson.jpush.c.c[] k -> k
    java.lang.String[] z -> z
    com.google.gson.jpush.c.c[] values() -> values
    com.google.gson.jpush.c.c valueOf(java.lang.String) -> valueOf
com.google.gson.jpush.c.d -> com.google.gson.jpush.c.d:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.io.Writer c -> c
    int[] d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    boolean k -> k
    java.lang.String[] z -> z
    void c(java.lang.String) -> c
    void b(boolean) -> b
    boolean g() -> g
    void c(boolean) -> c
    boolean h() -> h
    void d(boolean) -> d
    boolean i() -> i
    com.google.gson.jpush.c.d b() -> b
    com.google.gson.jpush.c.d c() -> c
    com.google.gson.jpush.c.d d() -> d
    com.google.gson.jpush.c.d e() -> e
    com.google.gson.jpush.c.d a(int,java.lang.String) -> a
    com.google.gson.jpush.c.d a(int,int,java.lang.String) -> a
    void a(int) -> a
    int a() -> a
    void b(int) -> b
    com.google.gson.jpush.c.d a(java.lang.String) -> a
    void j() -> j
    com.google.gson.jpush.c.d b(java.lang.String) -> b
    com.google.gson.jpush.c.d f() -> f
    com.google.gson.jpush.c.d a(boolean) -> a
    com.google.gson.jpush.c.d a(long) -> a
    com.google.gson.jpush.c.d a(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void d(java.lang.String) -> d
    void k() -> k
    void e(boolean) -> e
com.google.gson.jpush.c.e -> com.google.gson.jpush.c.e:
com.google.gson.jpush.d -> com.google.gson.jpush.d:
    com.google.gson.jpush.d a -> a
    com.google.gson.jpush.d b -> b
    com.google.gson.jpush.d c -> c
    com.google.gson.jpush.d d -> d
    com.google.gson.jpush.d e -> e
    com.google.gson.jpush.d[] f -> f
    java.lang.String[] z -> z
    com.google.gson.jpush.d[] values() -> values
    com.google.gson.jpush.d valueOf(java.lang.String) -> valueOf
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.google.gson.jpush.e -> com.google.gson.jpush.e:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.f -> com.google.gson.jpush.f:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.g -> com.google.gson.jpush.g:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.h -> com.google.gson.jpush.h:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.i -> com.google.gson.jpush.i:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.j -> com.google.gson.jpush.j:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.k -> com.google.gson.jpush.k:
    java.lang.ThreadLocal c -> c
    java.util.Map d -> d
    java.util.List e -> e
    com.google.gson.jpush.a.f f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.google.gson.jpush.u a -> a
    com.google.gson.jpush.ad b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.b.a) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.am,com.google.gson.jpush.b.a) -> a
    com.google.gson.jpush.al a(java.lang.Class) -> a
    void a(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void a(com.google.gson.jpush.w,java.lang.Appendable) -> a
    com.google.gson.jpush.c.d a(java.io.Writer) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
    void a(java.lang.Object,com.google.gson.jpush.c.a) -> a
    java.lang.Object a(com.google.gson.jpush.c.a,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void a(com.google.gson.jpush.k,double) -> a
com.google.gson.jpush.l -> com.google.gson.jpush.l:
    com.google.gson.jpush.k a -> a
com.google.gson.jpush.m -> com.google.gson.jpush.m:
    com.google.gson.jpush.k a -> a
com.google.gson.jpush.n -> com.google.gson.jpush.n:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.o -> com.google.gson.jpush.o:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.p -> com.google.gson.jpush.p:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.q -> com.google.gson.jpush.q:
    com.google.gson.jpush.al a -> a
    void a(com.google.gson.jpush.al) -> a
    java.lang.Object a(com.google.gson.jpush.c.a) -> a
    void a(com.google.gson.jpush.c.d,java.lang.Object) -> a
com.google.gson.jpush.r -> com.google.gson.jpush.r:
    com.google.gson.jpush.a.s a -> a
    com.google.gson.jpush.ag b -> b
    com.google.gson.jpush.j c -> c
    java.util.Map d -> d
    java.util.List e -> e
    java.util.List f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    com.google.gson.jpush.r a() -> a
    com.google.gson.jpush.k b() -> b
com.google.gson.jpush.s -> com.google.gson.jpush.s:
    java.lang.Object a() -> a
com.google.gson.jpush.t -> com.google.gson.jpush.t:
    java.util.List a -> a
    void a(com.google.gson.jpush.w) -> a
    int a() -> a
    java.util.Iterator iterator() -> iterator
    com.google.gson.jpush.w a(int) -> a
    java.lang.Number b() -> b
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    boolean g() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.jpush.u -> com.google.gson.jpush.u:
com.google.gson.jpush.v -> com.google.gson.jpush.v:
    java.lang.Object a(com.google.gson.jpush.w,java.lang.reflect.Type,com.google.gson.jpush.u) -> a
com.google.gson.jpush.w -> com.google.gson.jpush.w:
    java.lang.String[] z -> z
    com.google.gson.jpush.z h() -> h
    com.google.gson.jpush.t i() -> i
    com.google.gson.jpush.ac j() -> j
    boolean g() -> g
    java.lang.Number b() -> b
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    java.lang.String toString() -> toString
com.google.gson.jpush.x -> com.google.gson.jpush.x:
com.google.gson.jpush.y -> com.google.gson.jpush.y:
    com.google.gson.jpush.y a -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.jpush.z -> com.google.gson.jpush.z:
    com.google.gson.jpush.a.w a -> a
    void a(java.lang.String,com.google.gson.jpush.w) -> a
    java.util.Set a() -> a
    boolean a(java.lang.String) -> a
    com.google.gson.jpush.w b(java.lang.String) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.protobuf.jpush.Internal -> com.google.protobuf.jpush.Internal:
    java.lang.String[] z -> z
    java.lang.String stringDefaultValue(java.lang.String) -> stringDefaultValue
    com.google.protobuf.jpush.c bytesDefaultValue(java.lang.String) -> bytesDefaultValue
    boolean isValidUtf8(com.google.protobuf.jpush.c) -> isValidUtf8
com.google.protobuf.jpush.a -> com.google.protobuf.jpush.a:
    java.lang.String[] z -> z
    byte[] S() -> S
com.google.protobuf.jpush.b -> com.google.protobuf.jpush.b:
    java.lang.String z -> z
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b a(byte[],int,int) -> a
    void a(java.lang.Iterable,java.util.Collection) -> a
    java.lang.Object clone() -> clone
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
com.google.protobuf.jpush.c -> com.google.protobuf.jpush.c:
    byte[] b -> b
    com.google.protobuf.jpush.c a -> a
    int c -> c
    java.lang.String[] z -> z
    byte a(int) -> a
    int a() -> a
    com.google.protobuf.jpush.c a(byte[],int,int) -> a
    com.google.protobuf.jpush.c a(byte[]) -> a
    com.google.protobuf.jpush.c a(java.lang.String) -> a
    void a(byte[],int,int,int) -> a
    java.lang.String b() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.io.InputStream c() -> c
com.google.protobuf.jpush.d -> com.google.protobuf.jpush.d:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.InputStream e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String[] z -> z
    com.google.protobuf.jpush.d a(byte[],int,int) -> a
    int a() -> a
    void a(int) -> a
    boolean b(int) -> b
    long b() -> b
    int c() -> c
    void a(com.google.protobuf.jpush.l,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.c d() -> d
    int e() -> e
    int f() -> f
    int c(int) -> c
    void h() -> h
    void d(int) -> d
    int g() -> g
    boolean a(boolean) -> a
    byte i() -> i
    void e(int) -> e
com.google.protobuf.jpush.e -> com.google.protobuf.jpush.e:
    byte[] a -> a
    int b -> b
    int c -> c
    java.io.OutputStream d -> d
    java.lang.String[] z -> z
    com.google.protobuf.jpush.e a(byte[],int,int) -> a
    void a(int,long) -> a
    void a(int,int) -> a
    void a(int,com.google.protobuf.jpush.k) -> a
    void a(int,com.google.protobuf.jpush.c) -> a
    void b(int,int) -> b
    int b(int,long) -> b
    int c(int,int) -> c
    int b(int,com.google.protobuf.jpush.k) -> b
    int b(int,com.google.protobuf.jpush.c) -> b
    int d(int,int) -> d
    int a(long) -> a
    int a(int) -> a
    void b() -> b
    int a() -> a
    void b(int) -> b
    void e(int,int) -> e
    int c(int) -> c
    void d(int) -> d
    int e(int) -> e
    void b(long) -> b
com.google.protobuf.jpush.f -> com.google.protobuf.jpush.f:
    java.lang.String z -> z
com.google.protobuf.jpush.g -> com.google.protobuf.jpush.g:
    java.util.Map a -> a
    com.google.protobuf.jpush.g b -> b
    com.google.protobuf.jpush.g a() -> a
com.google.protobuf.jpush.h -> com.google.protobuf.jpush.h:
com.google.protobuf.jpush.i -> com.google.protobuf.jpush.i:
    java.lang.String z -> z
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b d() -> d
    java.lang.Object clone() -> clone
com.google.protobuf.jpush.j -> com.google.protobuf.jpush.j:
    java.lang.String[] z -> z
    com.google.protobuf.jpush.j a() -> a
    com.google.protobuf.jpush.j b() -> b
    com.google.protobuf.jpush.j c() -> c
    com.google.protobuf.jpush.j d() -> d
    com.google.protobuf.jpush.j e() -> e
    com.google.protobuf.jpush.j f() -> f
    com.google.protobuf.jpush.j g() -> g
    com.google.protobuf.jpush.j h() -> h
com.google.protobuf.jpush.k -> com.google.protobuf.jpush.k:
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
com.google.protobuf.jpush.l -> com.google.protobuf.jpush.l:
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
com.google.protobuf.jpush.m -> com.google.protobuf.jpush.m:
    java.util.List a -> a
    java.lang.String z -> z
com.google.protobuf.jpush.n -> com.google.protobuf.jpush.n:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int) -> a
    int b(int) -> b
    int a(int,int) -> a
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] $VALUES -> $VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    com.google.zxing.DecodeHintType[] $VALUES -> $VALUES
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType[] $VALUES -> $VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.MultiFormatWriter$1 -> com.google.zxing.MultiFormatWriter$1:
    int[] $SwitchMap$com$google$zxing$BarcodeFormat -> $SwitchMap$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType[] $VALUES -> $VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    int[] NB_BITS_COMPACT -> NB_BITS_COMPACT
    int[] NB_BITS -> NB_BITS
    int[] NB_DATABLOCK_COMPACT -> NB_DATABLOCK_COMPACT
    int[] NB_DATABLOCK -> NB_DATABLOCK
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    int numCodewords -> numCodewords
    int codewordSize -> codewordSize
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    int invertedBitCount -> invertedBitCount
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    com.google.zxing.common.BitMatrix removeDashedLines(com.google.zxing.common.BitMatrix) -> removeDashedLines
    int readCode(boolean[],int,int) -> readCode
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table -> $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES -> $VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    void extractParameters(com.google.zxing.aztec.detector.Detector$Point[]) -> extractParameters
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.aztec.detector.Detector$Point[]) -> getMatrixCornerPoints
    void correctParameterData(boolean[],boolean) -> correctParameterData
    com.google.zxing.aztec.detector.Detector$Point[] getBullEyeCornerPoints(com.google.zxing.aztec.detector.Detector$Point) -> getBullEyeCornerPoints
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    void getParameters(boolean[]) -> getParameters
    boolean[] sampleLine(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    boolean isValid(int,int) -> isValid
    int round(float) -> round
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
com.google.zxing.aztec.detector.Detector$1 -> com.google.zxing.aztec.detector.Detector$1:
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String url -> url
    java.lang.String[] getNames() -> getNames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String getURL() -> getURL
    java.lang.String getBirthday() -> getBirthday
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.lang.String summary -> summary
    java.lang.String start -> start
    java.lang.String end -> end
    java.lang.String location -> location
    java.lang.String attendee -> attendee
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.lang.String getStart() -> getStart
    java.lang.String getEnd() -> getEnd
    java.lang.String getLocation() -> getLocation
    java.lang.String getAttendee() -> getAttendee
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    void validateDate(java.lang.CharSequence) -> validateDate
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType[] $VALUES -> $VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern ALPHANUM -> ALPHANUM
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    boolean isSubstringOfAlphaNumeric(java.lang.CharSequence,int,int) -> isSubstringOfAlphaNumeric
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.lang.String PATTERN_END -> PATTERN_END
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.CharSequence) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] $VALUES -> $VALUES
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    void threshold8x8Block(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> threshold8x8Block
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    int round(float) -> round
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    int distanceL2(float,float,float,float) -> distanceL2
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int INITIALIZATION_THRESHOLD -> INITIALIZATION_THRESHOLD
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    boolean initialized -> initialized
    void initialize() -> initialize
    void checkInit() -> checkInit
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[],boolean) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int round(float) -> round
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.maxicode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int minCharacterLength -> minCharacterLength
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    boolean arrayContains(char[],char) -> arrayContains
    char toNarrowWidePattern(int[]) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    int sidesMargin -> sidesMargin
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(byte[],int,int) -> renderResult
    int appendPattern(byte[],int,int[],int) -> appendPattern
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.Integer parseExtension2String(java.lang.String) -> parseExtension2String
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int[] getRSSwidths(int,int,int,int,boolean) -> getRSSwidths
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
    int[] elements(int[],int,int) -> elements
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int LONGEST_SEQUENCE_SIZE -> LONGEST_SEQUENCE_SIZE
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    int[] startEnd -> startEnd
    int[] currentSequence -> currentSequence
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    boolean checkPairSequence(java.util.List,com.google.zxing.oned.rss.FinderPattern) -> checkPairSequence
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES -> $VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.pdf417.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
    int findPatternStart(int,int,com.google.zxing.common.BitMatrix) -> findPatternStart
    int findPatternEnd(int,int,com.google.zxing.common.BitMatrix) -> findPatternEnd
com.google.zxing.pdf417.decoder.BitMatrixParser -> com.google.zxing.pdf417.decoder.BitMatrixParser:
    int[] NO_ERRORS -> NO_ERRORS
    int MAX_ROW_DIFFERENCE -> MAX_ROW_DIFFERENCE
    int MAX_ROWS -> MAX_ROWS
    int MAX_CW_CAPACITY -> MAX_CW_CAPACITY
    int MODULES_IN_SYMBOL -> MODULES_IN_SYMBOL
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    int rows -> rows
    int leftColumnECData -> leftColumnECData
    int rightColumnECData -> rightColumnECData
    int eraseCount -> eraseCount
    int[] erasures -> erasures
    int ecLevel -> ecLevel
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int[] readCodewords() -> readCodewords
    int[] trimArray(int[],int) -> trimArray
    int processRow(int[],int,int,int[],int) -> processRow
    int getCodeword(long) -> getCodeword
    int findCodewordIndex(long) -> findCodewordIndex
    int[] getErasures() -> getErasures
    int getECLevel() -> getECLevel
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.math.BigInteger[] EXP900 -> EXP900
    com.google.zxing.common.DecoderResult decode(int[]) -> decode
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.Decoder -> com.google.zxing.pdf417.decoder.Decoder:
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int correctErrors(int[],int[],int) -> correctErrors
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int SKEW_THRESHOLD -> SKEW_THRESHOLD
    int[] START_PATTERN -> START_PATTERN
    int[] START_PATTERN_REVERSE -> START_PATTERN_REVERSE
    int[] STOP_PATTERN -> STOP_PATTERN
    int[] STOP_PATTERN_REVERSE -> STOP_PATTERN_REVERSE
    com.google.zxing.BinaryBitmap image -> image
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix) -> findVertices
    com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix) -> findVertices180
    void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean) -> correctCodeWordVertices
    float computeModuleWidth(com.google.zxing.ResultPoint[]) -> computeModuleWidth
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleGrid
    int round(float) -> round
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void setMatrix(int,int,boolean) -> setMatrix
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int) -> getScaledMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getRow() -> getRow
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] $VALUES -> $VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int getNumberOfRows(int,int,int) -> getNumberOfRows
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    int getNumberOfDataCodewords(int,int,int) -> getNumberOfDataCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    byte[] getBytesForMessage(java.lang.String) -> getBytesForMessage
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction) -> encodeHighLevel
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
com.google.zxing.pdf417.encoder.PDF417Writer -> com.google.zxing.pdf417.encoder.PDF417Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,boolean,int,int,int,int,int,int,com.google.zxing.pdf417.encoder.Compaction) -> encode
    com.google.zxing.pdf417.encoder.PDF417 initializeEncoder(com.google.zxing.BarcodeFormat,boolean) -> initializeEncoder
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][]) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
    int round(float) -> round
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    void incrementCount() -> incrementCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$1 -> com.google.zxing.qrcode.detector.FinderPatternFinder$1:
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.encoder.QRCode) -> encode
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map,com.google.zxing.qrcode.encoder.QRCode) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    void initQRCode(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.qrcode.encoder.QRCode) -> initQRCode
    int getTotalInputBytes(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode) -> getTotalInputBytes
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    void interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int,com.google.zxing.common.BitArray) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,int,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode -> $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] HORIZONTAL_SEPARATION_PATTERN -> HORIZONTAL_SEPARATION_PATTERN
    int[][] VERTICAL_SEPARATION_PATTERN -> VERTICAL_SEPARATION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(int,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    boolean isValidValue(int) -> isValidValue
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    int version -> version
    int matrixWidth -> matrixWidth
    int maskPattern -> maskPattern
    int numTotalBytes -> numTotalBytes
    int numDataBytes -> numDataBytes
    int numECBytes -> numECBytes
    int numRSBlocks -> numRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    int getVersion() -> getVersion
    int getMatrixWidth() -> getMatrixWidth
    int getMaskPattern() -> getMaskPattern
    int getNumTotalBytes() -> getNumTotalBytes
    int getNumDataBytes() -> getNumDataBytes
    int getNumECBytes() -> getNumECBytes
    int getNumRSBlocks() -> getNumRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    int at(int,int) -> at
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(int) -> setVersion
    void setMatrixWidth(int) -> setMatrixWidth
    void setMaskPattern(int) -> setMaskPattern
    void setNumTotalBytes(int) -> setNumTotalBytes
    void setNumDataBytes(int) -> setNumDataBytes
    void setNumECBytes(int) -> setNumECBytes
    void setNumRSBlocks(int) -> setNumRSBlocks
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.iflytek.cloud.Setting -> com.iflytek.cloud.Setting:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    com.iflytek.cloud.Setting$LOG_LEVEL d -> d
    java.lang.String e -> e
    void saveLogFile(com.iflytek.cloud.Setting$LOG_LEVEL,java.lang.String) -> saveLogFile
    void showLogcat(boolean) -> showLogcat
    void checkNetwork(boolean) -> checkNetwork
    void setLocationEnable(boolean) -> setLocationEnable
com.iflytek.cloud.Setting$LOG_LEVEL -> com.iflytek.cloud.Setting$LOG_LEVEL:
    com.iflytek.cloud.Setting$LOG_LEVEL all -> all
    com.iflytek.cloud.Setting$LOG_LEVEL detail -> detail
    com.iflytek.cloud.Setting$LOG_LEVEL normal -> normal
    com.iflytek.cloud.Setting$LOG_LEVEL low -> low
    com.iflytek.cloud.Setting$LOG_LEVEL none -> none
    com.iflytek.cloud.Setting$LOG_LEVEL[] a -> a
    com.iflytek.cloud.Setting$LOG_LEVEL[] values() -> values
    com.iflytek.cloud.Setting$LOG_LEVEL valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.Version -> com.iflytek.cloud.Version:
    java.lang.String getVersion() -> getVersion
com.iflytek.cloud.a.a -> com.iflytek.cloud.a.a:
    android.content.SharedPreferences b -> b
    android.content.Context c -> c
    com.iflytek.cloud.a.a a -> a
    boolean d -> d
    long e -> e
    com.iflytek.cloud.a.a c(android.content.Context) -> c
    com.iflytek.cloud.a.a a(android.content.Context) -> a
    void a(java.lang.String,long) -> a
    void a(android.location.Location) -> a
    long b(java.lang.String,long) -> b
    float a(java.lang.String) -> a
    boolean b(android.content.Context) -> b
com.iflytek.cloud.a.b -> com.iflytek.cloud.a.b:
    com.iflytek.cloud.c.a a -> a
    void a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(boolean) -> a
com.iflytek.cloud.a.c -> com.iflytek.cloud.a.c:
    java.text.SimpleDateFormat c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.ArrayList a -> a
    boolean b -> b
    boolean a() -> a
    java.lang.String b() -> b
    long c() -> c
    boolean d() -> d
    void e() -> e
    java.util.ArrayList a(java.lang.String) -> a
    java.lang.String a(java.util.ArrayList) -> a
    java.lang.String f() -> f
    java.lang.String toString() -> toString
com.iflytek.cloud.a.d -> com.iflytek.cloud.a.d:
    com.iflytek.cloud.a.d a -> a
    com.iflytek.cloud.b.e.g b -> b
    com.iflytek.cloud.a.f c -> c
    com.iflytek.cloud.a.d a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    com.iflytek.cloud.a.c b(android.content.Context) -> b
    void a(com.iflytek.cloud.a.c) -> a
    com.iflytek.cloud.b.e.g a(com.iflytek.cloud.a.d,com.iflytek.cloud.b.e.g) -> a
    com.iflytek.cloud.a.f a(com.iflytek.cloud.a.d) -> a
    void b(com.iflytek.cloud.a.d) -> b
com.iflytek.cloud.a.e -> com.iflytek.cloud.a.e:
    android.content.Context a -> a
    com.iflytek.cloud.a.d b -> b
    void a(java.lang.Exception) -> a
    void a(com.iflytek.cloud.b.e.g,byte[]) -> a
    void a(byte[]) -> a
com.iflytek.cloud.a.f -> com.iflytek.cloud.a.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Vector c -> c
    java.util.Vector d -> d
    java.lang.Object e -> e
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.util.Vector a(org.json.JSONArray,boolean) -> a
    org.json.JSONArray a(java.util.Vector) -> a
    org.json.JSONObject b() -> b
    com.iflytek.cloud.a.c b(android.content.Context) -> b
    void a(com.iflytek.cloud.a.c) -> a
    java.lang.String toString() -> toString
com.iflytek.cloud.b.a.a -> com.iflytek.cloud.b.a.a:
    com.iflytek.msc.MSCSessionInfo b -> b
    com.iflytek.msc.MSCSessionInfo c -> c
    byte[] d -> d
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.b.b.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    int b() -> b
    int c() -> c
    int b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    int d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    boolean d() -> d
    byte[] e() -> e
    com.iflytek.cloud.b.b.c$a f() -> f
com.iflytek.cloud.b.a.b -> com.iflytek.cloud.b.a.b:
    com.iflytek.cloud.speech.RecognizerListener a -> a
    long b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    long B -> B
    boolean h -> h
    com.iflytek.cloud.b.a.a i -> i
    com.iflytek.cloud.record.d j -> j
    int k -> k
    int l -> l
    java.lang.String m -> m
    java.util.concurrent.ConcurrentLinkedQueue n -> n
    java.util.concurrent.ConcurrentLinkedQueue o -> o
    java.util.ArrayList p -> p
    long C -> C
    int a() -> a
    java.util.concurrent.ConcurrentLinkedQueue b() -> b
    void a(byte[],int) -> a
    void a(com.iflytek.cloud.speech.RecognizerListener) -> a
    boolean a(boolean) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void A() -> A
    void g() -> g
    void d(boolean) -> d
    void h() -> h
    void i() -> i
    boolean j() -> j
    void k() -> k
    void l() -> l
    void m() -> m
    void B() -> B
    void n() -> n
    void a(byte[]) -> a
    boolean b(boolean) -> b
    void a(byte[],boolean) -> a
    void a(byte[],int,int) -> a
    void a(com.iflytek.cloud.speech.SpeechError) -> a
    void c(boolean) -> c
    void o() -> o
com.iflytek.cloud.b.a.b$1 -> com.iflytek.cloud.b.a.b$1:
    int[] a -> a
com.iflytek.cloud.b.a.c -> com.iflytek.cloud.b.a.c:
    boolean B -> B
    void k() -> k
    boolean a(boolean) -> a
    void a(byte[],int,int) -> a
com.iflytek.cloud.b.b.a -> com.iflytek.cloud.b.b.a:
    int q -> q
    int r -> r
    java.lang.String s -> s
    android.content.Context t -> t
    com.iflytek.cloud.c.a a -> a
    boolean u -> u
    com.iflytek.cloud.b.b.a$a b -> b
    long v -> v
    int w -> w
    com.iflytek.cloud.speech.SpeechError x -> x
    org.json.JSONObject y -> y
    long z -> z
    long A -> A
    java.lang.Runnable c -> c
    boolean j() -> j
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    int s() -> s
    void c() -> c
    void t() -> t
    boolean u() -> u
    void a(com.iflytek.cloud.b.b.a$a) -> a
    com.iflytek.cloud.b.b.a$a v() -> v
    void a(com.iflytek.cloud.c.a) -> a
    com.iflytek.cloud.c.a w() -> w
    void x() -> x
    void e() -> e
    void f() -> f
    void i() -> i
    java.lang.String y() -> y
    void a(long,int) -> a
    void a() -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,long,boolean) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String z() -> z
    com.iflytek.cloud.b.b.a$a a(com.iflytek.cloud.b.b.a) -> a
com.iflytek.cloud.b.b.a$a -> com.iflytek.cloud.b.b.a$a:
    com.iflytek.cloud.b.b.a$a a -> a
    com.iflytek.cloud.b.b.a$a b -> b
    com.iflytek.cloud.b.b.a$a c -> c
    com.iflytek.cloud.b.b.a$a d -> d
    com.iflytek.cloud.b.b.a$a e -> e
    com.iflytek.cloud.b.b.a$a f -> f
    com.iflytek.cloud.b.b.a$a g -> g
    com.iflytek.cloud.b.b.a$a h -> h
    com.iflytek.cloud.b.b.a$a[] i -> i
    com.iflytek.cloud.b.b.a$a[] values() -> values
    com.iflytek.cloud.b.b.a$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.b.b.b -> com.iflytek.cloud.b.b.b:
    com.iflytek.cloud.b.b.a a -> a
    void run() -> run
com.iflytek.cloud.b.b.c -> com.iflytek.cloud.b.b.c:
    char[] a -> a
com.iflytek.cloud.b.b.c$a -> com.iflytek.cloud.b.b.c$a:
    com.iflytek.cloud.b.b.c$a a -> a
    com.iflytek.cloud.b.b.c$a b -> b
    com.iflytek.cloud.b.b.c$a c -> c
    com.iflytek.cloud.b.b.c$a[] d -> d
    com.iflytek.cloud.b.b.c$a[] values() -> values
    com.iflytek.cloud.b.b.c$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.b.b.d -> com.iflytek.cloud.b.b.d:
    android.content.Context a -> a
    java.lang.Object b -> b
    com.iflytek.cloud.c.a c -> c
    com.iflytek.cloud.b.b.a d -> d
    void a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int getSampleRate() -> getSampleRate
    boolean destroy() -> destroy
    boolean d() -> d
    void finalize() -> finalize
com.iflytek.cloud.b.b.d$a -> com.iflytek.cloud.b.b.d$a:
    com.iflytek.cloud.speech.SpeechListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.b.b.d a -> a
    void onData(byte[]) -> onData
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
    com.iflytek.cloud.speech.SpeechListener a(com.iflytek.cloud.b.b.d$a) -> a
com.iflytek.cloud.b.b.e -> com.iflytek.cloud.b.b.e:
    com.iflytek.cloud.b.b.d$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.b.c.a -> com.iflytek.cloud.b.c.a:
    java.lang.Object a -> a
    com.iflytek.msc.MSCSessionInfo b -> b
    void a(android.content.Context,java.lang.String,java.lang.String,com.iflytek.cloud.b.b.a) -> a
    boolean a() -> a
    byte[] a(android.content.Context,java.lang.String,byte[],com.iflytek.cloud.b.b.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.b.b.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.b.b.a,java.lang.String) -> a
com.iflytek.cloud.b.c.b -> com.iflytek.cloud.b.c.b:
    java.lang.String a -> a
    com.iflytek.cloud.b.c.b$a b -> b
    byte[] c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.iflytek.cloud.b.c.a g -> g
    com.iflytek.cloud.speech.SpeechListener h -> h
    void a(com.iflytek.cloud.speech.SpeechListener) -> a
    void a(com.iflytek.cloud.speech.SpeechListener,java.lang.String) -> a
    void a(com.iflytek.cloud.speech.SpeechListener,java.lang.String,byte[]) -> a
    void a(com.iflytek.cloud.speech.SpeechListener,java.lang.String,java.lang.String) -> a
    void e() -> e
    void f() -> f
com.iflytek.cloud.b.c.b$a -> com.iflytek.cloud.b.c.b$a:
    com.iflytek.cloud.b.c.b$a a -> a
    com.iflytek.cloud.b.c.b$a b -> b
    com.iflytek.cloud.b.c.b$a c -> c
    com.iflytek.cloud.b.c.b$a d -> d
    com.iflytek.cloud.b.c.b$a[] e -> e
    com.iflytek.cloud.b.c.b$a[] values() -> values
    com.iflytek.cloud.b.c.b$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.b.d.a -> com.iflytek.cloud.b.d.a:
    java.lang.String c -> c
    com.iflytek.cloud.b.d.c d -> d
    com.iflytek.cloud.b.d.b e -> e
    java.util.ArrayList f -> f
    int g -> g
    int h -> h
    long i -> i
    java.lang.StringBuilder j -> j
    boolean k -> k
    int a -> a
    int b -> b
    void a(java.lang.String,com.iflytek.cloud.b.d.b) -> a
    java.lang.String q() -> q
    void e() -> e
    void f() -> f
com.iflytek.cloud.b.d.b -> com.iflytek.cloud.b.d.b:
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.speech.SpeechError) -> a
com.iflytek.cloud.b.d.c -> com.iflytek.cloud.b.d.c:
    com.iflytek.msc.MSCSessionInfo b -> b
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.b.b.a) -> a
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    byte[] a() -> a
    int b() -> b
    java.lang.String c() -> c
    int b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    int d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    boolean d() -> d
com.iflytek.cloud.b.e.a -> com.iflytek.cloud.b.e.a:
    java.lang.String[][] a -> a
    java.lang.String[][] b -> b
    com.iflytek.cloud.c.a c -> c
    boolean d -> d
    com.iflytek.cloud.c.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(com.iflytek.cloud.c.a,android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.b.e.a.a -> com.iflytek.cloud.b.e.a.a:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.iflytek.cloud.b.e.a.b -> com.iflytek.cloud.b.e.a.b:
    java.io.RandomAccessFile a -> a
    boolean b -> b
    java.lang.Object c -> c
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> b
com.iflytek.cloud.b.e.a.c -> com.iflytek.cloud.b.e.a.c:
    boolean b -> b
    java.util.HashMap a -> a
    long c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String,java.lang.String) -> a
com.iflytek.cloud.b.e.b -> com.iflytek.cloud.b.e.b:
    android.util.DisplayMetrics a -> a
    java.lang.String a(long) -> a
    java.lang.String b(long) -> b
    int a(int,int) -> a
com.iflytek.cloud.b.e.c -> com.iflytek.cloud.b.e.c:
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.b.e.d -> com.iflytek.cloud.b.e.d:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    boolean a(android.os.MemoryFile,long,java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    boolean a(byte[],java.lang.String,boolean,int) -> a
    void a(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String) -> a
    void c(java.lang.String) -> c
com.iflytek.cloud.b.e.e -> com.iflytek.cloud.b.e.e:
    int a -> a
    int b -> b
    boolean a(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.b.e.f -> com.iflytek.cloud.b.e.f:
    int a -> a
    boolean a(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.b.e.g -> com.iflytek.cloud.b.e.g:
    int a -> a
    com.iflytek.cloud.b.e.g$a b -> b
    boolean c -> c
    java.net.URL d -> d
    java.util.ArrayList e -> e
    java.lang.Object f -> f
    int g -> g
    void a(int) -> a
    void a(java.lang.String,java.lang.String,byte[]) -> a
    void a(com.iflytek.cloud.b.e.g$a) -> a
    java.net.URL a(java.lang.String,java.lang.String) -> a
    void run() -> run
    byte[] a(java.io.InputStream) -> a
    void b() -> b
    void b(byte[]) -> b
    void a(byte[]) -> a
    void a(java.lang.Exception) -> a
    int c() -> c
    void a() -> a
    boolean a(java.lang.String) -> a
com.iflytek.cloud.b.e.g$a -> com.iflytek.cloud.b.e.g$a:
    void a(com.iflytek.cloud.b.e.g,byte[]) -> a
    void a(byte[]) -> a
    void a(java.lang.Exception) -> a
com.iflytek.cloud.b.e.h -> com.iflytek.cloud.b.e.h:
    void a(android.content.Context) -> a
    java.lang.String a(android.net.NetworkInfo) -> a
    java.lang.String b(android.net.NetworkInfo) -> b
com.iflytek.cloud.c.a -> com.iflytek.cloud.c.a:
    java.util.HashMap a -> a
    void a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.iflytek.cloud.c.a b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(com.iflytek.cloud.c.a,java.lang.String) -> a
    java.util.HashMap c() -> c
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.Boolean c(java.lang.String) -> c
    java.lang.String toString() -> toString
    java.lang.String d(java.lang.String) -> d
    java.lang.String b(java.lang.String,java.lang.String) -> b
    int a(java.lang.String,int) -> a
    boolean a(java.lang.String,boolean) -> a
    void a(java.lang.String[][]) -> a
    void d() -> d
    java.lang.Object clone() -> clone
com.iflytek.cloud.c.b -> com.iflytek.cloud.c.b:
    java.lang.String[][] a -> a
com.iflytek.cloud.c.c -> com.iflytek.cloud.c.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String a(android.content.Context,com.iflytek.cloud.b.b.a) -> a
    void b(com.iflytek.cloud.c.a) -> b
    boolean a(com.iflytek.cloud.c.a) -> a
    void a(android.content.Context,com.iflytek.cloud.c.a) -> a
    java.lang.String a(android.content.Context,java.lang.String,com.iflytek.cloud.b.b.a) -> a
    java.lang.String b(android.content.Context,com.iflytek.cloud.b.b.a) -> b
    java.lang.String c(android.content.Context,com.iflytek.cloud.b.b.a) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
com.iflytek.cloud.record.PcmPlayer -> com.iflytek.cloud.record.PcmPlayer:
    android.media.AudioTrack b -> b
    com.iflytek.cloud.record.a c -> c
    android.content.Context d -> d
    com.iflytek.cloud.record.PcmPlayer$b e -> e
    com.iflytek.cloud.record.PcmPlayer$a f -> f
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE g -> g
    int h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    java.lang.Object m -> m
    android.media.AudioManager$OnAudioFocusChangeListener a -> a
    int n -> n
    android.os.Handler o -> o
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE a() -> a
    void a(com.iflytek.cloud.record.PcmPlayer$PLAY_STATE) -> a
    void f() -> f
    void b() -> b
    void g() -> g
    boolean c() -> c
    boolean a(com.iflytek.cloud.record.a,com.iflytek.cloud.record.PcmPlayer$a) -> a
    boolean b(com.iflytek.cloud.record.a,com.iflytek.cloud.record.PcmPlayer$a) -> b
    boolean d() -> d
    void e() -> e
    boolean a(com.iflytek.cloud.record.PcmPlayer,boolean) -> a
    com.iflytek.cloud.record.PcmPlayer$a a(com.iflytek.cloud.record.PcmPlayer) -> a
    boolean b(com.iflytek.cloud.record.PcmPlayer) -> b
    boolean c(com.iflytek.cloud.record.PcmPlayer) -> c
    android.content.Context d(com.iflytek.cloud.record.PcmPlayer) -> d
    boolean e(com.iflytek.cloud.record.PcmPlayer) -> e
    com.iflytek.cloud.record.a f(com.iflytek.cloud.record.PcmPlayer) -> f
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE g(com.iflytek.cloud.record.PcmPlayer) -> g
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE a(com.iflytek.cloud.record.PcmPlayer,com.iflytek.cloud.record.PcmPlayer$PLAY_STATE) -> a
    void h(com.iflytek.cloud.record.PcmPlayer) -> h
    android.os.Handler i(com.iflytek.cloud.record.PcmPlayer) -> i
    int a(com.iflytek.cloud.record.PcmPlayer,int) -> a
    android.media.AudioTrack j(com.iflytek.cloud.record.PcmPlayer) -> j
    int k(com.iflytek.cloud.record.PcmPlayer) -> k
    android.media.AudioTrack a(com.iflytek.cloud.record.PcmPlayer,android.media.AudioTrack) -> a
    com.iflytek.cloud.record.PcmPlayer$b a(com.iflytek.cloud.record.PcmPlayer,com.iflytek.cloud.record.PcmPlayer$b) -> a
    com.iflytek.cloud.record.PcmPlayer$a a(com.iflytek.cloud.record.PcmPlayer,com.iflytek.cloud.record.PcmPlayer$a) -> a
    int l(com.iflytek.cloud.record.PcmPlayer) -> l
com.iflytek.cloud.record.PcmPlayer$PLAY_STATE -> com.iflytek.cloud.record.PcmPlayer$PLAY_STATE:
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE INIT -> INIT
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE BUFFERING -> BUFFERING
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE PLAYING -> PLAYING
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE PAUSED -> PAUSED
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE STOPED -> STOPED
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE[] a -> a
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE[] values() -> values
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.record.PcmPlayer$a -> com.iflytek.cloud.record.PcmPlayer$a:
    void a(com.iflytek.cloud.speech.SpeechError) -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void c() -> c
com.iflytek.cloud.record.PcmPlayer$b -> com.iflytek.cloud.record.PcmPlayer$b:
    com.iflytek.cloud.record.PcmPlayer a -> a
    void run() -> run
com.iflytek.cloud.record.a -> com.iflytek.cloud.record.a:
    int a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    int d -> d
    int e -> e
    android.os.MemoryFile f -> f
    long g -> g
    int h -> h
    com.iflytek.cloud.record.a$a i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void a(java.lang.String) -> a
    int a() -> a
    void a(java.util.ArrayList,int,int,int) -> a
    boolean b() -> b
    boolean a(int) -> a
    void a(byte[]) -> a
    java.lang.String i() -> i
    void c() -> c
    int d() -> d
    com.iflytek.cloud.record.a$a e() -> e
    boolean f() -> f
    boolean g() -> g
    void a(android.media.AudioTrack,int) -> a
    void b(android.media.AudioTrack,int) -> b
    void h() -> h
    void finalize() -> finalize
com.iflytek.cloud.record.a$a -> com.iflytek.cloud.record.a$a:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.iflytek.cloud.record.a e -> e
com.iflytek.cloud.record.b -> com.iflytek.cloud.record.b:
    com.iflytek.cloud.record.PcmPlayer a -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.iflytek.cloud.record.c -> com.iflytek.cloud.record.c:
    com.iflytek.cloud.record.PcmPlayer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.record.d -> com.iflytek.cloud.record.d:
    short a -> a
    byte[] b -> b
    android.media.AudioRecord c -> c
    com.iflytek.cloud.record.d$a d -> d
    com.iflytek.cloud.record.d$a e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    void a(short,int,int) -> a
    int b() -> b
    void a() -> a
    void a(com.iflytek.cloud.record.d$a) -> a
    void run() -> run
    void finalize() -> finalize
    void c() -> c
com.iflytek.cloud.record.d$a -> com.iflytek.cloud.record.d$a:
    void a(byte[],int,int) -> a
    void a(com.iflytek.cloud.speech.SpeechError) -> a
    void c(boolean) -> c
    void o() -> o
com.iflytek.cloud.resource.Resource -> com.iflytek.cloud.resource.Resource:
    java.util.Locale a -> a
    int TEXT_POWER_LINK -> TEXT_POWER_LINK
    int TEXT_HELP_LINK -> TEXT_HELP_LINK
    int TEXT_KNOW -> TEXT_KNOW
    int TEXT_DETAIL -> TEXT_DETAIL
    int TEXT_CANCEL -> TEXT_CANCEL
    int TEXT_STOP -> TEXT_STOP
    int TEXT_SET -> TEXT_SET
    int TEXT_MORE -> TEXT_MORE
    int TEXT_RETRY -> TEXT_RETRY
    int TEXT_AGAIN -> TEXT_AGAIN
    int TEXT_PLAYBACK -> TEXT_PLAYBACK
    int TEXT_RETRIEVE -> TEXT_RETRIEVE
    int TEXT_HELP_SMS -> TEXT_HELP_SMS
    int TEXT_HELP_RECO -> TEXT_HELP_RECO
    int TITLE_HELP -> TITLE_HELP
    int TITLE_CONNECTING -> TITLE_CONNECTING
    int TITLE_RECORDING -> TITLE_RECORDING
    int TITLE_RECOGNIZE_WAITING -> TITLE_RECOGNIZE_WAITING
    int TITLE_AUDIO_REQUEST -> TITLE_AUDIO_REQUEST
    int TITLE_ERROR -> TITLE_ERROR
    int TITLE_AUDIO_PLAYING -> TITLE_AUDIO_PLAYING
    int TITLE_DATA_UPLOAD -> TITLE_DATA_UPLOAD
    int TAG_ERROR_CODE -> TAG_ERROR_CODE
    int TAG_ERROR_UNKNOWN -> TAG_ERROR_UNKNOWN
    void setUILanguage(java.util.Locale) -> setUILanguage
    java.lang.String getLanguage() -> getLanguage
    boolean matchLanguage(java.lang.String) -> matchLanguage
    boolean a(java.lang.String) -> a
    void setTitle(int,java.lang.String) -> setTitle
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getText(int) -> getText
    void setText(int,java.lang.String) -> setText
    java.lang.String getErrorDescription(int) -> getErrorDescription
    void setErrorDescription(int,java.lang.String) -> setErrorDescription
    java.lang.String getErrorTag(int) -> getErrorTag
com.iflytek.cloud.resource.a -> com.iflytek.cloud.resource.a:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.b -> com.iflytek.cloud.resource.b:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.c -> com.iflytek.cloud.resource.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.speech.DataDownloader -> com.iflytek.cloud.speech.DataDownloader:
    void downloadData(com.iflytek.cloud.speech.SpeechListener) -> downloadData
    boolean d() -> d
com.iflytek.cloud.speech.DataUploader -> com.iflytek.cloud.speech.DataUploader:
    void uploadData(com.iflytek.cloud.speech.SpeechListener,java.lang.String,byte[]) -> uploadData
    boolean d() -> d
com.iflytek.cloud.speech.ErrorCode -> com.iflytek.cloud.speech.ErrorCode:
    int MSP_ERROR_NET_END -> MSP_ERROR_NET_END
    int MSP_ERROR_LOGIN_END -> MSP_ERROR_LOGIN_END
    int MSP_SUCCESS -> MSP_SUCCESS
    int MSP_ERROR_FAIL -> MSP_ERROR_FAIL
    int MSP_ERROR_EXCEPTION -> MSP_ERROR_EXCEPTION
    int MSP_ERROR_GENERAL -> MSP_ERROR_GENERAL
    int MSP_ERROR_OUT_OF_MEMORY -> MSP_ERROR_OUT_OF_MEMORY
    int MSP_ERROR_FILE_NOT_FOUND -> MSP_ERROR_FILE_NOT_FOUND
    int MSP_ERROR_NOT_SUPPORT -> MSP_ERROR_NOT_SUPPORT
    int MSP_ERROR_NOT_IMPLEMENT -> MSP_ERROR_NOT_IMPLEMENT
    int MSP_ERROR_ACCESS -> MSP_ERROR_ACCESS
    int MSP_ERROR_INVALID_PARA -> MSP_ERROR_INVALID_PARA
    int MSP_ERROR_INVALID_PARA_VALUE -> MSP_ERROR_INVALID_PARA_VALUE
    int MSP_ERROR_INVALID_HANDLE -> MSP_ERROR_INVALID_HANDLE
    int MSP_ERROR_INVALID_DATA -> MSP_ERROR_INVALID_DATA
    int MSP_ERROR_NO_LICENSE -> MSP_ERROR_NO_LICENSE
    int MSP_ERROR_NOT_INIT -> MSP_ERROR_NOT_INIT
    int MSP_ERROR_NULL_HANDLE -> MSP_ERROR_NULL_HANDLE
    int MSP_ERROR_OVERFLOW -> MSP_ERROR_OVERFLOW
    int MSP_ERROR_TIME_OUT -> MSP_ERROR_TIME_OUT
    int MSP_ERROR_OPEN_FILE -> MSP_ERROR_OPEN_FILE
    int MSP_ERROR_NOT_FOUND -> MSP_ERROR_NOT_FOUND
    int MSP_ERROR_NO_ENOUGH_BUFFER -> MSP_ERROR_NO_ENOUGH_BUFFER
    int MSP_ERROR_NO_DATA -> MSP_ERROR_NO_DATA
    int MSP_ERROR_NO_MORE_DATA -> MSP_ERROR_NO_MORE_DATA
    int MSP_ERROR_SKIPPED -> MSP_ERROR_SKIPPED
    int MSP_ERROR_ALREADY_EXIST -> MSP_ERROR_ALREADY_EXIST
    int MSP_ERROR_LOAD_MODULE -> MSP_ERROR_LOAD_MODULE
    int MSP_ERROR_BUSY -> MSP_ERROR_BUSY
    int MSP_ERROR_INVALID_CONFIG -> MSP_ERROR_INVALID_CONFIG
    int MSP_ERROR_VERSION_CHECK -> MSP_ERROR_VERSION_CHECK
    int MSP_ERROR_CANCELED -> MSP_ERROR_CANCELED
    int MSP_ERROR_INVALID_MEDIA_TYPE -> MSP_ERROR_INVALID_MEDIA_TYPE
    int MSP_ERROR_CONFIG_INITIALIZE -> MSP_ERROR_CONFIG_INITIALIZE
    int MSP_ERROR_CREATE_HANDLE -> MSP_ERROR_CREATE_HANDLE
    int MSP_ERROR_CODING_LIB_NOT_LOAD -> MSP_ERROR_CODING_LIB_NOT_LOAD
    int MSP_ERROR_USER_CANCELLED -> MSP_ERROR_USER_CANCELLED
    int MSP_ERROR_INVALID_OPERATION -> MSP_ERROR_INVALID_OPERATION
    int MSP_ERROR_NET_GENERAL -> MSP_ERROR_NET_GENERAL
    int MSP_ERROR_NET_OPENSOCK -> MSP_ERROR_NET_OPENSOCK
    int MSP_ERROR_NET_CONNECTSOCK -> MSP_ERROR_NET_CONNECTSOCK
    int MSP_ERROR_NET_ACCEPTSOCK -> MSP_ERROR_NET_ACCEPTSOCK
    int MSP_ERROR_NET_SENDSOCK -> MSP_ERROR_NET_SENDSOCK
    int MSP_ERROR_NET_RECVSOCK -> MSP_ERROR_NET_RECVSOCK
    int MSP_ERROR_NET_INVALIDSOCK -> MSP_ERROR_NET_INVALIDSOCK
    int MSP_ERROR_NET_BADADDRESS -> MSP_ERROR_NET_BADADDRESS
    int MSP_ERROR_NET_BINDSEQUENCE -> MSP_ERROR_NET_BINDSEQUENCE
    int MSP_ERROR_NET_NOTOPENSOCK -> MSP_ERROR_NET_NOTOPENSOCK
    int MSP_ERROR_NET_NOTBIND -> MSP_ERROR_NET_NOTBIND
    int MSP_ERROR_NET_NOTLISTEN -> MSP_ERROR_NET_NOTLISTEN
    int MSP_ERROR_NET_CONNECTCLOSE -> MSP_ERROR_NET_CONNECTCLOSE
    int MSP_ERROR_NET_NOTDGRAMSOCK -> MSP_ERROR_NET_NOTDGRAMSOCK
    int MSP_ERROR_NET_DNS -> MSP_ERROR_NET_DNS
    int MSP_ERROR_NET_INIT -> MSP_ERROR_NET_INIT
    int MSP_ERROR_MSG_GENERAL -> MSP_ERROR_MSG_GENERAL
    int MSP_ERROR_MSG_PARSE_ERROR -> MSP_ERROR_MSG_PARSE_ERROR
    int MSP_ERROR_MSG_BUILD_ERROR -> MSP_ERROR_MSG_BUILD_ERROR
    int MSP_ERROR_MSG_PARAM_ERROR -> MSP_ERROR_MSG_PARAM_ERROR
    int MSP_ERROR_MSG_CONTENT_EMPTY -> MSP_ERROR_MSG_CONTENT_EMPTY
    int MSP_ERROR_MSG_INVALID_CONTENT_TYPE -> MSP_ERROR_MSG_INVALID_CONTENT_TYPE
    int MSP_ERROR_MSG_INVALID_CONTENT_LENGTH -> MSP_ERROR_MSG_INVALID_CONTENT_LENGTH
    int MSP_ERROR_MSG_INVALID_CONTENT_ENCODE -> MSP_ERROR_MSG_INVALID_CONTENT_ENCODE
    int MSP_ERROR_MSG_INVALID_KEY -> MSP_ERROR_MSG_INVALID_KEY
    int MSP_ERROR_MSG_KEY_EMPTY -> MSP_ERROR_MSG_KEY_EMPTY
    int MSP_ERROR_MSG_SESSION_ID_EMPTY -> MSP_ERROR_MSG_SESSION_ID_EMPTY
    int MSP_ERROR_MSG_LOGIN_ID_EMPTY -> MSP_ERROR_MSG_LOGIN_ID_EMPTY
    int MSP_ERROR_MSG_SYNC_ID_EMPTY -> MSP_ERROR_MSG_SYNC_ID_EMPTY
    int MSP_ERROR_MSG_APP_ID_EMPTY -> MSP_ERROR_MSG_APP_ID_EMPTY
    int MSP_ERROR_MSG_EXTERN_ID_EMPTY -> MSP_ERROR_MSG_EXTERN_ID_EMPTY
    int MSP_ERROR_MSG_INVALID_CMD -> MSP_ERROR_MSG_INVALID_CMD
    int MSP_ERROR_MSG_INVALID_SUBJECT -> MSP_ERROR_MSG_INVALID_SUBJECT
    int MSP_ERROR_MSG_INVALID_VERSION -> MSP_ERROR_MSG_INVALID_VERSION
    int MSP_ERROR_MSG_NO_CMD -> MSP_ERROR_MSG_NO_CMD
    int MSP_ERROR_MSG_NO_SUBJECT -> MSP_ERROR_MSG_NO_SUBJECT
    int MSP_ERROR_MSG_NO_VERSION -> MSP_ERROR_MSG_NO_VERSION
    int MSP_ERROR_MSG_MSSP_EMPTY -> MSP_ERROR_MSG_MSSP_EMPTY
    int MSP_ERROR_MSG_NEW_RESPONSE -> MSP_ERROR_MSG_NEW_RESPONSE
    int MSP_ERROR_MSG_NEW_CONTENT -> MSP_ERROR_MSG_NEW_CONTENT
    int MSP_ERROR_MSG_INVALID_SESSION_ID -> MSP_ERROR_MSG_INVALID_SESSION_ID
    int MSP_ERROR_MSG_INVALID_CONTENT -> MSP_ERROR_MSG_INVALID_CONTENT
    int MSP_ERROR_DB_GENERAL -> MSP_ERROR_DB_GENERAL
    int MSP_ERROR_DB_EXCEPTION -> MSP_ERROR_DB_EXCEPTION
    int MSP_ERROR_DB_NO_RESULT -> MSP_ERROR_DB_NO_RESULT
    int MSP_ERROR_DB_INVALID_USER -> MSP_ERROR_DB_INVALID_USER
    int MSP_ERROR_DB_INVALID_PWD -> MSP_ERROR_DB_INVALID_PWD
    int MSP_ERROR_DB_CONNECT -> MSP_ERROR_DB_CONNECT
    int MSP_ERROR_DB_INVALID_SQL -> MSP_ERROR_DB_INVALID_SQL
    int MSP_ERROR_DB_INVALID_APPID -> MSP_ERROR_DB_INVALID_APPID
    int MSP_ERROR_RES_GENERAL -> MSP_ERROR_RES_GENERAL
    int MSP_ERROR_RES_LOAD -> MSP_ERROR_RES_LOAD
    int MSP_ERROR_RES_FREE -> MSP_ERROR_RES_FREE
    int MSP_ERROR_RES_MISSING -> MSP_ERROR_RES_MISSING
    int MSP_ERROR_RES_INVALID_NAME -> MSP_ERROR_RES_INVALID_NAME
    int MSP_ERROR_RES_INVALID_ID -> MSP_ERROR_RES_INVALID_ID
    int MSP_ERROR_RES_INVALID_IMG -> MSP_ERROR_RES_INVALID_IMG
    int MSP_ERROR_RES_WRITE -> MSP_ERROR_RES_WRITE
    int MSP_ERROR_RES_LEAK -> MSP_ERROR_RES_LEAK
    int MSP_ERROR_RES_HEAD -> MSP_ERROR_RES_HEAD
    int MSP_ERROR_RES_DATA -> MSP_ERROR_RES_DATA
    int MSP_ERROR_RES_SKIP -> MSP_ERROR_RES_SKIP
    int MSP_ERROR_TTS_GENERAL -> MSP_ERROR_TTS_GENERAL
    int MSP_ERROR_TTS_TEXTEND -> MSP_ERROR_TTS_TEXTEND
    int MSP_ERROR_TTS_TEXT_EMPTY -> MSP_ERROR_TTS_TEXT_EMPTY
    int MSP_ERROR_REC_GENERAL -> MSP_ERROR_REC_GENERAL
    int MSP_ERROR_REC_INACTIVE -> MSP_ERROR_REC_INACTIVE
    int MSP_ERROR_REC_GRAMMAR_ERROR -> MSP_ERROR_REC_GRAMMAR_ERROR
    int MSP_ERROR_REC_NO_ACTIVE_GRAMMARS -> MSP_ERROR_REC_NO_ACTIVE_GRAMMARS
    int MSP_ERROR_REC_DUPLICATE_GRAMMAR -> MSP_ERROR_REC_DUPLICATE_GRAMMAR
    int MSP_ERROR_REC_INVALID_MEDIA_TYPE -> MSP_ERROR_REC_INVALID_MEDIA_TYPE
    int MSP_ERROR_REC_INVALID_LANGUAGE -> MSP_ERROR_REC_INVALID_LANGUAGE
    int MSP_ERROR_REC_URI_NOT_FOUND -> MSP_ERROR_REC_URI_NOT_FOUND
    int MSP_ERROR_REC_URI_TIMEOUT -> MSP_ERROR_REC_URI_TIMEOUT
    int MSP_ERROR_REC_URI_FETCH_ERROR -> MSP_ERROR_REC_URI_FETCH_ERROR
    int MSP_ERROR_EP_GENERAL -> MSP_ERROR_EP_GENERAL
    int MSP_ERROR_EP_NO_SESSION_NAME -> MSP_ERROR_EP_NO_SESSION_NAME
    int MSP_ERROR_EP_INACTIVE -> MSP_ERROR_EP_INACTIVE
    int MSP_ERROR_EP_INITIALIZED -> MSP_ERROR_EP_INITIALIZED
    int MSP_ERROR_TUV_GENERAL -> MSP_ERROR_TUV_GENERAL
    int MSP_ERROR_TUV_GETHIDPARAM -> MSP_ERROR_TUV_GETHIDPARAM
    int MSP_ERROR_TUV_TOKEN -> MSP_ERROR_TUV_TOKEN
    int MSP_ERROR_TUV_CFGFILE -> MSP_ERROR_TUV_CFGFILE
    int MSP_ERROR_TUV_RECV_CONTENT -> MSP_ERROR_TUV_RECV_CONTENT
    int MSP_ERROR_TUV_VERFAIL -> MSP_ERROR_TUV_VERFAIL
    int MSP_ERROR_LOGIN_SUCCESS -> MSP_ERROR_LOGIN_SUCCESS
    int MSP_ERROR_LOGIN_NO_LICENSE -> MSP_ERROR_LOGIN_NO_LICENSE
    int MSP_ERROR_LOGIN_SESSIONID_INVALID -> MSP_ERROR_LOGIN_SESSIONID_INVALID
    int MSP_ERROR_LOGIN_SESSIONID_ERROR -> MSP_ERROR_LOGIN_SESSIONID_ERROR
    int MSP_ERROR_LOGIN_UNLOGIN -> MSP_ERROR_LOGIN_UNLOGIN
    int MSP_ERROR_LOGIN_INVALID_USER -> MSP_ERROR_LOGIN_INVALID_USER
    int MSP_ERROR_LOGIN_INVALID_PWD -> MSP_ERROR_LOGIN_INVALID_PWD
    int MSP_ERROR_LOGIN_SYSTEM_ERROR -> MSP_ERROR_LOGIN_SYSTEM_ERROR
    int MSP_ERROR_HCR_GENERAL -> MSP_ERROR_HCR_GENERAL
    int MSP_ERROR_HCR_RESOURCE_NOT_EXIST -> MSP_ERROR_HCR_RESOURCE_NOT_EXIST
    int MSP_ERROR_HCR_CREATE -> MSP_ERROR_HCR_CREATE
    int MSP_ERROR_HCR_DESTROY -> MSP_ERROR_HCR_DESTROY
    int MSP_ERROR_HCR_START -> MSP_ERROR_HCR_START
    int MSP_ERROR_HCR_APPEND_STROKES -> MSP_ERROR_HCR_APPEND_STROKES
    int MSP_ERROR_HCR_GET_RESULT -> MSP_ERROR_HCR_GET_RESULT
    int MSP_ERROR_HCR_SET_PREDICT_DATA -> MSP_ERROR_HCR_SET_PREDICT_DATA
    int MSP_ERROR_HCR_GET_PREDICT_RESULT -> MSP_ERROR_HCR_GET_PREDICT_RESULT
    int MSP_ERROR_HCR_GETRESULT -> MSP_ERROR_HCR_GETRESULT
    int MSP_ERROR_HCR_RESOURCE -> MSP_ERROR_HCR_RESOURCE
    int MSP_ERROR_AUTH_NO_LICENSE -> MSP_ERROR_AUTH_NO_LICENSE
    int MSP_ERROR_AUTH_NO_ENOUGH_LICENSE -> MSP_ERROR_AUTH_NO_ENOUGH_LICENSE
    int MSP_ERROR_AUTH_INVALID_LICENSE -> MSP_ERROR_AUTH_INVALID_LICENSE
    int MSP_ERROR_AUTH_LICENSE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_EXPIRED
    int MSP_ERROR_AUTH_NEED_MORE_DATA -> MSP_ERROR_AUTH_NEED_MORE_DATA
    int MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED
    int MSP_ERROR_HTTP_BASE -> MSP_ERROR_HTTP_BASE
    int MSP_ERROR_ISV_NO_USER -> MSP_ERROR_ISV_NO_USER
    int MSP_ERROR_LUA_BASE -> MSP_ERROR_LUA_BASE
    int MSP_ERROR_LUA_YIELD -> MSP_ERROR_LUA_YIELD
    int MSP_ERROR_LUA_ERRRUN -> MSP_ERROR_LUA_ERRRUN
    int MSP_ERROR_LUA_ERRSYNTAX -> MSP_ERROR_LUA_ERRSYNTAX
    int MSP_ERROR_LUA_ERRMEM -> MSP_ERROR_LUA_ERRMEM
    int MSP_ERROR_LUA_ERRERR -> MSP_ERROR_LUA_ERRERR
    int MSP_ERROR_LUA_INVALID_PARAM -> MSP_ERROR_LUA_INVALID_PARAM
    int MSP_ERROR_MMP_BASE -> MSP_ERROR_MMP_BASE
    int MSP_ERROR_MMP_MYSQL_INITFAIL -> MSP_ERROR_MMP_MYSQL_INITFAIL
    int MSP_ERROR_MMP_REDIS_INITFAIL -> MSP_ERROR_MMP_REDIS_INITFAIL
    int MSP_ERROR_MMP_NETDSS_INITFAIL -> MSP_ERROR_MMP_NETDSS_INITFAIL
    int MSP_ERROR_MMP_TAIR_INITFAIL -> MSP_ERROR_MMP_TAIR_INITFAIL
    int MSP_ERROR_MMP_MAIL_SESSION_FAIL -> MSP_ERROR_MMP_MAIL_SESSION_FAIL
    int MSP_ERROR_MMP_MAIL_LOGON_FAIL -> MSP_ERROR_MMP_MAIL_LOGON_FAIL
    int MSP_ERROR_MMP_MAIL_USER_ILLEGAL -> MSP_ERROR_MMP_MAIL_USER_ILLEGAL
    int MSP_ERROR_MMP_MAIL_PWD_ERR -> MSP_ERROR_MMP_MAIL_PWD_ERR
    int MSP_ERROR_MMP_MAIL_SOCKET_ERR -> MSP_ERROR_MMP_MAIL_SOCKET_ERR
    int MSP_ERROR_MMP_MAIL_INIT_FAIL -> MSP_ERROR_MMP_MAIL_INIT_FAIL
    int MSP_ERROR_MMP_STORE_MNR_NO_INIT -> MSP_ERROR_MMP_STORE_MNR_NO_INIT
    int MSP_ERROR_MMP_STORE_MNR_POOL_FULL -> MSP_ERROR_MMP_STORE_MNR_POOL_FULL
    int MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL -> MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL
    int MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG -> MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG
    int MSP_ERROR_MMP_PARAM_NULL -> MSP_ERROR_MMP_PARAM_NULL
    int MSP_ERROR_MMP_ERR_MORE_TOTAL -> MSP_ERROR_MMP_ERR_MORE_TOTAL
    int MSP_ERROR_MMP_PROC_THRESHOLD -> MSP_ERROR_MMP_PROC_THRESHOLD
    int MSP_ERROR_MMP_SERVER_THRESHOLD -> MSP_ERROR_MMP_SERVER_THRESHOLD
    int MSP_ERROR_MMP_PYTHON_NO_EXIST -> MSP_ERROR_MMP_PYTHON_NO_EXIST
    int MSP_ERROR_MMP_PYTHON_IMPORT_FAILED -> MSP_ERROR_MMP_PYTHON_IMPORT_FAILED
    int MSP_ERROR_MMP_PYTHON_BAD_FUNC -> MSP_ERROR_MMP_PYTHON_BAD_FUNC
    int MSP_ERROR_MMP_DB_DATA_ILLEGAL -> MSP_ERROR_MMP_DB_DATA_ILLEGAL
    int MSP_ERROR_MMP_REDIS_NOT_CONN -> MSP_ERROR_MMP_REDIS_NOT_CONN
    int MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY -> MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY
    int MSP_ERROR_MMP_TAIR_CONNECT -> MSP_ERROR_MMP_TAIR_CONNECT
    int MSP_ERROR_MMP_PMC_SERVINFO_INVALID -> MSP_ERROR_MMP_PMC_SERVINFO_INVALID
    int MSP_ERROR_MMP_ALARM_GROUP_NULL -> MSP_ERROR_MMP_ALARM_GROUP_NULL
    int MSP_ERROR_MMP_ALARM_CONTXT_NULL -> MSP_ERROR_MMP_ALARM_CONTXT_NULL
    int MSP_ERROR_LMOD_BASE -> MSP_ERROR_LMOD_BASE
    int MSP_ERROR_LMOD_NOT_FOUND -> MSP_ERROR_LMOD_NOT_FOUND
    int MSP_ERROR_LMOD_UNEXPECTED_BIN -> MSP_ERROR_LMOD_UNEXPECTED_BIN
    int MSP_ERROR_LMOD_LOADCODE -> MSP_ERROR_LMOD_LOADCODE
    int MSP_ERROR_LMOD_PRECALL -> MSP_ERROR_LMOD_PRECALL
    int MSP_ERROR_LMOD_RUNTIME_EXCEPTION -> MSP_ERROR_LMOD_RUNTIME_EXCEPTION
    int MSP_ERROR_LMOD_ALREADY_LOADED -> MSP_ERROR_LMOD_ALREADY_LOADED
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_NO_NETWORK -> ERROR_NO_NETWORK
    int ERROR_NETWORK_TIMEOUT -> ERROR_NETWORK_TIMEOUT
    int ERROR_NET_EXPECTION -> ERROR_NET_EXPECTION
    int ERROR_INVALID_RESULT -> ERROR_INVALID_RESULT
    int ERROR_NO_MATCH -> ERROR_NO_MATCH
    int ERROR_AUDIO_RECORD -> ERROR_AUDIO_RECORD
    int ERROR_NO_SPPECH -> ERROR_NO_SPPECH
    int ERROR_SPEECH_TIMEOUT -> ERROR_SPEECH_TIMEOUT
    int ERROR_EMPTY_UTTERANCE -> ERROR_EMPTY_UTTERANCE
    int ERROR_FILE_ACCESS -> ERROR_FILE_ACCESS
    int ERROR_PLAY_MEDIA -> ERROR_PLAY_MEDIA
    int ERROR_INVALID_PARAM -> ERROR_INVALID_PARAM
    int ERROR_TEXT_OVERFLOW -> ERROR_TEXT_OVERFLOW
    int ERROR_INVALID_DATA -> ERROR_INVALID_DATA
    int ERROR_LOGIN -> ERROR_LOGIN
    int ERROR_PERMISSION_DENIED -> ERROR_PERMISSION_DENIED
    int ERROR_INTERRUPT -> ERROR_INTERRUPT
    int ERROR_VERSION_LOWER -> ERROR_VERSION_LOWER
    int ERROR_COMPONENT_NOT_INSTALLED -> ERROR_COMPONENT_NOT_INSTALLED
    int ERROR_ENGINE_NOT_SUPPORTED -> ERROR_ENGINE_NOT_SUPPORTED
    int ERROR_ENGINE_INIT_FAIL -> ERROR_ENGINE_INIT_FAIL
    int ERROR_ENGINE_CALL_FAIL -> ERROR_ENGINE_CALL_FAIL
    int ERROR_ENGINE_BUSY -> ERROR_ENGINE_BUSY
    int ERROR_LOCAL_NO_INIT -> ERROR_LOCAL_NO_INIT
    int ERROR_LOCAL_RESOURCE -> ERROR_LOCAL_RESOURCE
    int ERROR_LOCAL_ENGINE -> ERROR_LOCAL_ENGINE
    int ERROR_IVW_INTERRUPT -> ERROR_IVW_INTERRUPT
com.iflytek.cloud.speech.RecognizerListener -> com.iflytek.cloud.speech.RecognizerListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.speech.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.speech.SpeechError) -> onError
    void onEvent(int,int,int,java.lang.String) -> onEvent
com.iflytek.cloud.speech.RecognizerResult -> com.iflytek.cloud.speech.RecognizerResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.speech.SpeechConstant -> com.iflytek.cloud.speech.SpeechConstant:
    java.lang.String APPID -> APPID
    java.lang.String WAP_PROXY -> WAP_PROXY
    java.lang.String NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String KEY_SPEECH_TIMEOUT -> KEY_SPEECH_TIMEOUT
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String ACCENT -> ACCENT
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String CLOUD_GRAMMAR -> CLOUD_GRAMMAR
    java.lang.String AUDIO_SOURCE -> AUDIO_SOURCE
    java.lang.String VAD_BOS -> VAD_BOS
    java.lang.String VAD_EOS -> VAD_EOS
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String PARAMS -> PARAMS
    java.lang.String ASR_NBEST -> ASR_NBEST
    java.lang.String ASR_WBEST -> ASR_WBEST
    java.lang.String ASR_PTT -> ASR_PTT
    java.lang.String RESULT_TYPE -> RESULT_TYPE
    java.lang.String SEARCH_AREA -> SEARCH_AREA
    java.lang.String SCENE -> SCENE
    java.lang.String NLP_VERSION -> NLP_VERSION
    java.lang.String AUDIO_FORMAT -> AUDIO_FORMAT
    java.lang.String VOICE_NAME -> VOICE_NAME
    java.lang.String SPEED -> SPEED
    java.lang.String PITCH -> PITCH
    java.lang.String VOLUME -> VOLUME
    java.lang.String BACKGROUND_SOUND -> BACKGROUND_SOUND
    java.lang.String TTS_BUFFER_TIME -> TTS_BUFFER_TIME
    java.lang.String STREAM_TYPE -> STREAM_TYPE
    java.lang.String KEY_REQUEST_FOCUS -> KEY_REQUEST_FOCUS
    java.lang.String DATA_TYPE -> DATA_TYPE
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String ASR_AUDIO_PATH -> ASR_AUDIO_PATH
    java.lang.String TTS_AUDIO_PATH -> TTS_AUDIO_PATH
com.iflytek.cloud.speech.SpeechError -> com.iflytek.cloud.speech.SpeechError:
    long serialVersionUID -> serialVersionUID
    int ERROR_INTERRUPT -> ERROR_INTERRUPT
    int a -> a
    java.lang.String b -> b
    java.lang.String toString() -> toString
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorDescription() -> getErrorDescription
    java.lang.String getHtmlDescription(boolean) -> getHtmlDescription
    java.lang.String getPlainDescription(boolean) -> getPlainDescription
com.iflytek.cloud.speech.SpeechEvent -> com.iflytek.cloud.speech.SpeechEvent:
    int EVENT_NETPREF -> EVENT_NETPREF
com.iflytek.cloud.speech.SpeechListener -> com.iflytek.cloud.speech.SpeechListener:
    void onEvent(int,android.os.Bundle) -> onEvent
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
com.iflytek.cloud.speech.SpeechRecognizer -> com.iflytek.cloud.speech.SpeechRecognizer:
    com.iflytek.cloud.speech.SpeechRecognizer e -> e
    com.iflytek.cloud.speech.SpeechRecognizer createRecognizer(android.content.Context) -> createRecognizer
    com.iflytek.cloud.speech.SpeechRecognizer getRecognizer() -> getRecognizer
    boolean d() -> d
    void startListening(com.iflytek.cloud.speech.RecognizerListener) -> startListening
    boolean writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    int getUpflowBytes(boolean) -> getUpflowBytes
    int getDownflowBytes(boolean) -> getDownflowBytes
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.speech.SpeechSynthesizer -> com.iflytek.cloud.speech.SpeechSynthesizer:
    com.iflytek.cloud.speech.SpeechSynthesizer createSynthesizer(android.content.Context) -> createSynthesizer
    com.iflytek.cloud.speech.SpeechSynthesizer getSynthesizer() -> getSynthesizer
    void startSpeaking(java.lang.String,com.iflytek.cloud.speech.SynthesizerListener) -> startSpeaking
    void synthesizeToUri(java.lang.String,java.lang.String,com.iflytek.cloud.speech.SynthesizeToUriListener) -> synthesizeToUri
    void pauseSpeaking() -> pauseSpeaking
    void resumeSpeaking() -> resumeSpeaking
    void stopSpeaking() -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    void replaySpeaking() -> replaySpeaking
    int getDownflowBytes(boolean) -> getDownflowBytes
    int getUpflowBytes(boolean) -> getUpflowBytes
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    boolean destroy() -> destroy
com.iflytek.cloud.speech.SpeechUnderstander -> com.iflytek.cloud.speech.SpeechUnderstander:
    com.iflytek.cloud.speech.SpeechUnderstander a -> a
    com.iflytek.cloud.speech.a.a b -> b
    com.iflytek.cloud.speech.SpeechUnderstander createUnderstander(android.content.Context) -> createUnderstander
    com.iflytek.cloud.speech.SpeechUnderstander getUnderstander() -> getUnderstander
    void startUnderstanding(com.iflytek.cloud.speech.SpeechUnderstanderListener) -> startUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    boolean writeAudio(byte[],int,int) -> writeAudio
    void stopUnderstanding() -> stopUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.speech.SpeechUnderstander$a -> com.iflytek.cloud.speech.SpeechUnderstander$a:
    com.iflytek.cloud.speech.SpeechUnderstanderListener b -> b
    com.iflytek.cloud.speech.SpeechUnderstander a -> a
    void onEndOfSpeech() -> onEndOfSpeech
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.speech.SpeechError) -> onError
    void onEvent(int,int,int,java.lang.String) -> onEvent
    void onResult(com.iflytek.cloud.speech.RecognizerResult,boolean) -> onResult
com.iflytek.cloud.speech.SpeechUnderstanderListener -> com.iflytek.cloud.speech.SpeechUnderstanderListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.speech.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.speech.SpeechError) -> onError
    void onEvent(int,int,int,java.lang.String) -> onEvent
com.iflytek.cloud.speech.SpeechUser -> com.iflytek.cloud.speech.SpeechUser:
    com.iflytek.cloud.speech.SpeechUser e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.iflytek.cloud.c.a h -> h
    com.iflytek.cloud.speech.SpeechUser$Login_State i -> i
    com.iflytek.cloud.speech.SpeechUser getUser() -> getUser
    com.iflytek.cloud.c.a getInitParam() -> getInitParam
    void a(java.lang.String) -> a
    com.iflytek.cloud.speech.SpeechUser$Login_State getLoginState() -> getLoginState
    boolean login(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.speech.SpeechListener) -> login
    boolean logout() -> logout
    boolean d() -> d
    com.iflytek.cloud.speech.SpeechUser$Login_State a(com.iflytek.cloud.speech.SpeechUser,com.iflytek.cloud.speech.SpeechUser$Login_State) -> a
com.iflytek.cloud.speech.SpeechUser$Login_State -> com.iflytek.cloud.speech.SpeechUser$Login_State:
    com.iflytek.cloud.speech.SpeechUser$Login_State Logined -> Logined
    com.iflytek.cloud.speech.SpeechUser$Login_State Unlogin -> Unlogin
    com.iflytek.cloud.speech.SpeechUser$Login_State[] a -> a
    com.iflytek.cloud.speech.SpeechUser$Login_State[] values() -> values
    com.iflytek.cloud.speech.SpeechUser$Login_State valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.speech.SpeechUser$a -> com.iflytek.cloud.speech.SpeechUser$a:
    com.iflytek.cloud.speech.SpeechUser b -> b
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
com.iflytek.cloud.speech.SynthesizeToUriListener -> com.iflytek.cloud.speech.SynthesizeToUriListener:
    void onBufferProgress(int) -> onBufferProgress
    void onSynthesizeCompleted(java.lang.String,com.iflytek.cloud.speech.SpeechError) -> onSynthesizeCompleted
com.iflytek.cloud.speech.SynthesizerListener -> com.iflytek.cloud.speech.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
com.iflytek.cloud.speech.TextUnderstander -> com.iflytek.cloud.speech.TextUnderstander:
    void understandText(java.lang.String,com.iflytek.cloud.speech.TextUnderstanderListener) -> understandText
    boolean isUnderstanding() -> isUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.speech.TextUnderstander$a -> com.iflytek.cloud.speech.TextUnderstander$a:
    com.iflytek.cloud.speech.TextUnderstanderListener b -> b
    com.iflytek.cloud.speech.TextUnderstander a -> a
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
    void onEvent(int,android.os.Bundle) -> onEvent
com.iflytek.cloud.speech.TextUnderstanderListener -> com.iflytek.cloud.speech.TextUnderstanderListener:
    void onResult(com.iflytek.cloud.speech.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.speech.SpeechError) -> onError
com.iflytek.cloud.speech.UnderstanderResult -> com.iflytek.cloud.speech.UnderstanderResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.speech.a -> com.iflytek.cloud.speech.a:
    com.iflytek.cloud.speech.RecognizerResult a(android.os.Parcel) -> a
    com.iflytek.cloud.speech.RecognizerResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.speech.a.a -> com.iflytek.cloud.speech.a.a:
    boolean e -> e
    void a(java.lang.String) -> a
    void startListening(com.iflytek.cloud.speech.RecognizerListener) -> startListening
    boolean writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    void cancel() -> cancel
    int getDownflowBytes(boolean) -> getDownflowBytes
    int getUpflowBytes(boolean) -> getUpflowBytes
    boolean isListening() -> isListening
    com.iflytek.cloud.b.b.a a(com.iflytek.cloud.speech.a.a) -> a
    com.iflytek.cloud.b.b.a b(com.iflytek.cloud.speech.a.a) -> b
    android.content.Context c(com.iflytek.cloud.speech.a.a) -> c
    boolean d(com.iflytek.cloud.speech.a.a) -> d
com.iflytek.cloud.speech.a.a$a -> com.iflytek.cloud.speech.a.a$a:
    com.iflytek.cloud.speech.RecognizerListener b -> b
    boolean c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.speech.a.a a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.speech.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.speech.SpeechError) -> onError
    void onEvent(int,int,int,java.lang.String) -> onEvent
    void a() -> a
    com.iflytek.cloud.speech.RecognizerListener a(com.iflytek.cloud.speech.a.a$a) -> a
    boolean b(com.iflytek.cloud.speech.a.a$a) -> b
    boolean a(com.iflytek.cloud.speech.a.a$a,boolean) -> a
com.iflytek.cloud.speech.a.b -> com.iflytek.cloud.speech.a.b:
    com.iflytek.cloud.speech.a.a$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.speech.a.c -> com.iflytek.cloud.speech.a.c:
    android.content.Context e -> e
    com.iflytek.cloud.speech.a.c f -> f
    com.iflytek.cloud.speech.a.c$a g -> g
    com.iflytek.cloud.speech.a.c a(android.content.Context) -> a
    com.iflytek.cloud.speech.a.c e() -> e
    void startSpeaking(java.lang.String,com.iflytek.cloud.speech.SynthesizerListener) -> startSpeaking
    void synthesizeToUri(java.lang.String,java.lang.String,com.iflytek.cloud.speech.SynthesizeToUriListener) -> synthesizeToUri
    void pauseSpeaking() -> pauseSpeaking
    void replaySpeaking() -> replaySpeaking
    void resumeSpeaking() -> resumeSpeaking
    boolean isSpeaking() -> isSpeaking
    void stopSpeaking() -> stopSpeaking
    int getDownflowBytes(boolean) -> getDownflowBytes
    int getUpflowBytes(boolean) -> getUpflowBytes
    boolean destroy() -> destroy
com.iflytek.cloud.speech.a.c$a -> com.iflytek.cloud.speech.a.c$a:
    com.iflytek.cloud.record.PcmPlayer f -> f
    com.iflytek.cloud.record.a g -> g
    com.iflytek.cloud.speech.SynthesizerListener h -> h
    com.iflytek.cloud.speech.SynthesizeToUriListener i -> i
    int j -> j
    boolean k -> k
    com.iflytek.cloud.b.d.b l -> l
    com.iflytek.cloud.record.PcmPlayer$a m -> m
    android.os.Handler n -> n
    com.iflytek.cloud.speech.a.c e -> e
    void a(java.lang.String,com.iflytek.cloud.c.a,com.iflytek.cloud.speech.SynthesizerListener) -> a
    com.iflytek.cloud.record.PcmPlayer$PLAY_STATE e() -> e
    void f() -> f
    void g() -> g
    boolean h() -> h
    void a(boolean) -> a
    void i() -> i
    void j() -> j
    boolean destroy() -> destroy
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.c.a,com.iflytek.cloud.speech.SynthesizeToUriListener) -> a
    com.iflytek.cloud.speech.SynthesizerListener a(com.iflytek.cloud.speech.a.c$a) -> a
    android.os.Handler b(com.iflytek.cloud.speech.a.c$a) -> b
    com.iflytek.cloud.record.a c(com.iflytek.cloud.speech.a.c$a) -> c
    boolean d(com.iflytek.cloud.speech.a.c$a) -> d
    int e(com.iflytek.cloud.speech.a.c$a) -> e
    boolean a(com.iflytek.cloud.speech.a.c$a,boolean) -> a
    com.iflytek.cloud.record.PcmPlayer$a f(com.iflytek.cloud.speech.a.c$a) -> f
    com.iflytek.cloud.record.PcmPlayer g(com.iflytek.cloud.speech.a.c$a) -> g
    com.iflytek.cloud.speech.SynthesizeToUriListener h(com.iflytek.cloud.speech.a.c$a) -> h
com.iflytek.cloud.speech.a.d -> com.iflytek.cloud.speech.a.d:
    com.iflytek.cloud.speech.a.c$a a -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.speech.SpeechError) -> a
com.iflytek.cloud.speech.a.e -> com.iflytek.cloud.speech.a.e:
    com.iflytek.cloud.speech.a.c$a a -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void a(com.iflytek.cloud.speech.SpeechError) -> a
    void c() -> c
com.iflytek.cloud.speech.a.f -> com.iflytek.cloud.speech.a.f:
    com.iflytek.cloud.speech.a.c$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.speech.a.g -> com.iflytek.cloud.speech.a.g:
    java.lang.String a -> a
    com.iflytek.cloud.speech.a.c$a b -> b
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.speech.a.h -> com.iflytek.cloud.speech.a.h:
    android.os.Handler a -> a
    com.iflytek.cloud.speech.a.c$a b -> b
    void a(com.iflytek.cloud.speech.SpeechError) -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
com.iflytek.cloud.speech.b -> com.iflytek.cloud.speech.b:
    com.iflytek.cloud.speech.UnderstanderResult a(android.os.Parcel) -> a
    com.iflytek.cloud.speech.UnderstanderResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.util.ContactManager -> com.iflytek.cloud.util.ContactManager:
    com.iflytek.cloud.util.ContactManager getManager() -> getManager
    com.iflytek.cloud.util.ContactManager createManager(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> createManager
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
com.iflytek.cloud.util.ContactManager$ContactListener -> com.iflytek.cloud.util.ContactManager$ContactListener:
    void onContactQueryFinish(java.lang.String,boolean) -> onContactQueryFinish
com.iflytek.cloud.util.UserWords -> com.iflytek.cloud.util.UserWords:
    java.util.Hashtable a -> a
    boolean hasKey(java.lang.String) -> hasKey
    boolean putWord(java.lang.String) -> putWord
    boolean putWord(java.lang.String,java.lang.String) -> putWord
    boolean putWords(java.util.ArrayList) -> putWords
    boolean putWords(java.lang.String,java.util.ArrayList) -> putWords
    boolean a(java.util.ArrayList,java.lang.String) -> a
    boolean a(java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList getWords() -> getWords
    java.util.ArrayList getKeys() -> getKeys
    java.util.ArrayList getWords(java.lang.String) -> getWords
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.iflytek.cloud.util.a.a -> com.iflytek.cloud.util.a.a:
    com.iflytek.cloud.util.a.c.a b -> b
    android.content.Context a -> a
    java.lang.String[] c -> c
    java.lang.String[] d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.List g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.lang.String[] a() -> a
    void a(int) -> a
    void b() -> b
com.iflytek.cloud.util.a.a.a -> com.iflytek.cloud.util.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String a(com.iflytek.cloud.util.a.a.a,java.lang.String) -> a
    java.lang.String b(com.iflytek.cloud.util.a.a.a,java.lang.String) -> b
    java.lang.String c(com.iflytek.cloud.util.a.a.a,java.lang.String) -> c
    java.lang.String d(com.iflytek.cloud.util.a.a.a,java.lang.String) -> d
    java.lang.String e(com.iflytek.cloud.util.a.a.a,java.lang.String) -> e
    java.lang.String f(com.iflytek.cloud.util.a.a.a,java.lang.String) -> f
    java.lang.String g(com.iflytek.cloud.util.a.a.a,java.lang.String) -> g
com.iflytek.cloud.util.a.a.b -> com.iflytek.cloud.util.a.a.b:
    com.iflytek.cloud.util.a.a.a a(android.os.Parcel) -> a
    com.iflytek.cloud.util.a.a.a[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.util.a.b -> com.iflytek.cloud.util.a.b:
    com.iflytek.cloud.util.a.b a -> a
    android.content.Context b -> b
    int c -> c
    com.iflytek.cloud.util.a.c.a d -> d
    com.iflytek.cloud.util.a.a e -> e
    com.iflytek.cloud.util.a.b$b f -> f
    com.iflytek.cloud.util.a.b$a g -> g
    android.os.HandlerThread h -> h
    com.iflytek.cloud.util.ContactManager$ContactListener i -> i
    android.os.Handler j -> j
    long k -> k
    long l -> l
    com.iflytek.cloud.util.a.b a() -> a
    com.iflytek.cloud.util.a.b a(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> a
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
    void b() -> b
    void c() -> c
    void a(com.iflytek.cloud.util.a.b) -> a
    void b(com.iflytek.cloud.util.a.b) -> b
    long c(com.iflytek.cloud.util.a.b) -> c
    long a(com.iflytek.cloud.util.a.b,long) -> a
    long d(com.iflytek.cloud.util.a.b) -> d
    long b(com.iflytek.cloud.util.a.b,long) -> b
com.iflytek.cloud.util.a.b$a -> com.iflytek.cloud.util.a.b$a:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b$b -> com.iflytek.cloud.util.a.b$b:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b.a -> com.iflytek.cloud.util.a.b.a:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.b.b -> com.iflytek.cloud.util.a.b.b:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.c -> com.iflytek.cloud.util.a.c:
    com.iflytek.cloud.util.a.b a -> a
    void run() -> run
com.iflytek.cloud.util.a.c.a -> com.iflytek.cloud.util.a.c.a:
    java.lang.String[] a -> a
    android.content.Context b -> b
    java.lang.String[] c -> c
    java.lang.String[] b() -> b
    java.lang.String c() -> c
    java.util.HashMap d() -> d
    java.util.List e() -> e
    android.net.Uri f() -> f
    android.net.Uri a() -> a
    java.util.HashMap a(int) -> a
    void a(android.content.Context) -> a
com.iflytek.cloud.util.a.d -> com.iflytek.cloud.util.a.d:
    java.lang.String a(java.lang.String) -> a
    int a(java.lang.String,java.lang.String,boolean) -> a
com.iflytek.cloud.util.a.e -> com.iflytek.cloud.util.a.e:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String[],char) -> a
com.iflytek.msc.MSC -> com.iflytek.msc.MSC:
    int DebugLog(boolean) -> DebugLog
    char[] QTTSSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSSessionBegin
    int QTTSTextPut(char[],byte[]) -> QTTSTextPut
    byte[] QTTSAudioGet(char[],com.iflytek.msc.MSCSessionInfo) -> QTTSAudioGet
    int QTTSGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSGetParam
    char[] QTTSAudioInfo(char[]) -> QTTSAudioInfo
    int QTTSSessionEnd(char[],byte[]) -> QTTSSessionEnd
    char[] QISRSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRSessionBegin
    int QISRGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRGetParam
    int QISRSetParam(char[],byte[],byte[]) -> QISRSetParam
    int QISRAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISRAudioWrite
    byte[] QISRGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISRGetResult
    int QISRSessionEnd(char[],byte[]) -> QISRSessionEnd
    int QMSPLogin(byte[],byte[],byte[]) -> QMSPLogin
    byte[] QMSPUploadData(byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPUploadData
    byte[] QMSPDownloadData(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPDownloadData
    byte[] QMSPSearch(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPSearch
    int QMSPLogOut() -> QMSPLogOut
com.iflytek.msc.MSCSessionInfo -> com.iflytek.msc.MSCSessionInfo:
    int errorcode -> errorcode
    int epstatues -> epstatues
    int rsltstatus -> rsltstatus
    int sesstatus -> sesstatus
    byte[] buffer -> buffer
    int buflen -> buflen
com.loc.a -> com.a.a:
    android.content.Context u -> u
    com.amap.api.location.AMapLocationClientOption a -> a
    com.loc.a$c b -> b
    com.loc.g c -> c
    boolean v -> v
    boolean w -> w
    java.util.ArrayList d -> d
    com.loc.f e -> e
    boolean f -> f
    long x -> x
    boolean y -> y
    boolean z -> z
    com.loc.i g -> g
    android.os.Messenger h -> h
    android.os.Messenger i -> i
    com.loc.a$b j -> j
    android.content.Intent k -> k
    int l -> l
    int m -> m
    boolean n -> n
    long o -> o
    long p -> p
    com.amap.api.location.AMapLocation q -> q
    long r -> r
    long s -> s
    boolean t -> t
    android.content.ServiceConnection A -> A
    java.util.ArrayList B -> B
    int C -> C
    com.amap.api.location.AMapLocation D -> D
    void b() -> b
    void a(android.content.Intent) -> a
    void setLocationOption(com.amap.api.location.AMapLocationClientOption) -> setLocationOption
    void setLocationListener(com.amap.api.location.AMapLocationListener) -> setLocationListener
    void c() -> c
    void startLocation() -> startLocation
    com.amap.api.location.AMapLocation getLastKnownLocation() -> getLastKnownLocation
    void stopLocation() -> stopLocation
    void a() -> a
    void onDestroy() -> onDestroy
    void addGeoFenceAlert(java.lang.String,double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent,java.lang.String) -> removeGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    void startAssistantLocation() -> startAssistantLocation
    void stopAssistantLocation() -> stopAssistantLocation
    boolean d() -> d
    boolean e() -> e
    void f() -> f
    void g() -> g
    java.lang.String getVersion() -> getVersion
    boolean isStarted() -> isStarted
    void unRegisterLocationListener(com.amap.api.location.AMapLocationListener) -> unRegisterLocationListener
    com.amap.api.location.AMapLocation a(com.amap.api.location.AMapLocation,com.amap.api.location.AMapLocation) -> a
    com.loc.a$a a(com.amap.api.location.AMapLocation,int) -> a
    boolean a(com.loc.a) -> a
    boolean b(com.loc.a) -> b
    boolean a(com.loc.a,boolean) -> a
    boolean c(com.loc.a) -> c
    boolean b(com.loc.a,boolean) -> b
    void d(com.loc.a) -> d
    boolean e(com.loc.a) -> e
    com.amap.api.location.AMapLocation a(com.loc.a,com.amap.api.location.AMapLocation,com.amap.api.location.AMapLocation) -> a
    int f(com.loc.a) -> f
    com.loc.a$a a(com.loc.a,com.amap.api.location.AMapLocation,int) -> a
    java.util.ArrayList g(com.loc.a) -> g
    com.amap.api.location.AMapLocation h(com.loc.a) -> h
    void i(com.loc.a) -> i
com.loc.a$1 -> com.a.b:
    com.loc.a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.loc.a$2 -> com.a.c:
    com.loc.a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.loc.a$a -> com.a.d:
    double a -> a
    double b -> b
    long c -> c
    float d -> d
    float e -> e
    int f -> f
    java.lang.String g -> g
    com.loc.a h -> h
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.loc.a$b -> com.a.e:
    boolean a -> a
    com.loc.a b -> b
    void run() -> run
com.loc.a$c -> com.a.f:
    com.loc.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loc.aa -> com.a.g:
    com.loc.aa a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    boolean c -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.loc.v,boolean) -> a
    void a(com.loc.v,java.lang.String) -> a
com.loc.ab -> com.a.h:
    android.content.Context d -> d
    java.util.concurrent.ExecutorService e -> e
    com.loc.ab a(android.content.Context,com.loc.v) -> a
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    void b(com.loc.v,java.lang.String) -> b
    void a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(com.loc.v,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.loc.v,boolean) -> a
    void c() -> c
    java.util.concurrent.ExecutorService b() -> b
    android.content.Context a(com.loc.ab) -> a
com.loc.ab$1 -> com.a.i:
    android.content.Context a -> a
    com.loc.v b -> b
    boolean c -> c
    com.loc.ab d -> d
    void run() -> run
com.loc.ab$a -> com.a.j:
    android.content.Context a -> a
    void a() -> a
com.loc.ac -> com.a.k:
    boolean a -> a
    java.lang.String[] b -> b
    int c -> c
    boolean d -> d
    int e -> e
    boolean a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
com.loc.ad -> com.a.l:
    boolean a -> a
    boolean a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.util.List) -> a
com.loc.ae -> com.a.m:
    boolean a -> a
    boolean a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
com.loc.af -> com.a.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
    com.loc.ag a(android.content.Context,int) -> a
    void a(android.content.Context,com.loc.v,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.loc.af$1 -> com.a.o:
    android.content.Context a -> a
    com.loc.v b -> b
    java.lang.String c -> c
    void run() -> run
com.loc.af$2 -> com.a.p:
    android.content.Context a -> a
    int b -> b
    java.lang.Throwable c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.loc.af$3 -> com.a.q:
    android.content.Context a -> a
    void run() -> run
com.loc.ag -> com.a.r:
    com.loc.v a -> a
    int b -> b
    com.loc.bl c -> c
    com.loc.bi d -> d
    void d(android.content.Context) -> d
    void a(com.loc.v,android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void b(android.content.Context) -> b
    java.lang.String a(java.util.List) -> a
    void a(com.loc.v) -> a
    java.util.List e(android.content.Context) -> e
    void a(com.loc.an,java.lang.String,java.lang.String,int,boolean) -> a
    java.lang.String a(java.lang.String) -> a
    com.loc.bl a(com.loc.an) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String d() -> d
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String c(java.lang.Throwable) -> c
    java.lang.String a(android.content.Context,com.loc.v) -> a
    java.lang.String f(android.content.Context) -> f
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.loc.an) -> a
    boolean a(java.lang.String[],java.lang.String) -> a
    void c(android.content.Context) -> c
    boolean b(java.lang.String) -> b
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
    void a(com.loc.an,int) -> a
    int c(java.lang.String) -> c
    void a(java.util.List,com.loc.an,int) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String a(java.util.List,android.content.Context) -> a
    java.lang.String d(java.lang.String) -> d
    void c() -> c
    com.loc.bi b(android.content.Context,java.lang.String) -> b
    java.lang.String b(java.lang.Throwable) -> b
com.loc.ag$a -> com.a.s:
    com.loc.an b -> b
    com.loc.ag a -> a
    void a(java.lang.String) -> a
com.loc.ah -> com.a.t:
    byte[] d -> d
    java.lang.String g() -> g
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
    byte[] d() -> d
com.loc.ai -> com.a.u:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.loc.aj -> com.a.v:
    com.loc.al a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.loc.ai c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    android.database.sqlite.SQLiteDatabase b(boolean) -> b
    java.lang.String a(java.util.Map) -> a
    void a(java.lang.String,com.loc.ak) -> a
    void b(java.lang.String,com.loc.ak) -> b
    void a(java.lang.String,com.loc.ak,boolean) -> a
    void a(com.loc.ak,java.lang.String) -> a
    void a(com.loc.ak) -> a
    void a(com.loc.ak,boolean) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.loc.ak) -> a
    java.util.List b(java.lang.String,com.loc.ak,boolean) -> b
    java.util.List c(java.lang.String,com.loc.ak) -> c
com.loc.ak -> com.a.w:
    android.content.ContentValues a() -> a
    java.lang.Object a(android.database.Cursor) -> a
    void a(java.lang.Object) -> a
    java.lang.String b() -> b
com.loc.al -> com.a.x:
    com.loc.ai a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.loc.am -> com.a.y:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    com.loc.am u -> u
    com.loc.am c() -> c
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String a() -> a
    int b() -> b
com.loc.an -> com.a.z:
    com.loc.aj a -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void c(java.lang.String,int) -> c
    void a(com.loc.ap,int) -> a
    java.util.List a(int,int) -> a
    void b(com.loc.ap,int) -> b
    void a(com.loc.ap,com.loc.ao) -> a
    void b(com.loc.ap,com.loc.ao) -> b
com.loc.ao -> com.a.aa:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.loc.ap e -> e
    int f -> f
    android.content.ContentValues a() -> a
    com.loc.ap b(android.database.Cursor) -> b
    void a(com.loc.ap) -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.loc.ap -> com.a.ab:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
com.loc.aq -> com.a.ac:
    com.loc.aj a -> a
    android.content.Context b -> b
    com.loc.aj a(android.content.Context,boolean) -> a
    void a(com.loc.v) -> a
    java.util.List a() -> a
com.loc.ar -> com.a.ad:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.loc.v g -> g
    android.content.ContentValues a() -> a
    com.loc.v b(android.database.Cursor) -> b
    void a(com.loc.v) -> a
    java.lang.String b() -> b
    java.lang.String[] b(java.lang.String) -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c() -> c
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.loc.as -> com.a.ae:
    com.loc.aj a -> a
    android.content.Context b -> b
    com.loc.aj a(android.content.Context) -> a
    com.loc.au a() -> a
    void a(com.loc.au) -> a
com.loc.at -> com.a.af:
    com.loc.au a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.ContentValues a() -> a
    com.loc.au b(android.database.Cursor) -> b
    void a(com.loc.au) -> a
    java.lang.String b() -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.loc.au -> com.a.ag:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    void c(boolean) -> c
    boolean c() -> c
com.loc.av -> com.a.ah:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.loc.aw -> com.a.ai:
    com.loc.ax a -> a
    com.loc.bp b -> b
    com.loc.v c -> c
    java.lang.String d -> d
    java.io.RandomAccessFile e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    int m -> m
    void a() -> a
    void run() -> run
    boolean a(com.loc.aj,com.loc.bf,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean d() -> d
    boolean a(android.content.Context) -> a
    boolean e() -> e
    void a(java.lang.String) -> a
    void a(byte[],long) -> a
    void a(java.lang.Throwable) -> a
    void c() -> b
    void b() -> c
com.loc.ax -> com.a.aj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.loc.ay -> com.a.ak:
    java.lang.Object a(android.content.Context,com.loc.v,java.lang.String,java.lang.Class,java.lang.Class[],java.lang.Object[]) -> a
com.loc.az -> com.a.al:
    com.loc.ax d -> d
    java.util.Map b() -> b
    java.util.Map a() -> a
    java.lang.String c() -> c
com.loc.b -> com.a.am:
    com.loc.a a -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.loc.ba -> com.a.an:
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,com.loc.aj,java.lang.String) -> a
    void c(android.content.Context,com.loc.aj,java.lang.String) -> c
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void b(android.content.Context,com.loc.aj,java.lang.String) -> b
    void a(com.loc.aj,android.content.Context,com.loc.v) -> a
    void a(android.content.Context,com.loc.aj,com.loc.v,com.loc.bf,java.lang.String) -> a
    boolean a(android.content.Context,com.loc.aj,java.lang.String,com.loc.v) -> a
    boolean a(com.loc.aj,java.lang.String,java.lang.String,com.loc.v) -> a
    java.lang.String a(android.content.Context,com.loc.aj,com.loc.v) -> a
    void a(java.util.List) -> a
com.loc.ba$1 -> com.a.ao:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.loc.ba$a -> com.a.ap:
    void a(com.loc.aj,com.loc.bf,java.lang.String) -> a
    com.loc.bf a(com.loc.aj,java.lang.String) -> a
com.loc.bb -> com.a.aq:
    android.content.Context b -> b
    com.loc.bb c -> c
    java.util.Map d -> d
    dalvik.system.DexFile e -> e
    boolean a -> a
    java.lang.String f -> f
    com.loc.v g -> g
    boolean h -> h
    boolean a() -> a
    void c() -> c
    void a(java.lang.String,java.lang.String) -> a
    com.loc.bb a(android.content.Context,com.loc.v,java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader) -> a
    void a(android.content.Context,com.loc.v,java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,java.lang.String) -> a
    boolean a(com.loc.aj,com.loc.v,java.lang.String) -> a
    boolean a(com.loc.aj,java.lang.String,java.lang.String) -> a
    void a(com.loc.aj,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(java.io.File,java.lang.String,java.lang.String,com.loc.aj,com.loc.v) -> a
    java.lang.Class findClass(java.lang.String) -> findClass
    com.loc.bb b() -> b
    void a(com.loc.bb,android.content.Context,java.lang.String,java.lang.String) -> a
com.loc.bb$1 -> com.a.ar:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.loc.bc -> com.a.as:
    com.loc.bc a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    android.content.Context c -> c
    com.loc.v d -> d
    com.loc.bc a(android.content.Context,com.loc.v) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.loc.bd -> com.a.at:
    com.loc.bd a -> a
    com.loc.bd c() -> c
    java.lang.String a() -> a
    int b() -> b
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
com.loc.be -> com.a.au:
    com.loc.bf a -> a
    com.loc.bf b(android.database.Cursor) -> b
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.loc.bf) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(android.database.Cursor) -> a
com.loc.bf -> com.a.av:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    void a(java.lang.String) -> a
com.loc.bf$a -> com.a.aw:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.loc.bf$a a(java.lang.String) -> a
    com.loc.bf a() -> a
    java.lang.String a(com.loc.bf$a) -> a
    java.lang.String b(com.loc.bf$a) -> b
    java.lang.String c(com.loc.bf$a) -> c
    java.lang.String d(com.loc.bf$a) -> d
    java.lang.String e(com.loc.bf$a) -> e
    java.lang.String f(com.loc.bf$a) -> f
com.loc.bg -> com.a.ax:
com.loc.bh -> com.a.ay:
    int a(java.lang.String,java.lang.String) -> a
com.loc.bi -> com.a.az:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    com.loc.bl n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    void a(com.loc.bl) -> a
    com.loc.bi a(java.io.File,int,int,long) -> a
    void e() -> e
    void d(java.lang.String) -> d
    void f() -> f
    void g() -> g
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.loc.bi$b a(java.lang.String) -> a
    com.loc.bi$a b(java.lang.String) -> b
    com.loc.bi$a a(java.lang.String,long) -> a
    void a(com.loc.bi$a,boolean) -> a
    boolean h() -> h
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void i() -> i
    void b() -> b
    void close() -> close
    void j() -> j
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.loc.bi) -> a
    void b(com.loc.bi) -> b
    boolean c(com.loc.bi) -> c
    void d(com.loc.bi) -> d
    int a(com.loc.bi,int) -> a
    int e(com.loc.bi) -> e
    java.io.File f(com.loc.bi) -> f
    java.io.OutputStream d() -> d
    void a(com.loc.bi,com.loc.bi$a,boolean) -> a
com.loc.bi$a -> com.a.ba:
    com.loc.bi$c b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.loc.bi a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.loc.bi$c a(com.loc.bi$a) -> a
    boolean[] b(com.loc.bi$a) -> b
    boolean a(com.loc.bi$a,boolean) -> a
com.loc.bi$a$a -> com.a.bb:
    com.loc.bi$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.loc.bi$b -> com.a.bc:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.loc.bi a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.loc.bi$c -> com.a.bd:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.loc.bi$a e -> e
    long f -> f
    com.loc.bi a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.loc.bi$c,boolean) -> a
    com.loc.bi$a a(com.loc.bi$c,com.loc.bi$a) -> a
    void a(com.loc.bi$c,java.lang.String[]) -> a
    com.loc.bi$a a(com.loc.bi$c) -> a
    long[] b(com.loc.bi$c) -> b
    java.lang.String c(com.loc.bi$c) -> c
    boolean d(com.loc.bi$c) -> d
    long e(com.loc.bi$c) -> e
    long a(com.loc.bi$c,long) -> a
com.loc.bj -> com.a.be:
    com.loc.bi a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.loc.bk -> com.a.bf:
    void write(int) -> write
com.loc.bl -> com.a.bg:
    void a(java.lang.String) -> a
com.loc.bm -> com.a.bh:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.loc.bm) -> a
com.loc.bm$1 -> com.a.bi:
    com.loc.bm a -> a
    java.lang.String toString() -> toString
com.loc.bn -> com.a.bj:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.loc.bo -> com.a.bk:
    com.loc.bo a -> a
    com.loc.bo a() -> a
    java.net.HttpURLConnection a(com.loc.bs,boolean) -> a
    byte[] a(com.loc.bs) -> a
    byte[] b(com.loc.bs) -> b
    void c(com.loc.bs) -> c
    com.loc.bt b(com.loc.bs,boolean) -> b
com.loc.bp -> com.a.bl:
    com.loc.bq a -> a
    com.loc.bs b -> b
    void a(com.loc.bp$a) -> a
com.loc.bp$a -> com.a.bm:
    void a(byte[],long) -> a
    void b() -> c
    void c() -> b
    void a(java.lang.Throwable) -> a
com.loc.bq -> com.a.bn:
    com.loc.br a -> a
    int b -> b
    int c -> c
    boolean d -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy f -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    void a(com.loc.br) -> a
    void a(long) -> a
    void b(long) -> b
    void a(java.lang.String,java.util.Map,java.util.Map,com.loc.bp$a) -> a
    com.loc.bt a(java.lang.String,java.util.Map,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    com.loc.bt a(java.net.HttpURLConnection) -> a
    void a(java.util.Map,java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.Map) -> a
com.loc.br -> com.a.bo:
    void a() -> a
com.loc.bs -> com.a.bp:
    int a -> a
    int b -> b
    java.net.Proxy c -> c
    java.lang.String e() -> e
    byte[] f() -> f
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
    void a(int) -> a
    void b(int) -> b
    byte[] d() -> d
    void a(java.net.Proxy) -> a
com.loc.bt -> com.a.bq:
    byte[] a -> a
    java.util.Map b -> b
com.loc.bu -> com.a.br:
    com.loc.bq a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.loc.bv -> com.a.bs:
    android.content.Context m -> m
    android.net.ConnectivityManager n -> n
    com.loc.cf o -> o
    com.loc.ce p -> p
    java.util.ArrayList q -> q
    java.util.ArrayList r -> r
    java.util.HashMap s -> s
    com.loc.bv$b t -> t
    android.net.wifi.WifiInfo u -> u
    org.json.JSONObject v -> v
    com.autonavi.aps.amapapi.model.AmapLoc w -> w
    long x -> x
    long y -> y
    long z -> z
    boolean A -> A
    boolean B -> B
    long C -> C
    long D -> D
    int E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    com.loc.cs H -> H
    java.util.Timer I -> I
    java.util.TimerTask J -> J
    int K -> K
    com.loc.db L -> L
    com.loc.dh M -> M
    boolean a -> a
    int[] N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    long Q -> Q
    long R -> R
    java.lang.String S -> S
    com.loc.cd T -> T
    com.loc.co b -> b
    java.lang.StringBuilder c -> c
    com.loc.bw d -> d
    int e -> e
    boolean f -> f
    com.autonavi.aps.amapapi.model.AmapLoc U -> U
    java.lang.String V -> V
    java.util.Timer W -> W
    java.util.TimerTask X -> X
    java.lang.String Y -> Y
    int Z -> Z
    int aa -> aa
    com.autonavi.aps.amapapi.model.AmapLoc g -> g
    boolean ab -> ab
    boolean ac -> ac
    long ad -> ad
    java.lang.Object h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    com.loc.bv$a l -> l
    int ae -> ae
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    com.autonavi.aps.amapapi.model.AmapLoc a(boolean) -> a
    void a() -> a
    int a(boolean,int) -> a
    com.autonavi.aps.amapapi.model.AmapLoc a(com.autonavi.aps.amapapi.model.AmapLoc,java.lang.String[]) -> a
    void b() -> b
    java.lang.String c() -> c
    void i() -> i
    void j() -> j
    boolean a(long) -> a
    java.lang.String b(boolean) -> b
    boolean a(android.net.wifi.WifiInfo) -> a
    java.lang.StringBuilder c(boolean) -> c
    java.lang.StringBuilder a(java.lang.Object) -> a
    void k() -> k
    void d() -> d
    void e() -> e
    boolean a(int) -> a
    java.lang.String f() -> f
    boolean l() -> l
    com.autonavi.aps.amapapi.model.AmapLoc a(java.lang.String,boolean,boolean) -> a
    void a(java.lang.StringBuilder) -> a
    boolean m() -> m
    void n() -> n
    void o() -> o
    boolean p() -> p
    boolean q() -> q
    boolean r() -> r
    void s() -> s
    void t() -> t
    void u() -> u
    void a(android.content.SharedPreferences) -> a
    void v() -> v
    void w() -> w
    void x() -> x
    void b(int) -> b
    void c(int) -> c
    void y() -> y
    void z() -> z
    java.lang.String a(int,int,int) -> a
    boolean A() -> A
    void B() -> B
    java.lang.String C() -> C
    void D() -> D
    boolean E() -> E
    void b(android.content.SharedPreferences) -> b
    void F() -> F
    void g() -> g
    void b(android.content.Context) -> b
    com.autonavi.aps.amapapi.model.AmapLoc G() -> G
    void H() -> H
    com.autonavi.aps.amapapi.model.AmapLoc a(java.lang.String,java.lang.String) -> a
    void I() -> I
    void J() -> J
    com.autonavi.aps.amapapi.model.AmapLoc a(java.lang.String,java.lang.String,double[],java.lang.String,int) -> a
    void K() -> K
    void L() -> L
    double[] M() -> M
    void c(android.content.SharedPreferences) -> c
    void h() -> h
    void N() -> N
    com.loc.cf a(com.loc.bv) -> a
    java.util.ArrayList b(com.loc.bv) -> b
    long a(com.loc.bv,long) -> a
    java.util.ArrayList a(com.loc.bv,java.util.ArrayList) -> a
    void c(com.loc.bv) -> c
    com.loc.db d(com.loc.bv) -> d
    void e(com.loc.bv) -> e
    boolean f(com.loc.bv) -> f
    int a(com.loc.bv,boolean,int) -> a
    long g(com.loc.bv) -> g
    void a(com.loc.bv,int) -> a
    void h(com.loc.bv) -> h
    void i(com.loc.bv) -> i
    org.json.JSONObject j(com.loc.bv) -> j
    java.lang.String k(com.loc.bv) -> k
    java.lang.String a(com.loc.bv,java.lang.String) -> a
    android.content.Context l(com.loc.bv) -> l
    void m(com.loc.bv) -> m
com.loc.bv$1 -> com.a.bt:
    int a -> a
    com.loc.bv b -> b
    void run() -> run
com.loc.bv$2 -> com.a.bu:
    com.loc.bv a -> a
    void run() -> run
com.loc.bv$a -> com.a.bv:
    com.loc.bv a -> a
    void a(int) -> a
com.loc.bv$b -> com.a.bw:
    com.loc.bv a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.loc.bw -> com.a.bx:
    java.lang.String b -> b
    android.content.Context c -> c
    boolean d -> d
    com.loc.k e -> e
    android.content.ServiceConnection f -> f
    android.content.ServiceConnection g -> g
    android.content.Intent h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean l -> l
    boolean m -> m
    com.loc.bw$a a -> a
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    void a() -> a
    void a(com.loc.bw$a) -> a
    boolean b() -> b
    void c() -> c
    com.autonavi.aps.amapapi.model.AmapLoc d() -> d
    com.autonavi.aps.amapapi.model.AmapLoc a(android.os.Bundle) -> a
    com.loc.k a(com.loc.bw,com.loc.k) -> a
com.loc.bw$1 -> com.a.by:
    com.loc.bw$a a -> a
    com.loc.bw b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.loc.bw$2 -> com.a.bz:
    com.loc.bw a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.loc.bw$a -> com.a.ca:
    void a(int) -> a
com.loc.bx -> com.a.cb:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    short[][] c -> c
    com.loc.bx$b d -> d
    void a(int,java.lang.String) -> a
    java.util.ArrayList a(double,double) -> a
    short[][] a(com.loc.bx) -> a
    java.util.ArrayList b(com.loc.bx) -> b
com.loc.bx$a -> com.a.cc:
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    double d -> d
    java.lang.String e -> e
    com.loc.bx a -> a
    int a(com.loc.bx$a) -> a
    void a() -> a
    void a(com.loc.bx$c) -> a
    com.loc.bx$c b() -> b
    int compareTo(java.lang.Object) -> compareTo
    double a(com.loc.bx$a,double) -> a
    double b(com.loc.bx$a) -> b
com.loc.bx$b -> com.a.cd:
    java.util.ArrayList b -> b
    com.loc.bx a -> a
    void a(int,int) -> a
    void a() -> a
    java.util.ArrayList a(com.loc.bx$b) -> a
com.loc.bx$c -> com.a.ce:
    double a -> a
    double b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    com.loc.bx f -> f
    boolean a(com.loc.bx$c) -> a
    double b(com.loc.bx$c) -> b
    boolean a(com.loc.bx$c,com.loc.bx$c) -> a
    double b(com.loc.bx$c,com.loc.bx$c) -> b
com.loc.by -> com.a.cf:
    boolean a -> a
com.loc.bz -> com.a.cg:
    com.loc.bz a -> a
    com.autonavi.aps.amapapi.model.AmapLoc b -> b
    long c -> c
    long d -> d
    com.loc.bz a() -> a
    void b() -> b
    com.autonavi.aps.amapapi.model.AmapLoc a(com.autonavi.aps.amapapi.model.AmapLoc) -> a
    com.autonavi.aps.amapapi.model.AmapLoc c(com.autonavi.aps.amapapi.model.AmapLoc) -> c
    com.autonavi.aps.amapapi.model.AmapLoc b(com.autonavi.aps.amapapi.model.AmapLoc) -> b
com.loc.c -> com.a.ch:
    int[] a -> a
com.loc.ca -> com.a.ci:
com.loc.ca$a -> com.a.cj:
    java.util.Hashtable a -> a
com.loc.ca$b -> com.a.ck:
    java.util.Hashtable a -> a
com.loc.cb -> com.a.cl:
    char[] a -> a
    int[] b -> b
    java.lang.String a(double,double) -> a
    java.lang.String a(double,double,int) -> a
    java.lang.String[] a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.loc.cc -> com.a.cm:
    java.lang.String c -> c
    java.util.Hashtable d -> d
    com.loc.cm e -> e
    java.util.Hashtable f -> f
    android.telephony.TelephonyManager g -> g
    int[] a -> a
    int b -> b
    java.lang.String[] a(double,double,java.lang.String) -> a
    com.autonavi.aps.amapapi.model.AmapLoc a(double[],java.lang.String,java.lang.String,java.lang.String,int,android.content.Context,int[]) -> a
    int a(java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    void a(int,java.lang.String,java.lang.String,java.util.Hashtable) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    com.autonavi.aps.amapapi.model.AmapLoc a(java.util.Hashtable,java.util.Hashtable,int,int) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,int,int,boolean,boolean) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,int,boolean) -> a
    void a() -> a
    double[] a(int,com.loc.ch,java.lang.String,int) -> a
    int a(int,com.loc.ch,java.lang.String,int[],int,int,java.lang.String,int) -> a
    int a(com.loc.ch,java.lang.String,int[],int,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.ArrayList a(java.lang.String,boolean) -> a
    boolean b() -> b
    boolean a(java.lang.String,java.lang.String,int,int) -> a
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    boolean a(java.lang.String,java.lang.String,int,java.lang.String[]) -> a
    boolean a(android.content.Context,java.lang.String,int,boolean,boolean) -> a
    java.lang.StringBuilder c() -> c
    int a(int) -> a
com.loc.cd -> com.a.cn:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String toString() -> toString
    boolean a(com.loc.cd) -> a
com.loc.ce -> com.a.co:
    android.content.Context c -> c
    int d -> d
    java.util.ArrayList e -> e
    int f -> f
    android.telephony.TelephonyManager g -> g
    java.lang.Object h -> h
    long i -> i
    org.json.JSONObject j -> j
    android.telephony.PhoneStateListener k -> k
    android.telephony.CellLocation l -> l
    android.os.Looper a -> a
    com.loc.ce$a b -> b
    boolean m -> m
    java.lang.Object n -> n
    java.util.ArrayList a() -> a
    com.loc.cd b() -> b
    int c() -> c
    android.telephony.CellLocation d() -> d
    android.telephony.TelephonyManager e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    boolean a(boolean) -> a
    boolean a(android.telephony.CellLocation) -> a
    boolean a(android.telephony.NeighboringCellInfo) -> a
    void a(org.json.JSONObject) -> a
    void l() -> l
    void b(android.telephony.CellLocation) -> b
    void c(android.telephony.CellLocation) -> c
    android.telephony.CellLocation m() -> m
    android.telephony.CellLocation n() -> n
    java.lang.Class o() -> o
    android.telephony.CellLocation a(java.util.List) -> a
    com.loc.cd d(android.telephony.CellLocation) -> d
    com.loc.cd b(android.telephony.NeighboringCellInfo) -> b
    void p() -> p
    void q() -> q
    void a(int) -> a
    void r() -> r
    int k() -> k
    java.lang.Object a(com.loc.ce) -> a
    boolean b(com.loc.ce) -> b
    void c(com.loc.ce) -> c
    android.telephony.CellLocation a(com.loc.ce,android.telephony.CellLocation) -> a
    int d(com.loc.ce) -> d
    void a(com.loc.ce,int) -> a
    void e(com.loc.ce) -> e
    void f(com.loc.ce) -> f
com.loc.ce$1 -> com.a.cp:
    com.loc.ce a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.loc.ce$a -> com.a.cq:
    com.loc.ce a -> a
    void run() -> run
com.loc.cf -> com.a.cr:
    android.net.wifi.WifiManager a -> a
    org.json.JSONObject b -> b
    android.content.Context c -> c
    void a(org.json.JSONObject) -> a
    java.util.List a() -> a
    android.net.wifi.WifiInfo b() -> b
    int c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean a(android.net.ConnectivityManager) -> a
    boolean f() -> f
    void a(boolean) -> a
    boolean a(android.net.wifi.WifiInfo) -> a
com.loc.cg -> com.a.cs:
    char[] a -> a
    byte[] b -> b
    javax.crypto.spec.IvParameterSpec c -> c
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    byte[] c(byte[],java.lang.String) -> c
    byte[] d(byte[],java.lang.String) -> d
    javax.crypto.spec.SecretKeySpec b(java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] a() -> a
    java.lang.String a(byte[]) -> a
com.loc.ch -> com.a.ct:
    java.io.ByteArrayInputStream a -> a
    long b -> b
    boolean c -> c
    java.io.RandomAccessFile d -> d
    boolean e -> e
    byte[] f -> f
    com.loc.ch$a g -> g
    java.lang.String h -> h
    boolean a() -> a
    void b() -> b
    void finalize() -> finalize
    void a(long) -> a
    long c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    long g() -> g
    void h() -> h
com.loc.ch$a -> com.a.cu:
    boolean a -> a
    boolean b -> b
com.loc.ci -> com.a.cv:
    com.loc.ci a -> a
    java.util.Hashtable b -> b
    long c -> c
    boolean d -> d
    com.loc.ci a() -> a
    void a(java.lang.String,java.lang.StringBuilder,com.autonavi.aps.amapapi.model.AmapLoc,android.content.Context,boolean) -> a
    com.autonavi.aps.amapapi.model.AmapLoc a(java.lang.String,java.lang.StringBuilder) -> a
    boolean b() -> b
    boolean a(java.lang.String,com.autonavi.aps.amapapi.model.AmapLoc) -> a
    void c() -> c
    com.loc.ci$a a(java.lang.StringBuilder,java.lang.String) -> a
    boolean c(java.lang.String,java.lang.StringBuilder) -> c
    void a(java.lang.String,java.util.Hashtable) -> a
    double[] a(double[],double[]) -> a
    boolean b(java.lang.String,java.lang.StringBuilder) -> b
    void a(android.content.Context) -> a
com.loc.ci$a -> com.a.cw:
    com.autonavi.aps.amapapi.model.AmapLoc b -> b
    java.lang.String c -> c
    com.loc.ci a -> a
    com.autonavi.aps.amapapi.model.AmapLoc a() -> a
    void a(com.autonavi.aps.amapapi.model.AmapLoc) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.loc.cj -> com.a.cx:
    com.loc.cj a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.loc.cj a() -> a
    void a(java.lang.String,com.autonavi.aps.amapapi.model.AmapLoc,java.lang.StringBuilder,android.content.Context) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    void b(android.content.Context) -> b
    java.util.ArrayList b(android.content.Context,int) -> b
com.loc.ck -> com.a.cy:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    long d -> d
    java.lang.String a() -> a
    int b() -> b
    java.lang.String toString() -> toString
com.loc.cl -> com.a.cz:
    com.loc.cl a -> a
    java.util.Hashtable b -> b
    boolean c -> c
    com.loc.cl a() -> a
    void a(android.content.Context,java.lang.String,java.lang.String,int,long,boolean) -> a
    void a(android.content.Context,java.lang.String,com.autonavi.aps.amapapi.model.AmapLoc) -> a
    java.util.ArrayList b() -> b
    void d() -> d
    void a(android.content.Context) -> a
    void c() -> c
com.loc.cl$1 -> com.a.da:
    com.loc.cl a -> a
    int a(com.loc.ck,com.loc.ck) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.loc.cm -> com.a.db:
    int a(java.lang.String,com.loc.ch) -> a
    void a(boolean,java.lang.String,com.loc.ch,com.loc.ch) -> a
    int a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.loc.cn -> com.a.dc:
    java.util.LinkedHashMap a -> a
    int b -> b
    int c -> c
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object b(java.lang.Object) -> b
    java.lang.Object c(java.lang.Object) -> c
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void a(int) -> a
    int c(java.lang.Object,java.lang.Object) -> c
    int a(java.lang.Object,java.lang.Object) -> a
    void a() -> a
com.loc.co -> com.a.dd:
    com.loc.co e -> e
    com.loc.v a -> a
    java.lang.String b -> b
    com.loc.bo c -> c
    com.loc.bp d -> d
    long f -> f
    int g -> g
    int h -> h
    com.loc.co a(android.content.Context) -> a
    byte[] a(android.content.Context,org.json.JSONObject,com.loc.cs,java.lang.String) -> a
    java.lang.String a(byte[],android.content.Context,java.lang.String,boolean) -> a
    int a(android.net.NetworkInfo) -> a
    java.net.HttpURLConnection a(android.content.Context,java.lang.String,java.util.HashMap,byte[]) -> a
com.loc.cp -> com.a.de:
    java.util.Map d -> d
    java.util.Map e -> e
    java.lang.String f -> f
    byte[] g -> g
    void a(java.util.Map) -> a
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    byte[] d() -> d
com.loc.cq -> com.a.df:
    com.autonavi.aps.amapapi.model.AmapLoc a(java.lang.String) -> a
    com.autonavi.aps.amapapi.model.AmapLoc b(java.lang.String) -> b
com.loc.cq$a -> com.a.dg:
    com.autonavi.aps.amapapi.model.AmapLoc a -> a
    java.lang.String c -> c
    com.loc.cq b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.loc.cr -> com.a.dh:
com.loc.cs -> com.a.di:
    java.lang.String a -> a
    short b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    byte[] G -> G
    byte[] a() -> a
    byte[] b(java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int) -> a
    void b() -> b
    void a(byte[],int) -> a
com.loc.ct -> com.a.dj:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    int l -> l
    boolean m -> m
    int n -> n
    boolean o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    int r -> r
    long s -> s
    java.lang.String t -> t
    int u -> u
    long v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    boolean z -> z
    boolean a(android.content.Context) -> a
    boolean a() -> a
    long b() -> b
    long c() -> c
    boolean d() -> d
    int e() -> e
    boolean f() -> f
    int g() -> g
    boolean h() -> h
    boolean i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    boolean a(com.loc.p$a) -> a
    com.loc.ct$a b(org.json.JSONObject,java.lang.String) -> b
    boolean p() -> p
    void b(android.content.Context) -> b
    boolean q() -> q
    void c(android.content.Context) -> c
    boolean r() -> r
    void a(java.lang.String) -> a
com.loc.ct$a -> com.a.dk:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.loc.cu -> com.a.dl:
    java.lang.Object a(java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
    java.lang.Object a(java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
com.loc.cv -> com.a.dm:
    java.lang.reflect.Method a -> a
    void a(android.content.SharedPreferences$Editor) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    long b(android.content.Context,java.lang.String,java.lang.String,long) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,java.lang.String,int) -> b
com.loc.cw -> com.a.dn:
    int a -> a
    java.lang.String[] b -> b
    java.util.Hashtable c -> c
    java.text.DecimalFormat d -> d
    java.text.SimpleDateFormat e -> e
    boolean a(java.lang.String) -> a
    boolean a(double) -> a
    boolean b(double) -> b
    boolean a(com.amap.api.location.AMapLocation) -> a
    boolean a(com.autonavi.aps.amapapi.model.AmapLoc) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    long b() -> b
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    float a(com.autonavi.aps.amapapi.model.AmapLoc,com.autonavi.aps.amapapi.model.AmapLoc) -> a
    java.lang.Object a(android.content.Context,java.lang.String) -> a
    int c() -> c
    byte[] a(byte[]) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(android.content.Context) -> b
    android.net.NetworkInfo c(android.content.Context) -> c
    boolean h() -> h
    int a(int,int) -> a
    boolean a(org.json.JSONObject,java.lang.String) -> a
    boolean a(android.net.wifi.ScanResult) -> a
    void i() -> i
    java.lang.String j() -> j
    int a(android.net.NetworkInfo) -> a
    java.lang.String b(android.telephony.TelephonyManager) -> b
    boolean d(android.content.Context) -> d
    long b(byte[]) -> b
    int c(byte[]) -> c
    int d(byte[]) -> d
    byte[] a(java.io.File) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(java.lang.String,int) -> a
    java.lang.String d(java.lang.String) -> d
    byte[] a(long) -> a
    byte[] e(java.lang.String) -> e
    byte[] b(int) -> b
    java.lang.String a(long,java.lang.String) -> a
    boolean a(long,long) -> a
    byte[] f(java.lang.String) -> f
    byte[] c(int) -> c
    boolean k() -> k
    java.lang.String a(java.lang.Object,java.lang.String) -> a
com.loc.cx -> com.a.do:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.loc.cy -> com.a.dp:
    short a -> a
    int b -> b
    com.loc.cz c -> c
    com.loc.eg d -> d
    com.loc.dj e -> e
    com.loc.df f -> f
    com.loc.dd g -> g
com.loc.cz -> com.a.dq:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.loc.d -> com.a.dr:
    android.content.Context a -> a
    boolean b -> b
    android.os.Messenger c -> c
    boolean v -> v
    boolean w -> w
    boolean x -> x
    java.lang.String d -> d
    com.loc.d$b e -> e
    com.loc.d$a f -> f
    boolean g -> g
    java.util.Vector h -> h
    java.util.Vector i -> i
    int y -> y
    boolean z -> z
    boolean A -> A
    com.loc.bv B -> B
    boolean j -> j
    boolean k -> k
    java.lang.Object l -> l
    com.autonavi.aps.amapapi.model.AmapLoc m -> m
    long n -> n
    boolean C -> C
    java.lang.String D -> D
    org.json.JSONObject o -> o
    com.autonavi.aps.amapapi.model.AmapLoc p -> p
    java.net.ServerSocket q -> q
    boolean r -> r
    java.net.Socket s -> s
    boolean t -> t
    com.loc.d$c u -> u
    android.os.Handler getHandler() -> getHandler
    void onCreate() -> onCreate
    com.autonavi.aps.amapapi.model.AmapLoc a(int,java.lang.String) -> a
    void a(android.os.Messenger) -> a
    boolean c() -> c
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    com.autonavi.aps.amapapi.model.AmapLoc a(boolean) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void a(org.json.JSONObject) -> a
    void a() -> a
    void b() -> b
    void a(java.net.Socket) -> a
    void h() -> h
    void onDestroy() -> onDestroy
    void i() -> i
    boolean a(com.loc.d,boolean) -> a
    void a(com.loc.d,org.json.JSONObject) -> a
    int a(com.loc.d) -> a
    int b(com.loc.d) -> b
    void c(com.loc.d) -> c
    void d(com.loc.d) -> d
    java.lang.String a(com.loc.d,java.lang.String) -> a
    boolean b(com.loc.d,boolean) -> b
    boolean e(com.loc.d) -> e
    com.autonavi.aps.amapapi.model.AmapLoc c(com.loc.d,boolean) -> c
    com.loc.bv f(com.loc.d) -> f
    com.autonavi.aps.amapapi.model.AmapLoc a(com.loc.d,int,java.lang.String) -> a
    java.lang.String g(com.loc.d) -> g
    boolean h(com.loc.d) -> h
    boolean i(com.loc.d) -> i
    void j(com.loc.d) -> j
    void k(com.loc.d) -> k
    void a(com.loc.d,android.os.Messenger) -> a
    void l(com.loc.d) -> l
    boolean m(com.loc.d) -> m
    void n(com.loc.d) -> n
    void a(com.loc.d,java.net.Socket) -> a
com.loc.d$a -> com.a.ds:
    com.loc.d a -> a
    void run() -> run
com.loc.d$b -> com.a.dt:
    com.loc.d a -> a
    boolean c -> c
    boolean d -> d
    com.loc.d b -> b
    void handleMessage(android.os.Message) -> handleMessage
com.loc.d$c -> com.a.du:
    com.loc.d a -> a
    void run() -> run
com.loc.da -> com.a.dv:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.loc.db -> com.a.dw:
    boolean a -> a
    boolean b -> b
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    java.lang.Object j -> j
    com.loc.db k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    android.content.Context p -> p
    android.location.LocationManager q -> q
    com.loc.dl r -> r
    com.loc.dz s -> s
    com.loc.ef t -> t
    com.loc.di u -> u
    com.loc.ee v -> v
    com.loc.dy w -> w
    com.loc.dc x -> x
    java.lang.Thread y -> y
    android.os.Looper z -> z
    com.loc.dw A -> A
    android.os.Handler B -> B
    java.lang.Object c -> c
    com.loc.dx C -> C
    android.location.LocationListener D -> D
    android.content.BroadcastReceiver E -> E
    android.content.BroadcastReceiver F -> F
    android.location.GpsStatus G -> G
    int H -> H
    int I -> I
    java.util.HashMap J -> J
    int K -> K
    int L -> L
    float M -> M
    float N -> N
    float O -> O
    float P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    com.loc.db a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    com.loc.dh e() -> e
    void a(com.loc.dh,java.lang.String) -> a
    boolean f() -> f
    int g() -> g
    void b(int) -> b
    java.lang.String a(java.lang.String) -> a
    void o() -> o
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.loc.db) -> a
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    int l() -> l
    com.loc.dy b(com.loc.db) -> b
    void a(com.loc.db,android.location.Location,int,long) -> a
    android.os.Looper a(com.loc.db,android.os.Looper) -> a
    com.loc.dw a(com.loc.db,com.loc.dw) -> a
    com.loc.dw c(com.loc.db) -> c
    android.location.LocationManager d(com.loc.db) -> d
    android.os.Handler a(com.loc.db,android.os.Handler) -> a
    int m() -> m
    android.location.LocationListener e(com.loc.db) -> e
    android.location.GpsStatus f(com.loc.db) -> f
    android.location.GpsStatus a(com.loc.db,android.location.GpsStatus) -> a
    int a(com.loc.db,int) -> a
    int b(com.loc.db,int) -> b
    java.util.HashMap a(com.loc.db,java.util.HashMap) -> a
    int n() -> n
    int g(com.loc.db) -> g
    int h(com.loc.db) -> h
    int c(com.loc.db,int) -> c
    com.loc.dl i(com.loc.db) -> i
    int d(com.loc.db,int) -> d
    java.util.HashMap j(com.loc.db) -> j
    int b(com.loc.db,java.util.HashMap) -> b
    android.os.Handler k(com.loc.db) -> k
    int e(com.loc.db,int) -> e
    int l(com.loc.db) -> l
    int a(com.loc.db,com.loc.eh,int) -> a
    int m(com.loc.db) -> m
    java.lang.String a(com.loc.db,java.lang.String) -> a
com.loc.dc -> com.a.dx:
    com.loc.da a(android.location.Location,com.loc.dl,int,byte,long,boolean) -> a
com.loc.dd -> com.a.dy:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.loc.de -> com.a.dz:
    byte a -> a
    byte[] b -> b
    double c -> c
    int d -> d
    int e -> e
    double f -> f
    byte g -> g
    byte h -> h
    byte[] i -> i
    byte j -> j
com.loc.df -> com.a.ea:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.loc.dg -> com.a.eb:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.loc.dh -> com.a.ec:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.loc.di -> com.a.ed:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    byte[] a(byte[],int) -> a
    void a(int) -> a
    void b(int) -> b
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File e() -> e
    java.util.ArrayList a(java.io.File[]) -> a
    int f() -> f
    java.io.File g() -> g
    java.io.File c(long) -> c
    byte[] a(byte[]) -> a
    com.loc.da a(android.location.Location,com.loc.dl,int,byte,long,boolean) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    long d() -> d
    java.io.File a(android.content.Context) -> a
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
com.loc.dj -> com.a.ee:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.loc.dk -> com.a.ef:
    short a -> a
    int b -> b
    byte c -> c
com.loc.dl -> com.a.eg:
    android.content.Context f -> f
    android.telephony.TelephonyManager g -> g
    android.location.LocationManager h -> h
    android.net.wifi.WifiManager i -> i
    android.hardware.SensorManager j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    boolean n -> n
    int o -> o
    boolean p -> p
    long q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    int u -> u
    int v -> v
    java.lang.String w -> w
    long x -> x
    long y -> y
    com.loc.dl z -> z
    com.loc.dn A -> A
    com.loc.do B -> B
    android.telephony.CellLocation C -> C
    com.loc.dp D -> D
    java.util.List E -> E
    java.util.Timer F -> F
    java.lang.Thread G -> G
    android.os.Looper H -> H
    int I -> I
    java.lang.String a -> a
    boolean b -> b
    boolean c -> c
    java.lang.Object d -> d
    boolean e -> e
    java.lang.String[] J -> J
    com.loc.dl a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List a(boolean) -> a
    byte k() -> k
    java.util.List l() -> l
    java.util.List m() -> m
    long n() -> n
    java.lang.String o() -> o
    int p() -> p
    int q() -> q
    int r() -> r
    java.lang.String s() -> s
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List t() -> t
    void a(int) -> a
    void u() -> u
    void v() -> v
    byte w() -> w
    java.lang.String b(int) -> b
    double c(int) -> c
    int d(int) -> d
    int e(int) -> e
    double f(int) -> f
    byte g(int) -> g
    java.lang.String h(int) -> h
    byte i(int) -> i
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    void z() -> z
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean a(android.telephony.CellLocation) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    android.telephony.CellLocation A() -> A
    android.telephony.CellLocation b(java.util.List) -> b
    void a(android.net.wifi.WifiManager) -> a
    boolean c(android.content.Context) -> c
    android.content.Context x() -> x
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.loc.dl,android.os.Looper) -> a
    java.util.Timer a(com.loc.dl,java.util.Timer) -> a
    com.loc.dn a(com.loc.dl,com.loc.dn) -> a
    com.loc.dn a(com.loc.dl) -> a
    void a(com.loc.dl,android.telephony.PhoneStateListener) -> a
    com.loc.do a(com.loc.dl,com.loc.do) -> a
    com.loc.do b(com.loc.dl) -> b
    void a(com.loc.dl,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.loc.dl) -> c
    java.util.Timer d(com.loc.dl) -> d
    java.util.List e(com.loc.dl) -> e
    long a(com.loc.dl,long) -> a
    void a(com.loc.dl,android.net.wifi.WifiManager) -> a
    int y() -> y
    boolean a(com.loc.dl,boolean) -> a
    android.telephony.TelephonyManager f(com.loc.dl) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.loc.dl,int) -> a
    int b(com.loc.dl,int) -> b
    long b(com.loc.dl,long) -> b
    android.telephony.CellLocation a(com.loc.dl,android.telephony.CellLocation) -> a
    boolean g(com.loc.dl) -> g
    int c(com.loc.dl,int) -> c
    int h(com.loc.dl) -> h
    long c(com.loc.dl,long) -> c
    java.lang.String a(com.loc.dl,java.lang.String) -> a
com.loc.dm -> com.a.eh:
    com.loc.dl a -> a
    void run() -> run
com.loc.dn -> com.a.ei:
    com.loc.dl a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.loc.do -> com.a.ej:
    com.loc.dl a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.loc.dp -> com.a.ek:
    com.loc.dl a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.loc.dq -> com.a.el:
    com.loc.dp a -> a
    void run() -> run
com.loc.dr -> com.a.em:
    com.loc.db a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.loc.ds -> com.a.en:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.loc.dt -> com.a.eo:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.loc.du -> com.a.ep:
    com.loc.db a -> a
    void run() -> run
com.loc.dv -> com.a.eq:
    com.loc.du a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loc.dw -> com.a.er:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.loc.db h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.loc.dx -> com.a.es:
    com.loc.db a -> a
    void a() -> a
com.loc.dy -> com.a.et:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.loc.dx k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.loc.dx) -> a
    com.loc.dy a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.loc.dz -> com.a.eu:
    int c -> c
    int d -> d
    com.loc.dl e -> e
    float f -> f
    com.loc.ed a -> a
    com.loc.ea b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.loc.e -> com.a.ev:
    java.lang.String s -> s
    java.lang.String a -> a
    java.lang.String[] t -> t
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    int m -> m
    boolean n -> n
    int o -> o
    java.lang.String p -> p
    java.util.HashMap q -> q
    android.util.SparseArray r -> r
    java.lang.String a() -> a
    java.lang.String[] b() -> b
    boolean a(double,double) -> a
    com.amap.api.location.AMapLocation a(com.autonavi.aps.amapapi.model.AmapLoc) -> a
    com.amap.api.location.AMapLocation a(org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void c() -> c
    void c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    com.loc.v a(java.lang.String) -> a
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
com.loc.ea -> com.a.ew:
    com.loc.eb a -> a
    android.location.Location b -> b
com.loc.eb -> com.a.ex:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.loc.ec -> com.a.ey:
    java.lang.String a -> a
com.loc.ed -> com.a.ez:
    java.util.List a -> a
    android.location.Location b -> b
com.loc.ee -> com.a.fa:
    java.io.RandomAccessFile a -> a
    com.loc.di b -> b
    java.io.File c -> c
    com.loc.dh a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.loc.dh) -> a
com.loc.ef -> com.a.fb:
    java.io.RandomAccessFile a -> a
    com.loc.di b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.loc.eg -> com.a.fc:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.loc.eh -> com.a.fd:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    double e -> e
    double f -> f
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.loc.f -> com.a.fe:
    android.content.Context a -> a
    java.util.Hashtable b -> b
    void a(android.app.PendingIntent,com.amap.api.fence.Fence,int) -> a
    boolean a(com.amap.api.fence.Fence,android.app.PendingIntent) -> a
    boolean a(android.app.PendingIntent) -> a
    boolean a(android.app.PendingIntent,java.lang.String) -> a
    boolean a(android.app.PendingIntent,java.util.List) -> a
    boolean a(java.util.List) -> a
    void a(com.amap.api.location.AMapLocation) -> a
    boolean b() -> b
    boolean a(com.amap.api.fence.Fence) -> a
    void a() -> a
com.loc.g -> com.a.ff:
    android.os.Handler a -> a
    android.content.Context b -> b
    android.location.LocationManager c -> c
    com.amap.api.location.AMapLocationClientOption d -> d
    long e -> e
    long f -> f
    android.location.LocationListener g -> g
    void a(com.amap.api.location.AMapLocationClientOption) -> a
    void a() -> a
    void a(long,float) -> a
com.loc.h -> com.a.fg:
    com.loc.g a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.loc.i -> com.a.fh:
    android.content.Context a -> a
    java.lang.String d -> d
    com.loc.i e -> e
    android.content.SharedPreferences b -> b
    android.content.SharedPreferences$Editor c -> c
    com.loc.i a(android.content.Context) -> a
    void a(com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation a() -> a
com.loc.j -> com.a.fi:
    boolean b -> b
    double a -> a
    com.amap.api.location.DPoint a(android.content.Context,com.amap.api.location.DPoint) -> a
    com.amap.api.location.DPoint a(android.content.Context,double,double) -> a
    com.amap.api.location.DPoint a(com.amap.api.location.DPoint,boolean) -> a
    com.amap.api.location.DPoint b(android.content.Context,com.amap.api.location.DPoint) -> b
    double a(double,double) -> a
    double b(double,double) -> b
    com.amap.api.location.DPoint c(double,double) -> c
    com.amap.api.location.DPoint a(com.amap.api.location.DPoint) -> a
    double a(double) -> a
    double b(double) -> b
    com.amap.api.location.DPoint d(double,double) -> d
    double a(double,int) -> a
    com.amap.api.location.DPoint a(com.amap.api.location.DPoint,int) -> a
    com.amap.api.location.DPoint a(double,double,double,double) -> a
com.loc.k -> com.a.fj:
    int a(android.os.Bundle) -> a
com.loc.k$a -> com.a.fk:
    com.loc.k a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.loc.k$a$a -> com.a.fl:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    int a(android.os.Bundle) -> a
com.loc.l -> com.a.fm:
    java.lang.String a -> a
    int b -> b
    int a() -> a
    void a(java.lang.String) -> a
com.loc.m -> com.a.fn:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void c(java.lang.String) -> c
    java.lang.String g(android.content.Context) -> g
    java.lang.String f(android.content.Context) -> f
com.loc.n -> com.a.fo:
    int a -> a
    java.lang.String b -> b
    com.loc.v c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean a(android.content.Context,com.loc.v,boolean) -> a
    boolean a(android.content.Context,com.loc.v) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean a(byte[]) -> a
    java.util.Map a(android.content.Context) -> a
com.loc.o -> com.a.fp:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
    java.lang.String a(android.content.Context,com.loc.v,java.util.Map,boolean) -> a
    java.lang.String b(android.content.Context,byte[]) -> b
    java.lang.String c(android.content.Context,byte[]) -> c
    java.lang.String a(android.content.Context,com.loc.v) -> a
    void a(java.io.ByteArrayOutputStream,java.lang.String) -> a
    void a(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.loc.p -> com.a.fq:
    com.loc.p$a a(byte[]) -> a
    com.loc.p$a a(android.content.Context,com.loc.v,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void a(org.json.JSONObject,com.loc.p$a$b) -> a
    void a(org.json.JSONObject,com.loc.p$a$c) -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
com.loc.p$a -> com.a.fr:
    org.json.JSONObject a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    org.json.JSONObject d -> d
    org.json.JSONObject e -> e
    org.json.JSONObject f -> f
    com.loc.p$a$a g -> g
    com.loc.p$a$c h -> h
    com.loc.p$a$b i -> i
com.loc.p$a$a -> com.a.fs:
    boolean a -> a
    boolean b -> b
com.loc.p$a$b -> com.a.ft:
    java.lang.String a -> a
    java.lang.String b -> b
com.loc.p$a$c -> com.a.fu:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.loc.p$b -> com.a.fv:
    android.content.Context d -> d
    com.loc.v e -> e
    java.lang.String f -> f
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
com.loc.q -> com.a.fw:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    android.net.NetworkInfo n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.util.List a(java.util.List) -> a
    boolean a(boolean) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String) -> a
com.loc.q$a -> com.a.fx:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.loc.r -> com.a.fy:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] a(byte[],java.security.Key) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String b(byte[]) -> b
com.loc.s -> com.a.fz:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String c(java.lang.String) -> c
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
com.loc.t -> com.a.ga:
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy b(android.content.Context) -> b
    boolean a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    int b() -> b
com.loc.u -> com.a.gb:
    com.loc.bp a -> a
    com.loc.u$a b -> b
    java.io.RandomAccessFile c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    void a() -> a
    void run() -> run
    void a(byte[],long) -> a
    void b() -> c
    void c() -> b
    void a(java.lang.Throwable) -> a
    void d() -> d
com.loc.u$a -> com.a.gc:
    java.lang.String d -> d
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String c() -> c
com.loc.v -> com.a.gd:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(boolean) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    java.lang.String[] f() -> f
com.loc.v$a -> com.a.ge:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    com.loc.v$a a(boolean) -> a
    com.loc.v$a a(java.lang.String) -> a
    com.loc.v$a a(java.lang.String[]) -> a
    com.loc.v a() -> a
    java.lang.String a(com.loc.v$a) -> a
    java.lang.String b(com.loc.v$a) -> b
    java.lang.String c(com.loc.v$a) -> c
    boolean d(com.loc.v$a) -> d
    java.lang.String e(com.loc.v$a) -> e
    java.lang.String[] f(com.loc.v$a) -> f
com.loc.w -> com.a.gf:
    boolean a(org.json.JSONObject,java.lang.String) -> a
    byte[] a() -> a
    java.lang.String a(java.util.Map) -> a
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.util.Map) -> b
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    byte[] f(byte[]) -> f
    java.lang.String a(long) -> a
com.loc.x -> com.a.gg:
    java.util.Map d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    void a(java.util.Map) -> a
    void a(java.lang.String) -> a
    void b(java.util.Map) -> b
    java.lang.String c() -> c
    java.util.Map a() -> a
    java.util.Map b() -> b
com.loc.y -> com.a.gh:
    java.lang.String a -> a
    java.lang.String b -> b
com.loc.z -> com.a.gi:
com.zgcar.com.R -> com.zgcar.com.a:
com.zgcar.com.R$styleable -> com.zgcar.com.b:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CircleImageView -> CircleImageView
    int CircleImageView_border_color -> CircleImageView_border_color
    int CircleImageView_border_width -> CircleImageView_border_width
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] roundedimageview -> roundedimageview
    int roundedimageview_border_inside_color -> roundedimageview_border_inside_color
    int roundedimageview_border_outside_color -> roundedimageview_border_outside_color
    int roundedimageview_border_thickness -> roundedimageview_border_thickness
com.zgcar.com.account.ActivityAboutApp -> com.zgcar.com.account.ActivityAboutApp:
    android.widget.TextView versionTv -> a
    android.widget.TextView versionTv1 -> b
    android.app.Dialog dialog -> c
    java.lang.String newVersionLink -> d
    java.lang.String version -> e
    android.app.ProgressDialog progressDialog -> f
    android.os.Handler handler -> g
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getRequestJson() -> c
    void getAppVersionInfo() -> d
    void connectService() -> e
    void initialize() -> f
    void onClick(android.view.View) -> onClick
    void update() -> g
    void dismissDialog() -> h
    void showProdressDialog() -> i
    android.app.Dialog getDialog() -> j
    void showUpDetaDialog() -> k
    void update(java.lang.String) -> a
    void downSucceed() -> a
    void downFailed() -> b
    android.widget.TextView access$0(com.zgcar.com.account.ActivityAboutApp) -> a
    void access$1(com.zgcar.com.account.ActivityAboutApp) -> b
    android.app.ProgressDialog access$2(com.zgcar.com.account.ActivityAboutApp) -> c
    java.lang.String access$3(com.zgcar.com.account.ActivityAboutApp) -> d
    void access$4(com.zgcar.com.account.ActivityAboutApp) -> e
    java.lang.String access$5(com.zgcar.com.account.ActivityAboutApp) -> f
    void access$6(com.zgcar.com.account.ActivityAboutApp,java.lang.String) -> a
    android.os.Handler access$7(com.zgcar.com.account.ActivityAboutApp) -> g
    java.lang.String access$8(com.zgcar.com.account.ActivityAboutApp) -> h
com.zgcar.com.account.ActivityAboutApp$1 -> com.zgcar.com.account.a:
    com.zgcar.com.account.ActivityAboutApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityAboutApp$2 -> com.zgcar.com.account.b:
    com.zgcar.com.account.ActivityAboutApp this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityAboutApp$3 -> com.zgcar.com.account.c:
    com.zgcar.com.account.ActivityAboutApp this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityAboutApp$4 -> com.zgcar.com.account.d:
    com.zgcar.com.account.ActivityAboutApp this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityAboutAppPermission -> com.zgcar.com.account.ActivityAboutAppPermission:
    void onCreate(android.os.Bundle) -> onCreate
com.zgcar.com.account.ActivityAboutAppPermission$1 -> com.zgcar.com.account.e:
    com.zgcar.com.account.ActivityAboutAppPermission this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityAccountManage -> com.zgcar.com.account.ActivityAccountManage:
    android.widget.EditText oldPsw -> a
    android.widget.EditText newPsw1 -> b
    android.widget.EditText newPsw2 -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    boolean isCanConnection() -> b
    java.lang.String getRequestJsonStr() -> c
    void connectService() -> d
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.zgcar.com.account.ActivityAccountManage) -> a
com.zgcar.com.account.ActivityAccountManage$1 -> com.zgcar.com.account.f:
    com.zgcar.com.account.ActivityAccountManage this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityAddAlarmClock -> com.zgcar.com.account.ActivityAddAlarmClock:
    com.zgcar.com.wheelview.WheelView hour -> a
    com.zgcar.com.wheelview.WheelView mins -> b
    boolean isNew -> c
    com.zgcar.com.account.model.MyAlarmInfos infos -> d
    boolean isEdit -> e
    android.widget.TextView repeatDesc -> f
    java.lang.String[] hourArray -> g
    java.lang.String[] minsArray -> h
    java.util.List list -> i
    android.app.Dialog dialog -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void initClock() -> b
    java.lang.String getReequeestJsonStr() -> c
    void showProgressDialog() -> d
    void disMissDialog() -> e
    android.app.Dialog getDialog() -> f
    void getBack() -> g
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void sendRequest() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.zgcar.com.account.ActivityAddAlarmClock,boolean) -> a
    java.lang.String access$1(com.zgcar.com.account.ActivityAddAlarmClock) -> a
    void access$2(com.zgcar.com.account.ActivityAddAlarmClock) -> b
com.zgcar.com.account.ActivityAddAlarmClock$1 -> com.zgcar.com.account.g:
    com.zgcar.com.account.ActivityAddAlarmClock this$0 -> a
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.account.ActivityAddAlarmClock$2 -> com.zgcar.com.account.h:
    com.zgcar.com.account.ActivityAddAlarmClock this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityBasics -> com.zgcar.com.account.ActivityBasics:
    android.widget.CheckBox silenceBt -> a
    android.widget.CheckBox temperatureRemind -> b
    android.widget.CheckBox bodyAnswer -> c
    android.widget.Button removeWatch -> d
    com.zgcar.com.util.CircleImageView imageIcon -> e
    android.app.Dialog dialog -> f
    com.zgcar.com.main.MyApplication app -> g
    android.widget.TextView titleName -> h
    android.widget.TextView name -> i
    android.widget.TextView joinTimeTv -> j
    android.widget.TextView terminalVer -> k
    int flag -> l
    com.zgcar.com.account.model.TerminalInfos info -> m
    android.graphics.Bitmap bitmap -> n
    android.os.Handler handler -> o
    void onCreate(android.os.Bundle) -> onCreate
    void showProgressDialog() -> a
    void initialize() -> b
    void onResume() -> onResume
    void initView() -> c
    void lisener() -> d
    void sendRequest(java.lang.String,int) -> a
    void onClick(android.view.View) -> onClick
    void showUnbindWearningDialog() -> e
    void closeDialog() -> f
    void dialogChangeAdmin() -> g
    void removeAction() -> h
    void recycle() -> i
    void onDestroy() -> onDestroy
    void sendRequest(java.lang.String) -> a
    void access$0(com.zgcar.com.account.ActivityBasics) -> a
    com.zgcar.com.main.MyApplication access$1(com.zgcar.com.account.ActivityBasics) -> b
    void access$2(com.zgcar.com.account.ActivityBasics) -> c
    android.widget.CheckBox access$3(com.zgcar.com.account.ActivityBasics) -> d
    void access$4(com.zgcar.com.account.ActivityBasics,int) -> a
    void access$5(com.zgcar.com.account.ActivityBasics,java.lang.String,int) -> a
    android.widget.CheckBox access$6(com.zgcar.com.account.ActivityBasics) -> e
    android.widget.CheckBox access$7(com.zgcar.com.account.ActivityBasics) -> f
    int access$8(com.zgcar.com.account.ActivityBasics) -> g
    com.zgcar.com.account.model.TerminalInfos access$9(com.zgcar.com.account.ActivityBasics) -> h
    void access$10(com.zgcar.com.account.ActivityBasics,com.zgcar.com.account.model.TerminalInfos) -> a
    android.os.Handler access$11(com.zgcar.com.account.ActivityBasics) -> i
com.zgcar.com.account.ActivityBasics$1 -> com.zgcar.com.account.i:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityBasics$2 -> com.zgcar.com.account.j:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityBasics$3 -> com.zgcar.com.account.k:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityBasics$4 -> com.zgcar.com.account.l:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityBasics$5 -> com.zgcar.com.account.m:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    java.lang.String val$cmd -> b
    int val$item -> c
    void run() -> run
com.zgcar.com.account.ActivityBasics$6 -> com.zgcar.com.account.n:
    com.zgcar.com.account.ActivityBasics this$0 -> a
    java.lang.String val$cmd -> b
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth -> com.zgcar.com.account.ActivityBlueTooth:
    android.widget.ImageView blueState -> a
    android.widget.ListView listView -> b
    android.widget.LinearLayout connectedLayout -> c
    android.widget.TextView connectedBlueName -> d
    android.widget.TextView connectedBlueMac -> e
    android.widget.ImageView connectedBlueSwitch -> f
    android.os.Handler handler -> g
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> h
    com.zgcar.com.account.adapter.AdapterBlueTooth adapter -> i
    android.app.ProgressDialog dialog -> j
    android.bluetooth.BluetoothGatt bluetoothGatt -> k
    java.util.ArrayList devices -> l
    com.zgcar.com.main.MyApplication app -> m
    com.zgcar.com.account.ActivityBlueTooth$MyBroadcastReceiver broadcastReceiver -> n
    java.lang.Runnable connectTimeOut -> o
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> e
    void initView() -> f
    void setBlueState() -> a
    void connectedLayoutIsGone(boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    void connectBlue() -> g
    void scanBlue() -> h
    void changeBlueState() -> i
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void showDialog(java.lang.String) -> a
    void dismissDialog() -> j
    android.app.ProgressDialog getDialog() -> b
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
    void connected() -> c
    void disConnected() -> d
    android.widget.TextView access$0(com.zgcar.com.account.ActivityBlueTooth) -> a
    void access$1(com.zgcar.com.account.ActivityBlueTooth) -> b
    android.os.Handler access$2(com.zgcar.com.account.ActivityBlueTooth) -> c
    java.lang.Runnable access$3(com.zgcar.com.account.ActivityBlueTooth) -> d
    android.bluetooth.BluetoothAdapter access$4(com.zgcar.com.account.ActivityBlueTooth) -> e
    android.widget.ImageView access$5(com.zgcar.com.account.ActivityBlueTooth) -> f
    android.bluetooth.BluetoothGatt access$6(com.zgcar.com.account.ActivityBlueTooth) -> g
    java.util.ArrayList access$7(com.zgcar.com.account.ActivityBlueTooth) -> h
    com.zgcar.com.account.adapter.AdapterBlueTooth access$8(com.zgcar.com.account.ActivityBlueTooth) -> i
com.zgcar.com.account.ActivityBlueTooth$1 -> com.zgcar.com.account.o:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth$2 -> com.zgcar.com.account.p:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth$3 -> com.zgcar.com.account.q:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth$4 -> com.zgcar.com.account.r:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth$5 -> com.zgcar.com.account.s:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    android.bluetooth.BluetoothDevice val$device -> b
    void run() -> run
com.zgcar.com.account.ActivityBlueTooth$MyBroadcastReceiver -> com.zgcar.com.account.t:
    com.zgcar.com.account.ActivityBlueTooth this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgcar.com.account.ActivityCheckPhone -> com.zgcar.com.account.ActivityCheckPhone:
    android.widget.ListView listView -> a
    java.lang.String costStr -> b
    java.lang.String trafficStr -> c
    java.util.ArrayList infosList -> d
    com.zgcar.com.db.DbManager dbManager -> e
    com.zgcar.com.account.adapter.AdapterCheckPhoneMessage adapter -> f
    android.app.Dialog dialog -> g
    java.lang.String date -> h
    java.lang.String content -> i
    com.zgcar.com.account.ActivityCheckPhone$phoneReceiver receive -> j
    com.zgcar.com.main.MyApplication app -> k
    android.os.Handler handler -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initReceive() -> b
    void getNotifyData(android.os.Bundle) -> a
    void initialize() -> c
    void sendRequest(java.lang.String,boolean) -> a
    void onClick(android.view.View) -> onClick
    void clearData() -> d
    void showProgressDialog() -> e
    void showEditDialog() -> f
    void dismissDialog() -> g
    void addMessageInfo(int) -> a
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityCheckPhone,java.lang.String) -> a
    java.lang.String access$1(com.zgcar.com.account.ActivityCheckPhone) -> a
    void access$2(com.zgcar.com.account.ActivityCheckPhone,java.lang.String) -> b
    void access$3(com.zgcar.com.account.ActivityCheckPhone,int) -> a
    void access$4(com.zgcar.com.account.ActivityCheckPhone) -> b
    void access$5(com.zgcar.com.account.ActivityCheckPhone,android.os.Bundle) -> a
    com.zgcar.com.account.adapter.AdapterCheckPhoneMessage access$6(com.zgcar.com.account.ActivityCheckPhone) -> c
    android.widget.ListView access$7(com.zgcar.com.account.ActivityCheckPhone) -> d
    java.util.ArrayList access$8(com.zgcar.com.account.ActivityCheckPhone) -> e
    java.lang.String access$9(com.zgcar.com.account.ActivityCheckPhone) -> f
    com.zgcar.com.main.MyApplication access$10(com.zgcar.com.account.ActivityCheckPhone) -> g
    android.os.Handler access$11(com.zgcar.com.account.ActivityCheckPhone) -> h
com.zgcar.com.account.ActivityCheckPhone$1 -> com.zgcar.com.account.u:
    com.zgcar.com.account.ActivityCheckPhone this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityCheckPhone$2 -> com.zgcar.com.account.v:
    com.zgcar.com.account.ActivityCheckPhone this$0 -> a
    java.lang.String val$cmd -> b
    boolean val$isCost -> c
    void run() -> run
com.zgcar.com.account.ActivityCheckPhone$phoneReceiver -> com.zgcar.com.account.w:
    com.zgcar.com.account.ActivityCheckPhone this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgcar.com.account.ActivityEditBasics -> com.zgcar.com.account.ActivityEditBasics:
    com.zgcar.com.util.CircleImageView icon -> b
    int sexFlag -> c
    android.widget.PopupWindow popWindow -> d
    com.zgcar.com.main.MyApplication app -> e
    android.widget.EditText content -> f
    com.zgcar.com.wheelview.WheelView year -> g
    com.zgcar.com.wheelview.WheelView month -> h
    com.zgcar.com.wheelview.WheelView day -> i
    android.widget.TextView phoneNoTv -> j
    android.widget.TextView birthdayTv -> k
    android.widget.TextView sexTv -> l
    android.widget.TextView nickNameTv -> m
    android.widget.TextView heightTv -> n
    android.widget.TextView weightTv -> o
    java.util.List infos -> p
    int position -> q
    int imageFlag -> r
    java.io.File imageFileOld -> s
    java.io.File imageFileTemp -> t
    java.io.File imageFileNew -> u
    android.content.SharedPreferences sf -> v
    android.app.Dialog dialog -> w
    java.lang.String url -> x
    boolean hasImage -> y
    android.widget.RadioGroup group -> z
    android.graphics.Bitmap bitmapTempIcon -> A
    int type -> B
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initialize() -> b
    void initPopupWindows(android.view.View,int) -> a
    void popWindowDismiss() -> c
    void birthdayPoppupWindow() -> d
    void birthdayLisenner() -> e
    void initDay(int,int) -> a
    void timeLisnner() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void getBack() -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void showSelectSexDialog() -> h
    void showProgressDialog() -> i
    void closeDoalog() -> j
    void showEditDialog(int) -> a
    void showSelectIconDialog() -> k
    void selectIconFromPhone() -> l
    void camera() -> m
    void showImageview(android.content.Intent) -> a
    void startCutImage(android.net.Uri) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void connectService() -> n
    void upLoadingImage() -> o
    void changeListInfos() -> p
    java.lang.String getRequestJsonstr() -> q
    void getEditContent(int) -> b
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityEditBasics) -> a
    void access$1(com.zgcar.com.account.ActivityEditBasics,android.widget.PopupWindow) -> a
    void access$2(com.zgcar.com.account.ActivityEditBasics,int,int) -> a
    java.lang.String access$3(com.zgcar.com.account.ActivityEditBasics) -> b
    boolean access$4(com.zgcar.com.account.ActivityEditBasics) -> c
    java.io.File access$5(com.zgcar.com.account.ActivityEditBasics) -> d
    int access$6(com.zgcar.com.account.ActivityEditBasics) -> e
    java.io.File access$7(com.zgcar.com.account.ActivityEditBasics) -> f
    android.content.SharedPreferences access$8(com.zgcar.com.account.ActivityEditBasics) -> g
    com.zgcar.com.main.MyApplication access$9(com.zgcar.com.account.ActivityEditBasics) -> h
    int access$10(com.zgcar.com.account.ActivityEditBasics) -> i
    void access$11(com.zgcar.com.account.ActivityEditBasics) -> j
    void access$12(com.zgcar.com.account.ActivityEditBasics) -> k
    java.lang.String access$13(com.zgcar.com.account.ActivityEditBasics) -> l
    void access$14(com.zgcar.com.account.ActivityEditBasics,int) -> a
com.zgcar.com.account.ActivityEditBasics$1 -> com.zgcar.com.account.x:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityEditBasics$2 -> com.zgcar.com.account.y:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.account.ActivityEditBasics$3 -> com.zgcar.com.account.z:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void onChanged(com.zgcar.com.wheelview.WheelView,int,int) -> a
com.zgcar.com.account.ActivityEditBasics$4 -> com.zgcar.com.account.aa:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void onChanged(com.zgcar.com.wheelview.WheelView,int,int) -> a
com.zgcar.com.account.ActivityEditBasics$5 -> com.zgcar.com.account.ab:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityEditBasics$6 -> com.zgcar.com.account.ac:
    com.zgcar.com.account.ActivityEditBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyAdminBasics -> com.zgcar.com.account.ActivityFamilyAdminBasics:
    com.zgcar.com.main.MyApplication app -> a
    com.zgcar.com.account.model.FamilyParentInfos memberInfo -> b
    boolean hasImage -> c
    android.widget.TextView relationTv -> d
    android.widget.TextView nickNameTv -> e
    com.zgcar.com.util.CircleImageView icon -> f
    android.app.Dialog dialog -> g
    java.io.File imageFileNew -> h
    java.io.File tempFile -> i
    android.graphics.Bitmap bitmapTemp -> j
    android.os.Handler handler -> k
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void showUnbindWearningDialog() -> c
    void showEditNickNameDialog() -> d
    void showSelectIconDialog() -> e
    void selectIconFromPhone() -> f
    void unwrapAllMembers() -> g
    void dialogChangeAdmin() -> h
    void quit() -> i
    void sendRequest() -> j
    void uploadIsSucceed() -> k
    void startCamera() -> l
    void SendUpdataRequest() -> m
    void saveBasicsInfos() -> n
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showImageview(android.content.Intent) -> a
    void startCutImage(android.net.Uri) -> a
    java.lang.String getChangeBasicsInfoJsonStr() -> o
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showProgressDialog() -> p
    void dismissDialog() -> q
    void recycleImage() -> r
    android.app.Dialog getDialog() -> s
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityFamilyAdminBasics) -> a
    void access$1(com.zgcar.com.account.ActivityFamilyAdminBasics) -> b
    android.widget.TextView access$2(com.zgcar.com.account.ActivityFamilyAdminBasics) -> c
    com.zgcar.com.main.MyApplication access$3(com.zgcar.com.account.ActivityFamilyAdminBasics) -> d
    java.io.File access$4(com.zgcar.com.account.ActivityFamilyAdminBasics) -> e
    com.zgcar.com.account.model.FamilyParentInfos access$5(com.zgcar.com.account.ActivityFamilyAdminBasics) -> f
    void access$6(com.zgcar.com.account.ActivityFamilyAdminBasics) -> g
    android.os.Handler access$7(com.zgcar.com.account.ActivityFamilyAdminBasics) -> h
    java.lang.String access$8(com.zgcar.com.account.ActivityFamilyAdminBasics) -> i
    void access$9(com.zgcar.com.account.ActivityFamilyAdminBasics) -> j
com.zgcar.com.account.ActivityFamilyAdminBasics$1 -> com.zgcar.com.account.ad:
    com.zgcar.com.account.ActivityFamilyAdminBasics this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityFamilyAdminBasics$2 -> com.zgcar.com.account.ae:
    com.zgcar.com.account.ActivityFamilyAdminBasics this$0 -> a
    android.widget.EditText val$content -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyAdminBasics$3 -> com.zgcar.com.account.af:
    com.zgcar.com.account.ActivityFamilyAdminBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyAdminBasics$4 -> com.zgcar.com.account.ag:
    com.zgcar.com.account.ActivityFamilyAdminBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyAdminBasics$5 -> com.zgcar.com.account.ah:
    com.zgcar.com.account.ActivityFamilyAdminBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyEditRelationship -> com.zgcar.com.account.ActivityFamilyEditRelationship:
    android.widget.GridView gridView -> a
    java.lang.String[] name -> b
    int[] icon -> c
    com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter adapter -> d
    android.widget.EditText content -> e
    android.app.Dialog dialog -> f
    java.util.List familyList -> g
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    boolean nameIsExist(java.lang.String) -> a
    void showDialog() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    java.lang.String[] access$0(com.zgcar.com.account.ActivityFamilyEditRelationship) -> a
    int[] access$1(com.zgcar.com.account.ActivityFamilyEditRelationship) -> b
    boolean access$2(com.zgcar.com.account.ActivityFamilyEditRelationship,java.lang.String) -> a
    void access$3(com.zgcar.com.account.ActivityFamilyEditRelationship) -> c
com.zgcar.com.account.ActivityFamilyEditRelationship$1 -> com.zgcar.com.account.ai:
    com.zgcar.com.account.ActivityFamilyEditRelationship this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter -> com.zgcar.com.account.aj:
    com.zgcar.com.account.ActivityFamilyEditRelationship this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter$ViewHolder -> com.zgcar.com.account.ak:
    com.zgcar.com.util.CircleImageView iconImage -> b
    android.widget.TextView nameTv -> c
    com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter this$1 -> a
    void access$1(com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    void access$2(com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter$ViewHolder,android.widget.TextView) -> a
    com.zgcar.com.util.CircleImageView access$3(com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter$ViewHolder) -> a
    android.widget.TextView access$4(com.zgcar.com.account.ActivityFamilyEditRelationship$Myadapter$ViewHolder) -> b
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics -> com.zgcar.com.account.ActivityFamilyMemberMyselfBasics:
    com.zgcar.com.main.MyApplication app -> a
    com.zgcar.com.account.model.FamilyParentInfos memberInfo -> b
    boolean hasImage -> c
    android.widget.TextView nickNameTv -> d
    android.widget.TextView relationTv -> e
    com.zgcar.com.util.CircleImageView icon -> f
    android.app.Dialog dialog -> g
    java.io.File imageFileNew -> h
    java.io.File tempFile -> i
    android.graphics.Bitmap bitmapTemp -> j
    android.os.Handler handler -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initView() -> a
    void initialize() -> b
    void onClick(android.view.View) -> onClick
    void backToFamilyActivity() -> c
    void dismissDialog() -> d
    void showChangeInfoDialog() -> e
    void showSelectIconDialog() -> f
    void selectIconFromPhone() -> g
    void quit() -> h
    void sendRequest() -> i
    void uploadIsSucceed() -> j
    void startCamera() -> k
    void SendUpdataRequest() -> l
    void showImageview(android.content.Intent) -> a
    void startCutImage(android.net.Uri) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String getChangeBasicsInfoJsonStr() -> m
    void sendLeaveAloneRequest() -> n
    java.lang.String getLeaveAloneJsonStr() -> o
    android.app.Dialog getDialog() -> p
    void recycleBitmap() -> q
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> a
    void access$1(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> b
    android.widget.TextView access$2(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> c
    com.zgcar.com.main.MyApplication access$3(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> d
    java.io.File access$4(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> e
    com.zgcar.com.account.model.FamilyParentInfos access$5(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> f
    void access$6(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> g
    android.os.Handler access$7(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> h
    java.lang.String access$8(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> i
    boolean access$9(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> j
    void access$10(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> k
    java.lang.String access$11(com.zgcar.com.account.ActivityFamilyMemberMyselfBasics) -> l
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics$1 -> com.zgcar.com.account.al:
    com.zgcar.com.account.ActivityFamilyMemberMyselfBasics this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics$2 -> com.zgcar.com.account.am:
    com.zgcar.com.account.ActivityFamilyMemberMyselfBasics this$0 -> a
    android.widget.EditText val$content -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics$3 -> com.zgcar.com.account.an:
    com.zgcar.com.account.ActivityFamilyMemberMyselfBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics$4 -> com.zgcar.com.account.ao:
    com.zgcar.com.account.ActivityFamilyMemberMyselfBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMemberMyselfBasics$5 -> com.zgcar.com.account.ap:
    com.zgcar.com.account.ActivityFamilyMemberMyselfBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMemberParentBasics -> com.zgcar.com.account.ActivityFamilyMemberParentBasics:
    com.zgcar.com.main.MyApplication app -> a
    com.zgcar.com.account.model.FamilyParentInfos memberInfo -> b
    boolean hasImage -> c
    android.widget.TextView nickNameTv -> d
    android.widget.TextView relationTv -> e
    com.zgcar.com.util.CircleImageView icon -> f
    android.app.Dialog dialog -> g
    java.io.File imageFileNew -> h
    java.io.File tempFile -> i
    android.widget.CheckBox falimyNumber -> j
    android.graphics.Bitmap bitmapTemp -> k
    android.os.Handler handler -> l
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initView() -> a
    void boxListener() -> b
    void initialize() -> c
    void onClick(android.view.View) -> onClick
    void showProgressDialog() -> d
    void showChangeInfoDialog() -> e
    void showSelectIconDialog() -> f
    void selectIconFromPhone() -> g
    void quit() -> h
    void sendRequest() -> i
    void uploadIsSucceed() -> j
    void startCamera() -> k
    void SendUpdataRequest() -> l
    void showImageview(android.content.Intent) -> a
    void startCutImage(android.net.Uri) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String getChangeBasicsInfoJsonStr() -> m
    void sendLeaveAloneRequest() -> n
    java.lang.String getLeaveAloneJsonStr() -> o
    android.app.Dialog getDialog() -> p
    void dismissDialog() -> q
    void recycleBitmap() -> r
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> a
    com.zgcar.com.account.model.FamilyParentInfos access$1(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> b
    android.widget.TextView access$2(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> c
    void access$3(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> d
    java.io.File access$4(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> e
    void access$5(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> f
    android.os.Handler access$6(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> g
    java.lang.String access$7(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> h
    java.lang.String access$8(com.zgcar.com.account.ActivityFamilyMemberParentBasics) -> i
com.zgcar.com.account.ActivityFamilyMemberParentBasics$1 -> com.zgcar.com.account.aq:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityFamilyMemberParentBasics$2 -> com.zgcar.com.account.ar:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.ActivityFamilyMemberParentBasics$3 -> com.zgcar.com.account.as:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    android.widget.EditText val$content -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyMemberParentBasics$4 -> com.zgcar.com.account.at:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMemberParentBasics$5 -> com.zgcar.com.account.au:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMemberParentBasics$6 -> com.zgcar.com.account.av:
    com.zgcar.com.account.ActivityFamilyMemberParentBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMembers -> com.zgcar.com.account.ActivityFamilyMembers:
    android.widget.ExpandableListView listview -> a
    java.util.List familyList -> b
    com.zgcar.com.account.adapter.AdapterFamilyMembers adapter -> c
    com.zgcar.com.main.MyApplication app -> d
    android.app.Dialog dialog -> e
    android.widget.ImageButton addNew -> f
    android.os.Handler handler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void getFimilyMembersInfos() -> a
    void initView() -> b
    void init() -> c
    void expandListLisenner() -> d
    void dismissDialog() -> e
    void showDialog() -> f
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void access$0(com.zgcar.com.account.ActivityFamilyMembers) -> a
    com.zgcar.com.main.MyApplication access$1(com.zgcar.com.account.ActivityFamilyMembers) -> b
    void access$2(com.zgcar.com.account.ActivityFamilyMembers) -> c
    void access$3(com.zgcar.com.account.ActivityFamilyMembers,java.util.List) -> a
    java.util.List access$4(com.zgcar.com.account.ActivityFamilyMembers) -> d
    android.os.Handler access$5(com.zgcar.com.account.ActivityFamilyMembers) -> e
com.zgcar.com.account.ActivityFamilyMembers$1 -> com.zgcar.com.account.aw:
    com.zgcar.com.account.ActivityFamilyMembers this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityFamilyMembers$2 -> com.zgcar.com.account.ax:
    com.zgcar.com.account.ActivityFamilyMembers this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMembers$3 -> com.zgcar.com.account.ay:
    com.zgcar.com.account.ActivityFamilyMembers this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.zgcar.com.account.ActivityFamilyMembers$4 -> com.zgcar.com.account.az:
    com.zgcar.com.account.ActivityFamilyMembers this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.zgcar.com.account.ActivityFamilyMembersAddNew -> com.zgcar.com.account.ActivityFamilyMembersAddNew:
    android.widget.TextView nickNameTv -> a
    android.widget.TextView phoneNumTv -> b
    android.widget.TextView relationTv -> c
    com.zgcar.com.util.CircleImageView icon -> d
    android.graphics.Bitmap tempBitmap -> e
    android.app.Dialog dialog -> f
    java.io.File tempFile -> g
    java.io.File iconNewFile -> h
    boolean isHasIcon -> i
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void selectIconFromPhone() -> b
    void startCamera() -> c
    void showSelectIconDialog() -> d
    void showEditPhoneNum() -> e
    void showEditNickNameDialog() -> f
    void startCutImage(android.net.Uri) -> b
    void showImageview(android.content.Intent) -> a
    void showProgressDialog() -> g
    android.app.Dialog getDialog() -> h
    void dismissDialog() -> i
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void getPhoneNumTv(android.net.Uri) -> a
    void upLoadIcon() -> j
    void saveRequest() -> k
    java.lang.String getJsonStr(int) -> a
    void recycleFile() -> l
    void recycleBitmap() -> m
    android.widget.TextView access$0(com.zgcar.com.account.ActivityFamilyMembersAddNew) -> a
    void access$1(com.zgcar.com.account.ActivityFamilyMembersAddNew) -> b
    android.widget.TextView access$2(com.zgcar.com.account.ActivityFamilyMembersAddNew) -> c
    java.io.File access$3(com.zgcar.com.account.ActivityFamilyMembersAddNew) -> d
    java.lang.String access$4(com.zgcar.com.account.ActivityFamilyMembersAddNew,int) -> a
com.zgcar.com.account.ActivityFamilyMembersAddNew$1 -> com.zgcar.com.account.ba:
    com.zgcar.com.account.ActivityFamilyMembersAddNew this$0 -> a
    android.widget.EditText val$content -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyMembersAddNew$2 -> com.zgcar.com.account.bb:
    com.zgcar.com.account.ActivityFamilyMembersAddNew this$0 -> a
    android.widget.EditText val$content -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyMembersAddNew$3 -> com.zgcar.com.account.bc:
    com.zgcar.com.account.ActivityFamilyMembersAddNew this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityFamilyMembersAddNew$4 -> com.zgcar.com.account.bd:
    com.zgcar.com.account.ActivityFamilyMembersAddNew this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFamilyMembersAddNew$5 -> com.zgcar.com.account.be:
    com.zgcar.com.account.ActivityFamilyMembersAddNew this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityFeedBack -> com.zgcar.com.account.ActivityFeedBack:
    android.widget.EditText content -> a
    android.widget.Button submitBt -> b
    java.lang.String jsonStr -> c
    java.lang.String contentStr -> d
    android.app.Dialog dialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void connectService() -> b
    void getRequestJsonStr(java.lang.String) -> a
    boolean isEmpty() -> c
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.zgcar.com.account.ActivityFeedBack) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivityFeedBack) -> b
com.zgcar.com.account.ActivityFeedBack$1 -> com.zgcar.com.account.bf:
    com.zgcar.com.account.ActivityFeedBack this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityGuyBasics -> com.zgcar.com.account.ActivityGuyBasics:
    com.zgcar.com.util.CircleImageView icon -> a
    android.widget.TextView name -> b
    android.widget.TextView sex -> c
    android.widget.TextView age -> d
    com.zgcar.com.account.model.GuysInfos info -> e
    int sexFlag -> f
    android.app.Dialog dialog -> g
    android.app.Dialog progressDialog -> h
    java.lang.String jsonStr -> i
    android.graphics.Bitmap iconBitmap -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void sendDeleteRequest() -> c
    void delereDialog() -> d
    void getDeletRequestJson() -> e
    void onDestroy() -> onDestroy
    java.lang.String access$0(com.zgcar.com.account.ActivityGuyBasics) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivityGuyBasics) -> b
com.zgcar.com.account.ActivityGuyBasics$1 -> com.zgcar.com.account.bg:
    com.zgcar.com.account.ActivityGuyBasics this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityGuysMain -> com.zgcar.com.account.ActivityGuysMain:
    java.lang.String jsonStr -> a
    java.util.List guysListInfos -> b
    com.zgcar.com.main.MyApplication app -> c
    android.content.SharedPreferences sf -> d
    android.app.Dialog dialog -> e
    com.zgcar.com.account.adapter.AdapterGuysMain adapter -> f
    android.widget.ListView listView -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initView() -> a
    void onPause() -> onPause
    void getGuysInfosRequest() -> b
    void initialize() -> c
    void onDestroy() -> onDestroy
    void access$0(com.zgcar.com.account.ActivityGuysMain) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivityGuysMain) -> b
    java.util.List access$2(com.zgcar.com.account.ActivityGuysMain) -> c
    java.lang.String access$3(com.zgcar.com.account.ActivityGuysMain) -> d
    android.content.SharedPreferences access$4(com.zgcar.com.account.ActivityGuysMain) -> e
    com.zgcar.com.main.MyApplication access$5(com.zgcar.com.account.ActivityGuysMain) -> f
    void access$6(com.zgcar.com.account.ActivityGuysMain,java.util.List) -> a
    android.os.Handler access$7(com.zgcar.com.account.ActivityGuysMain) -> g
com.zgcar.com.account.ActivityGuysMain$1 -> com.zgcar.com.account.bh:
    com.zgcar.com.account.ActivityGuysMain this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityGuysMain$2 -> com.zgcar.com.account.bi:
    com.zgcar.com.account.ActivityGuysMain this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivityGuysMain$3 -> com.zgcar.com.account.bj:
    com.zgcar.com.account.ActivityGuysMain this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityGuysMain$4 -> com.zgcar.com.account.bk:
    com.zgcar.com.account.ActivityGuysMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityLocationModel -> com.zgcar.com.account.ActivityLocationModel:
    android.widget.CheckBox normal -> a
    android.widget.CheckBox lowBattery -> b
    int flag -> c
    android.app.Dialog dialog -> d
    com.zgcar.com.account.model.TerminalInfos info -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void checkBoxLisenner() -> b
    boolean isSelected() -> c
    void connectService() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    android.widget.CheckBox access$0(com.zgcar.com.account.ActivityLocationModel) -> a
    void access$1(com.zgcar.com.account.ActivityLocationModel,int) -> a
    android.widget.CheckBox access$2(com.zgcar.com.account.ActivityLocationModel) -> b
    android.app.Dialog access$3(com.zgcar.com.account.ActivityLocationModel) -> c
com.zgcar.com.account.ActivityLocationModel$1 -> com.zgcar.com.account.bl:
    com.zgcar.com.account.ActivityLocationModel this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.ActivityLocationModel$2 -> com.zgcar.com.account.bm:
    com.zgcar.com.account.ActivityLocationModel this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.ActivityLocationModel$3 -> com.zgcar.com.account.bn:
    com.zgcar.com.account.ActivityLocationModel this$0 -> a
    java.lang.String val$jsonStr -> b
    void run() -> run
com.zgcar.com.account.ActivityMessageWarn -> com.zgcar.com.account.ActivityMessageWarn:
    android.widget.CheckBox isReceiveNotify -> a
    android.widget.CheckBox notifyRing -> b
    android.widget.CheckBox notifyShake -> c
    android.widget.CheckBox notifyNight -> d
    android.content.SharedPreferences sf -> e
    boolean flag1 -> f
    boolean flag2 -> g
    boolean flag3 -> h
    boolean flag4 -> i
    android.content.SharedPreferences$Editor editor -> j
    android.widget.LinearLayout selectTime -> k
    com.zgcar.com.wheelview.WheelView wheelView1 -> l
    com.zgcar.com.wheelview.WheelView wheelView3 -> m
    java.lang.String timePeriod -> n
    com.zgcar.com.util.MyTextView timePeriodTv -> o
    android.app.Dialog dialog -> p
    java.lang.String[] timeArray -> q
    android.os.Handler handler -> r
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void initView() -> b
    void getRingMode() -> c
    void setSilence() -> d
    void showSelectSilenceTimeDialog() -> e
    void getNotify() -> f
    void setRing() -> g
    void setNight() -> h
    void onClick(android.view.View) -> onClick
    void setSilencePeriod() -> i
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void access$0(com.zgcar.com.account.ActivityMessageWarn) -> a
com.zgcar.com.account.ActivityMessageWarn$1 -> com.zgcar.com.account.bo:
    com.zgcar.com.account.ActivityMessageWarn this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityMyAlarmClock -> com.zgcar.com.account.ActivityMyAlarmClock:
    android.widget.ImageButton addNewClock -> a
    java.lang.String jsonStr -> b
    java.util.List alarmInfosList -> c
    android.app.Dialog dialog -> d
    com.zgcar.com.account.adapter.AdapterMyAlarmClock adapter -> e
    android.widget.ListView listView -> f
    com.zgcar.com.main.MyApplication app -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initialize() -> a
    void initListView() -> b
    void onClick(android.view.View) -> onClick
    com.zgcar.com.account.model.MyAlarmInfos getAlarmInfo() -> c
    void sendRequest() -> d
    java.util.List access$0(com.zgcar.com.account.ActivityMyAlarmClock) -> a
    android.widget.ImageButton access$1(com.zgcar.com.account.ActivityMyAlarmClock) -> b
    void access$2(com.zgcar.com.account.ActivityMyAlarmClock,java.util.List) -> a
    void access$3(com.zgcar.com.account.ActivityMyAlarmClock) -> c
    android.app.Dialog access$4(com.zgcar.com.account.ActivityMyAlarmClock) -> d
    java.lang.String access$5(com.zgcar.com.account.ActivityMyAlarmClock) -> e
    com.zgcar.com.main.MyApplication access$6(com.zgcar.com.account.ActivityMyAlarmClock) -> f
    android.os.Handler access$7(com.zgcar.com.account.ActivityMyAlarmClock) -> g
com.zgcar.com.account.ActivityMyAlarmClock$1 -> com.zgcar.com.account.bp:
    com.zgcar.com.account.ActivityMyAlarmClock this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityMyAlarmClock$2 -> com.zgcar.com.account.bq:
    com.zgcar.com.account.ActivityMyAlarmClock this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivityMyAlarmClock$3 -> com.zgcar.com.account.br:
    com.zgcar.com.account.ActivityMyAlarmClock this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityOfflineProvince -> com.zgcar.com.account.ActivityOfflineProvince:
    com.amap.api.maps.offlinemap.OfflineMapManager amapManager -> b
    java.util.List provinceList -> c
    java.util.HashMap cityMap -> d
    int groupPosition -> e
    int childPosition -> f
    int completeCode -> g
    boolean isStart -> h
    boolean[] isOpen -> i
    java.lang.String cityName -> j
    com.amap.api.maps.MapView mapView -> k
    android.widget.ExpandableListView expandableListView -> l
    android.widget.ExpandableListAdapter adapter -> a
    java.lang.Runnable runnable -> m
    android.os.Handler handler -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void getInfoThread() -> a
    void init() -> b
    com.amap.api.maps.offlinemap.OfflineMapCity getCicy(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    java.lang.String initAdapterState(int) -> a
    void onDownload(int,int,java.lang.String) -> onDownload
    void changeOfflineMapTitle(int,java.lang.String) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
    java.util.List access$0(com.zgcar.com.account.ActivityOfflineProvince) -> a
    java.util.HashMap access$1(com.zgcar.com.account.ActivityOfflineProvince) -> b
    boolean[] access$2(com.zgcar.com.account.ActivityOfflineProvince) -> c
    java.lang.String access$3(com.zgcar.com.account.ActivityOfflineProvince,int) -> a
    int access$4(com.zgcar.com.account.ActivityOfflineProvince) -> d
    int access$5(com.zgcar.com.account.ActivityOfflineProvince) -> e
    int access$6(com.zgcar.com.account.ActivityOfflineProvince) -> f
    java.lang.String access$7(com.zgcar.com.account.ActivityOfflineProvince) -> g
    android.os.Handler access$8(com.zgcar.com.account.ActivityOfflineProvince) -> h
    void access$9(com.zgcar.com.account.ActivityOfflineProvince,int) -> b
    void access$10(com.zgcar.com.account.ActivityOfflineProvince,int) -> c
    void access$11(com.zgcar.com.account.ActivityOfflineProvince,boolean) -> a
    com.amap.api.maps.offlinemap.OfflineMapManager access$12(com.zgcar.com.account.ActivityOfflineProvince) -> i
    void access$13(com.zgcar.com.account.ActivityOfflineProvince,java.util.List) -> a
    void access$14(com.zgcar.com.account.ActivityOfflineProvince,boolean[]) -> a
    android.widget.ExpandableListView access$15(com.zgcar.com.account.ActivityOfflineProvince) -> j
    boolean access$16(com.zgcar.com.account.ActivityOfflineProvince) -> k
com.zgcar.com.account.ActivityOfflineProvince$1 -> com.zgcar.com.account.bs:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.zgcar.com.account.ActivityOfflineProvince$1$ViewHolder -> com.zgcar.com.account.bt:
    android.widget.TextView cityName -> a
    android.widget.TextView citySize -> b
    android.widget.TextView cityDown -> c
    com.zgcar.com.account.ActivityOfflineProvince$1 this$1 -> d
com.zgcar.com.account.ActivityOfflineProvince$2 -> com.zgcar.com.account.bu:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityOfflineProvince$3 -> com.zgcar.com.account.bv:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityOfflineProvince$4 -> com.zgcar.com.account.bw:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityOfflineProvince$5 -> com.zgcar.com.account.bx:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.zgcar.com.account.ActivityOfflineProvince$6 -> com.zgcar.com.account.by:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    void onGroupExpand(int) -> onGroupExpand
com.zgcar.com.account.ActivityOfflineProvince$7 -> com.zgcar.com.account.bz:
    com.zgcar.com.account.ActivityOfflineProvince this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.zgcar.com.account.ActivityQrCode -> com.zgcar.com.account.ActivityQrCode:
    android.widget.ImageView qr -> a
    android.widget.TextView imeiDesc -> b
    android.graphics.Bitmap bitmap -> c
    android.app.Dialog dialog -> d
    android.widget.PopupWindow popupWindow -> e
    java.util.List mListData -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> b
    void createQr() -> c
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void popWindow() -> d
    void dismissPopupWindow() -> e
    void showProgressDialog() -> f
    android.app.Dialog getDialog() -> a
    void shareMsg(java.lang.String,java.lang.String,com.zgcar.com.entity.ShareItem) -> a
    void dismissDialog() -> g
    void access$0(com.zgcar.com.account.ActivityQrCode) -> a
com.zgcar.com.account.ActivityQrCode$1 -> com.zgcar.com.account.ca:
    com.zgcar.com.account.ActivityQrCode this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.account.ActivityQrCode$2 -> com.zgcar.com.account.cb:
    com.zgcar.com.account.ActivityQrCode this$0 -> a
    java.lang.String val$msgTitle -> b
    java.lang.String val$msgText -> c
    com.zgcar.com.entity.ShareItem val$share -> d
    void run() -> run
com.zgcar.com.account.ActivitySafetyArea -> com.zgcar.com.account.ActivitySafetyArea:
    android.widget.ListView lisview -> a
    com.zgcar.com.location.adapter.AdapterSafetyArea adapter -> b
    java.util.List list -> c
    com.zgcar.com.main.MyApplication app -> d
    int romveoposition -> e
    int id -> f
    java.lang.String name -> g
    boolean isDelete -> h
    android.app.Dialog dialog -> i
    android.os.Handler handler -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void init() -> a
    void setAdapter() -> b
    void dialog() -> c
    void onClick(android.view.View) -> onClick
    void getSafetyAreaInfoRequest() -> d
    java.lang.String safetyAreaRequestJson(java.lang.String,int,java.lang.String) -> a
    void delFenceRequest() -> e
    void access$0(com.zgcar.com.account.ActivitySafetyArea) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivitySafetyArea) -> b
    java.util.List access$2(com.zgcar.com.account.ActivitySafetyArea) -> c
    int access$3(com.zgcar.com.account.ActivitySafetyArea) -> d
    com.zgcar.com.location.adapter.AdapterSafetyArea access$4(com.zgcar.com.account.ActivitySafetyArea) -> e
    boolean access$5(com.zgcar.com.account.ActivitySafetyArea) -> f
    void access$6(com.zgcar.com.account.ActivitySafetyArea,boolean) -> a
    void access$7(com.zgcar.com.account.ActivitySafetyArea,int) -> a
    void access$8(com.zgcar.com.account.ActivitySafetyArea,java.lang.String) -> a
    void access$9(com.zgcar.com.account.ActivitySafetyArea,int) -> b
    void access$10(com.zgcar.com.account.ActivitySafetyArea) -> g
    void access$11(com.zgcar.com.account.ActivitySafetyArea) -> h
    java.lang.String access$12(com.zgcar.com.account.ActivitySafetyArea,java.lang.String,int,java.lang.String) -> a
    void access$13(com.zgcar.com.account.ActivitySafetyArea,java.util.List) -> a
    android.os.Handler access$14(com.zgcar.com.account.ActivitySafetyArea) -> i
    int access$15(com.zgcar.com.account.ActivitySafetyArea) -> j
    java.lang.String access$16(com.zgcar.com.account.ActivitySafetyArea) -> k
com.zgcar.com.account.ActivitySafetyArea$1 -> com.zgcar.com.account.cc:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivitySafetyArea$2 -> com.zgcar.com.account.cd:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivitySafetyArea$3 -> com.zgcar.com.account.ce:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.zgcar.com.account.ActivitySafetyArea$4 -> com.zgcar.com.account.cf:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.zgcar.com.account.ActivitySafetyArea$5 -> com.zgcar.com.account.cg:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    android.app.AlertDialog val$alert -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyArea$6 -> com.zgcar.com.account.ch:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    android.app.AlertDialog val$alert -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyArea$7 -> com.zgcar.com.account.ci:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySafetyArea$8 -> com.zgcar.com.account.cj:
    com.zgcar.com.account.ActivitySafetyArea this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySafetyAreaEdit1 -> com.zgcar.com.account.ActivitySafetyAreaEdit1:
    com.amap.api.maps.MapView mMapView -> a
    com.amap.api.maps.AMap mAMap -> b
    android.widget.Button save -> c
    android.widget.ImageButton search -> d
    android.widget.TextView titleName -> e
    android.widget.TextView addressDesc -> f
    android.widget.EditText nameEt -> g
    android.app.Dialog dialog -> h
    com.amap.api.maps.model.LatLng tempLatLng -> i
    com.amap.api.maps.model.Circle mCircle -> j
    int radius -> k
    android.view.View view4 -> l
    com.amap.api.maps.model.BitmapDescriptor markerIcon -> m
    android.app.ProgressDialog progDialog -> n
    com.amap.api.services.geocoder.GeocodeSearch geocoderSearch -> o
    android.widget.SeekBar seekBar -> p
    android.widget.TextView seekBarDesc -> q
    com.zgcar.com.location.Entity.SafetyAreaEntity mSafetyEntity -> r
    boolean isCanEdit -> s
    android.graphics.Bitmap bitmap -> t
    com.zgcar.com.util.CircleImageView iconImage -> u
    boolean isToast -> v
    boolean isAddNew -> w
    android.widget.Button school -> x
    android.widget.Button teacherHome -> y
    android.widget.Button company -> z
    android.widget.Button grandpaHome -> A
    android.widget.Button cramSchool -> B
    android.widget.Button family -> C
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> c
    void setUpMap(android.os.Bundle) -> a
    void onResume() -> onResume
    void initView() -> d
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void showEditTitleDialog() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String getRequestJson(java.lang.String) -> a
    void editSafetyAreaRequest() -> a
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
    void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult,int) -> onGeocodeSearched
    void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult,int) -> onRegeocodeSearched
    void showDialog() -> b
    void getAddress(com.amap.api.services.core.LatLonPoint) -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void drawObject(com.amap.api.maps.model.LatLng) -> a
    boolean access$0(com.zgcar.com.account.ActivitySafetyAreaEdit1) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivitySafetyAreaEdit1) -> b
com.zgcar.com.account.ActivitySafetyAreaEdit1$1 -> com.zgcar.com.account.ck:
    com.zgcar.com.account.ActivitySafetyAreaEdit1 this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySafetyAreaEdit2 -> com.zgcar.com.account.ActivitySafetyAreaEdit2:
    android.webkit.WebView webView -> a
    android.widget.TextView addzonehome -> b
    android.widget.TextView addzoneschool -> c
    android.widget.TextView addzonefirm -> d
    android.widget.TextView addzonegrandpa -> e
    android.widget.TextView addzoneteacher -> f
    android.widget.TextView addzonecramschool -> g
    android.widget.TextView editTitle -> h
    android.widget.EditText areaNameEt -> i
    com.zgcar.com.main.MyApplication app -> j
    int Circle_MAX -> k
    android.widget.SeekBar seekBar -> l
    android.widget.TextView seekbarDesc -> m
    android.app.Dialog dialogCgName -> n
    int tempRadius -> o
    double tempLo -> p
    double tempLa -> q
    android.app.Dialog dialog -> r
    boolean isAddNew -> s
    com.zgcar.com.location.Entity.SafetyAreaEntity zoneSafetyEntity -> t
    java.lang.String jsonStr -> u
    boolean isCanEdit -> v
    android.widget.Button save -> w
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void initWebView() -> c
    void onClick(android.view.View) -> onClick
    void saveSatefyArea() -> d
    void initPopupWindows() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String getAddNewRequestJson(java.lang.String,int) -> a
    void addzoneRequest() -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    java.lang.Object getHtmlObject() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.zgcar.com.main.MyApplication access$0(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> a
    boolean access$1(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> b
    double access$2(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> c
    double access$3(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> d
    int access$4(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> e
    android.webkit.WebView access$5(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> f
    android.app.Dialog access$6(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> g
    android.widget.TextView access$7(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> h
    android.widget.EditText access$8(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> i
    android.widget.TextView access$9(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> j
    android.widget.TextView access$10(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> k
    android.widget.TextView access$11(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> l
    android.widget.TextView access$12(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> m
    android.widget.TextView access$13(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> n
    android.app.Dialog access$14(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> o
    android.widget.TextView access$15(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> p
    java.lang.String access$16(com.zgcar.com.account.ActivitySafetyAreaEdit2) -> q
com.zgcar.com.account.ActivitySafetyAreaEdit2$1 -> com.zgcar.com.account.cl:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.account.ActivitySafetyAreaEdit2$10 -> com.zgcar.com.account.cm:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySafetyAreaEdit2$11 -> com.zgcar.com.account.cn:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
com.zgcar.com.account.ActivitySafetyAreaEdit2$2 -> com.zgcar.com.account.co:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$3 -> com.zgcar.com.account.cp:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$4 -> com.zgcar.com.account.cq:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$5 -> com.zgcar.com.account.cr:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$6 -> com.zgcar.com.account.cs:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$7 -> com.zgcar.com.account.ct:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$8 -> com.zgcar.com.account.cu:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetyAreaEdit2$9 -> com.zgcar.com.account.cv:
    com.zgcar.com.account.ActivitySafetyAreaEdit2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivitySafetySearch1 -> com.zgcar.com.account.ActivitySafetySearch1:
    android.widget.AutoCompleteTextView searchText -> a
    java.lang.String keyWord -> b
    android.app.ProgressDialog progDialog -> c
    com.amap.api.services.poisearch.PoiResult poiResult -> d
    int currentPage -> e
    com.amap.api.services.poisearch.PoiSearch$Query query -> f
    com.amap.api.services.poisearch.PoiSearch poiSearch -> g
    android.widget.ListView listview -> h
    android.widget.BaseAdapter adapter -> i
    java.util.List poiItems -> j
    android.os.Handler handler -> k
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> c
    void initView() -> d
    void searchButton() -> a
    void showProgressDialog() -> e
    void dissmissProgressDialog() -> f
    void doSearchQuery() -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void onPoiSearched(com.amap.api.services.poisearch.PoiResult,int) -> onPoiSearched
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onPoiItemSearched(com.amap.api.services.core.PoiItem,int) -> onPoiItemSearched
    android.widget.BaseAdapter access$0(com.zgcar.com.account.ActivitySafetySearch1) -> a
    java.util.List access$1(com.zgcar.com.account.ActivitySafetySearch1) -> b
    android.widget.AutoCompleteTextView access$2(com.zgcar.com.account.ActivitySafetySearch1) -> c
com.zgcar.com.account.ActivitySafetySearch1$1 -> com.zgcar.com.account.cw:
    com.zgcar.com.account.ActivitySafetySearch1 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivitySafetySearch1$2 -> com.zgcar.com.account.cx:
    com.zgcar.com.account.ActivitySafetySearch1 this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.zgcar.com.account.ActivitySafetySearch1$3 -> com.zgcar.com.account.cy:
    com.zgcar.com.account.ActivitySafetySearch1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivitySafetySearch1$4 -> com.zgcar.com.account.cz:
    com.zgcar.com.account.ActivitySafetySearch1 this$0 -> a
    void onGetInputtips(java.util.List,int) -> onGetInputtips
com.zgcar.com.account.ActivitySafetySearch2 -> com.zgcar.com.account.ActivitySafetySearch2:
    android.widget.AutoCompleteTextView searchText -> a
    android.widget.ListView listview -> b
    com.zgcar.com.account.ActivitySafetySearch2$MyAdapter adapter -> c
    java.util.List list -> d
    java.lang.String keyWord -> e
    android.webkit.WebView webView -> f
    android.app.Dialog dialog -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void initWebView() -> c
    void searchButton() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    java.lang.Object getHtmlObject() -> d
    java.util.List access$0(com.zgcar.com.account.ActivitySafetySearch2) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivitySafetySearch2) -> b
com.zgcar.com.account.ActivitySafetySearch2$1 -> com.zgcar.com.account.da:
    com.zgcar.com.account.ActivitySafetySearch2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.account.ActivitySafetySearch2$2 -> com.zgcar.com.account.db:
    com.zgcar.com.account.ActivitySafetySearch2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.account.ActivitySafetySearch2$3 -> com.zgcar.com.account.dc:
    com.zgcar.com.account.ActivitySafetySearch2 this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySafetySearch2$4 -> com.zgcar.com.account.dd:
    com.zgcar.com.account.ActivitySafetySearch2 this$0 -> a
com.zgcar.com.account.ActivitySafetySearch2$MyAdapter -> com.zgcar.com.account.de:
    android.content.Context context -> b
    com.zgcar.com.account.ActivitySafetySearch2 this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.zgcar.com.account.ActivitySafetySearch2$ViewHolder -> com.zgcar.com.account.df:
    android.widget.TextView tv -> a
    void access$1(com.zgcar.com.account.ActivitySafetySearch2$ViewHolder,android.widget.TextView) -> a
    android.widget.TextView access$2(com.zgcar.com.account.ActivitySafetySearch2$ViewHolder) -> a
com.zgcar.com.account.ActivitySelectAdmin -> com.zgcar.com.account.ActivitySelectAdmin:
    android.widget.ListView listView -> a
    android.app.Dialog dialog -> b
    android.widget.Button finish -> c
    com.zgcar.com.account.adapter.AdapterSelectAdmin adapter -> d
    java.util.List familyList -> e
    boolean isLeaveFimily -> f
    com.zgcar.com.main.MyApplication app -> g
    int myPosition -> h
    android.os.Handler handler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void getFimilyMembersInfos() -> b
    void initView() -> c
    int getMyselfPosition() -> d
    void onClick(android.view.View) -> onClick
    java.lang.String getRequestJsonStr() -> e
    void showProgressDialog() -> f
    void dismissDialog() -> g
    void sendChangeAdminRequest() -> h
    void sendLeaveAloneRequest() -> i
    java.lang.String getLeaveAloneJsonStr() -> j
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showBackDialog() -> k
    void access$0(com.zgcar.com.account.ActivitySelectAdmin) -> a
    com.zgcar.com.main.MyApplication access$1(com.zgcar.com.account.ActivitySelectAdmin) -> b
    void access$2(com.zgcar.com.account.ActivitySelectAdmin,java.util.List) -> a
    java.util.List access$3(com.zgcar.com.account.ActivitySelectAdmin) -> c
    android.os.Handler access$4(com.zgcar.com.account.ActivitySelectAdmin) -> d
    java.lang.String access$5(com.zgcar.com.account.ActivitySelectAdmin) -> e
    boolean access$6(com.zgcar.com.account.ActivitySelectAdmin) -> f
    void access$7(com.zgcar.com.account.ActivitySelectAdmin) -> g
    com.zgcar.com.account.adapter.AdapterSelectAdmin access$8(com.zgcar.com.account.ActivitySelectAdmin) -> h
    int access$9(com.zgcar.com.account.ActivitySelectAdmin) -> i
    void access$10(com.zgcar.com.account.ActivitySelectAdmin) -> j
com.zgcar.com.account.ActivitySelectAdmin$1 -> com.zgcar.com.account.dg:
    com.zgcar.com.account.ActivitySelectAdmin this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivitySelectAdmin$2 -> com.zgcar.com.account.dh:
    com.zgcar.com.account.ActivitySelectAdmin this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySelectAdmin$3 -> com.zgcar.com.account.di:
    com.zgcar.com.account.ActivitySelectAdmin this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySetClockTime -> com.zgcar.com.account.ActivitySetClockTime:
    android.widget.CheckBox repeatOrNo -> a
    android.widget.CheckBox sunday -> b
    android.widget.CheckBox monday -> c
    android.widget.CheckBox tuesday -> d
    android.widget.CheckBox wednesday -> e
    android.widget.CheckBox thursday -> f
    android.widget.CheckBox friday -> g
    android.widget.CheckBox saturday -> h
    java.util.List boxList -> i
    java.lang.String[] days -> j
    java.lang.String week -> k
    java.lang.String weekDesc -> l
    java.lang.String oldWeek -> m
    android.app.Dialog dialog -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void getBack() -> b
    void initView() -> c
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void getSelectedItem() -> d
com.zgcar.com.account.ActivitySetGoal -> com.zgcar.com.account.ActivitySetGoal:
    android.widget.EditText content -> a
    android.app.Dialog dialog -> b
    android.widget.TextView setContentTv -> c
    java.lang.String rewardContent -> d
    com.zgcar.com.wheelview.WheelView selectNum -> e
    android.widget.TextView flowerNum -> f
    int numGoal -> g
    com.zgcar.com.history.entity.RedFlowerNumInfos info -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void initView() -> b
    void setNumDialog() -> c
    void setContentDialog() -> d
    void showProgressDialog() -> e
    void sendSaveRequest() -> f
    void dismissDialog() -> g
    void requestIsSucceed() -> h
    java.lang.String getRequestJson() -> i
    void onClick(android.view.View) -> onClick
    void getBack() -> j
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0(com.zgcar.com.account.ActivitySetGoal) -> a
    void access$1(com.zgcar.com.account.ActivitySetGoal) -> b
    void access$2(com.zgcar.com.account.ActivitySetGoal) -> c
com.zgcar.com.account.ActivitySetGoal$1 -> com.zgcar.com.account.dj:
    com.zgcar.com.account.ActivitySetGoal this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySetTimeZone -> com.zgcar.com.account.ActivitySetTimeZone:
    java.lang.String timeZoneStr -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initWheelView() -> a
    void init() -> b
    void onClick(android.view.View) -> onClick
    void setZone() -> c
    void access$0(com.zgcar.com.account.ActivitySetTimeZone,java.lang.String) -> a
com.zgcar.com.account.ActivitySetTimeZone$1 -> com.zgcar.com.account.dk:
    com.zgcar.com.account.ActivitySetTimeZone this$0 -> a
    java.lang.String[] val$str1 -> b
    java.lang.String[] val$str -> c
    com.zgcar.com.wheelview.WheelView val$minWheelView -> d
    void onChanged(com.zgcar.com.wheelview.WheelView,int,int) -> a
com.zgcar.com.account.ActivitySetTimeZone$2 -> com.zgcar.com.account.dl:
    com.zgcar.com.account.ActivitySetTimeZone this$0 -> a
    java.lang.String[] val$str1 -> b
    com.zgcar.com.wheelview.WheelView val$hourWheelView -> c
    java.lang.String[] val$str -> d
    void onChanged(com.zgcar.com.wheelview.WheelView,int,int) -> a
com.zgcar.com.account.ActivitySetWatchAPN -> com.zgcar.com.account.ActivitySetWatchAPN:
    android.widget.EditText apnEt -> a
    android.widget.EditText nameEt -> b
    android.widget.EditText pswEt -> c
    android.content.SharedPreferences sf -> d
    com.zgcar.com.main.MyApplication app -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void onClick(android.view.View) -> onClick
    void setApn() -> b
com.zgcar.com.account.ActivitySmallRedFlowers -> com.zgcar.com.account.ActivitySmallRedFlowers:
    android.widget.LinearLayout setGoal -> a
    android.widget.ImageView animImage -> b
    android.widget.Button addFlower -> c
    com.zgcar.com.main.MyApplication app -> d
    int flagInt -> e
    android.widget.TextView quantityTv -> f
    android.widget.TextView toteTv -> g
    android.widget.PopupWindow popupWindow -> h
    android.app.Dialog dialog -> i
    android.graphics.Bitmap redFlower -> j
    android.graphics.BitmapFactory$Options options -> k
    float[] x -> l
    float[] y -> m
    java.util.List mListData -> n
    android.view.SurfaceView surface -> o
    android.view.SurfaceHolder surfaceHolder -> p
    boolean isRun -> q
    boolean surfaceIsCreated -> r
    boolean isStart -> s
    com.zgcar.com.history.entity.RedFlowerNumInfos infos -> t
    java.lang.String hasRewardFlowers -> u
    android.os.Handler handler -> v
    java.lang.Runnable timer -> w
    java.lang.Runnable runnable -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initView() -> a
    void addFlowerAnim() -> b
    void initialize() -> c
    void getAnimImage() -> d
    void onClick(android.view.View) -> onClick
    void shareMsg(java.lang.String,java.lang.String,com.zgcar.com.entity.ShareItem) -> a
    void showProgressDialog() -> e
    void dismissDialog() -> f
    void dismissPopupWindow() -> g
    void addFlowerRequest() -> h
    java.lang.String addFlowerRequestJson() -> i
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void popWindow() -> j
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void getFlowerInfos() -> k
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void access$0(com.zgcar.com.account.ActivitySmallRedFlowers) -> a
    android.os.Handler access$1(com.zgcar.com.account.ActivitySmallRedFlowers) -> b
    java.lang.Runnable access$2(com.zgcar.com.account.ActivitySmallRedFlowers) -> c
    void access$3(com.zgcar.com.account.ActivitySmallRedFlowers) -> d
    java.lang.String access$4(com.zgcar.com.account.ActivitySmallRedFlowers) -> e
    com.zgcar.com.history.entity.RedFlowerNumInfos access$5(com.zgcar.com.account.ActivitySmallRedFlowers) -> f
    android.widget.TextView access$6(com.zgcar.com.account.ActivitySmallRedFlowers) -> g
    void access$7(com.zgcar.com.account.ActivitySmallRedFlowers) -> h
    void access$8(com.zgcar.com.account.ActivitySmallRedFlowers) -> i
    void access$9(com.zgcar.com.account.ActivitySmallRedFlowers,boolean) -> a
    boolean access$10(com.zgcar.com.account.ActivitySmallRedFlowers) -> j
    int access$11(com.zgcar.com.account.ActivitySmallRedFlowers) -> k
    void access$12(com.zgcar.com.account.ActivitySmallRedFlowers,int) -> a
    boolean access$13(com.zgcar.com.account.ActivitySmallRedFlowers) -> l
    boolean access$14(com.zgcar.com.account.ActivitySmallRedFlowers) -> m
    android.view.SurfaceHolder access$15(com.zgcar.com.account.ActivitySmallRedFlowers) -> n
    android.graphics.Bitmap access$16(com.zgcar.com.account.ActivitySmallRedFlowers) -> o
    float[] access$17(com.zgcar.com.account.ActivitySmallRedFlowers) -> p
    float[] access$18(com.zgcar.com.account.ActivitySmallRedFlowers) -> q
    java.lang.String access$19(com.zgcar.com.account.ActivitySmallRedFlowers) -> r
    com.zgcar.com.main.MyApplication access$20(com.zgcar.com.account.ActivitySmallRedFlowers) -> s
    void access$21(com.zgcar.com.account.ActivitySmallRedFlowers,com.zgcar.com.history.entity.RedFlowerNumInfos) -> a
com.zgcar.com.account.ActivitySmallRedFlowers$1 -> com.zgcar.com.account.dm:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivitySmallRedFlowers$2 -> com.zgcar.com.account.dn:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySmallRedFlowers$3 -> com.zgcar.com.account.do:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySmallRedFlowers$4 -> com.zgcar.com.account.dp:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    java.lang.String val$msgTitle -> b
    java.lang.String val$msgText -> c
    com.zgcar.com.entity.ShareItem val$share -> d
    void run() -> run
com.zgcar.com.account.ActivitySmallRedFlowers$5 -> com.zgcar.com.account.dq:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivitySmallRedFlowers$6 -> com.zgcar.com.account.dr:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.account.ActivitySmallRedFlowers$7 -> com.zgcar.com.account.ds:
    com.zgcar.com.account.ActivitySmallRedFlowers this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityStudyModel -> com.zgcar.com.account.ActivityStudyModel:
    com.zgcar.com.main.MyApplication app -> a
    android.app.Dialog dialog -> b
    java.util.List studyModelListInfos -> c
    android.widget.TextView classBeginAmDesc -> d
    android.widget.TextView classBeginPmDesc -> e
    android.widget.TextView classOverAmDesc -> f
    android.widget.TextView classOverPmDesc -> g
    android.widget.TextView classBeginNightDesc -> h
    android.widget.TextView classOverNightDesc -> i
    android.widget.TextView repeatDateDesc -> j
    android.widget.TextView studyModelState -> k
    android.widget.TextView cacheTextview -> l
    android.widget.Button setStudentModel -> m
    java.lang.String weeks -> n
    android.widget.LinearLayout btLayout -> o
    boolean isOpen -> p
    android.os.Handler handle -> q
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void initView() -> c
    void setStudyModelState() -> d
    void setRepeatDays() -> e
    void sendStudyModelInfosRequest() -> f
    void onClick(android.view.View) -> onClick
    void showSelectCustomDialog() -> g
    void showSetRepeatDialog() -> h
    void saveDataRequest(int) -> a
    java.lang.String getJson() -> i
    void showSelectTimeDialog(java.lang.String) -> a
    void initWheelView(java.lang.String,android.view.View) -> a
    void showDialog() -> j
    void dismissDialog() -> k
    android.app.Dialog getDialog() -> a
    void access$0(com.zgcar.com.account.ActivityStudyModel) -> a
    android.widget.LinearLayout access$1(com.zgcar.com.account.ActivityStudyModel) -> b
    android.widget.Button access$2(com.zgcar.com.account.ActivityStudyModel) -> c
    void access$3(com.zgcar.com.account.ActivityStudyModel) -> d
    com.zgcar.com.main.MyApplication access$4(com.zgcar.com.account.ActivityStudyModel) -> e
    void access$5(com.zgcar.com.account.ActivityStudyModel,java.util.List) -> a
    void access$6(com.zgcar.com.account.ActivityStudyModel) -> f
    java.util.List access$7(com.zgcar.com.account.ActivityStudyModel) -> g
    android.os.Handler access$8(com.zgcar.com.account.ActivityStudyModel) -> h
    void access$9(com.zgcar.com.account.ActivityStudyModel,java.lang.String) -> a
    java.lang.String access$10(com.zgcar.com.account.ActivityStudyModel) -> i
    void access$11(com.zgcar.com.account.ActivityStudyModel) -> j
    java.lang.String access$12(com.zgcar.com.account.ActivityStudyModel) -> k
    boolean access$13(com.zgcar.com.account.ActivityStudyModel) -> l
    void access$14(com.zgcar.com.account.ActivityStudyModel,boolean) -> a
    android.widget.TextView access$15(com.zgcar.com.account.ActivityStudyModel) -> m
com.zgcar.com.account.ActivityStudyModel$1 -> com.zgcar.com.account.dt:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ActivityStudyModel$2 -> com.zgcar.com.account.du:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityStudyModel$3 -> com.zgcar.com.account.dv:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    java.util.List val$list -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityStudyModel$4 -> com.zgcar.com.account.dw:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    int val$requestType -> b
    void run() -> run
com.zgcar.com.account.ActivityStudyModel$5 -> com.zgcar.com.account.dx:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityStudyModel$6 -> com.zgcar.com.account.dy:
    com.zgcar.com.account.ActivityStudyModel this$0 -> a
    java.lang.String[] val$hours -> b
    com.zgcar.com.wheelview.WheelView val$wView1 -> c
    java.lang.String[] val$mins -> d
    com.zgcar.com.wheelview.WheelView val$wView3 -> e
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityStudyModelAddDays -> com.zgcar.com.account.ActivityStudyModelAddDays:
    android.widget.CheckBox repeatOrNo -> a
    android.widget.CheckBox sunday -> b
    android.widget.CheckBox monday -> c
    android.widget.CheckBox tuesday -> d
    android.widget.CheckBox wednesday -> e
    android.widget.CheckBox thursday -> f
    android.widget.CheckBox friday -> g
    android.widget.CheckBox saturday -> h
    java.util.List boxList -> i
    java.lang.String[] days -> j
    java.lang.String week -> k
    java.lang.String weekDesc -> l
    java.lang.String oldWeek -> m
    android.app.Dialog dialog -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void initView() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void backAction() -> c
    void getSelectedItem() -> d
com.zgcar.com.account.ActivitySystemSet -> com.zgcar.com.account.ActivitySystemSet:
    com.zgcar.com.main.MyApplication app -> a
    android.app.Dialog dialog -> b
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showQuitViewDialog() -> b
    void dismissDialog() -> c
com.zgcar.com.account.ActivityWearingHabits -> com.zgcar.com.account.ActivityWearingHabits:
    android.widget.CheckBox leftHand -> a
    android.widget.CheckBox rightHand -> b
    android.widget.ImageButton back -> c
    int newHand -> d
    android.app.Dialog dialog -> e
    com.zgcar.com.account.model.TerminalInfos info -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean isSelected() -> b
    void remindMessage() -> c
    void clickLisner() -> d
    int access$0(com.zgcar.com.account.ActivityWearingHabits) -> a
    android.app.Dialog access$1(com.zgcar.com.account.ActivityWearingHabits) -> b
    void access$2(com.zgcar.com.account.ActivityWearingHabits) -> c
    android.widget.CheckBox access$3(com.zgcar.com.account.ActivityWearingHabits) -> d
    void access$4(com.zgcar.com.account.ActivityWearingHabits,int) -> a
    android.widget.CheckBox access$5(com.zgcar.com.account.ActivityWearingHabits) -> e
com.zgcar.com.account.ActivityWearingHabits$1 -> com.zgcar.com.account.dz:
    com.zgcar.com.account.ActivityWearingHabits this$0 -> a
    void run() -> run
com.zgcar.com.account.ActivityWearingHabits$2 -> com.zgcar.com.account.ea:
    com.zgcar.com.account.ActivityWearingHabits this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.ActivityWearingHabits$3 -> com.zgcar.com.account.eb:
    com.zgcar.com.account.ActivityWearingHabits this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.ActivityWearingHabits$4 -> com.zgcar.com.account.ec:
    com.zgcar.com.account.ActivityWearingHabits this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.ServiceBlueTooth -> com.zgcar.com.account.ServiceBlueTooth:
    com.zgcar.com.main.MyApplication app -> a
    android.bluetooth.BluetoothDevice device -> b
    android.bluetooth.BluetoothGatt bluetoothGatt -> c
    android.view.WindowManager windowManager -> d
    android.view.View mView -> e
    android.media.MediaPlayer mediaPlayer -> f
    android.content.res.AssetFileDescriptor assetFileDescriptor -> g
    boolean isAlarm -> h
    boolean isReconnect -> i
    android.os.Handler handler -> j
    android.bluetooth.BluetoothGattCallback bluetoothGattCallback -> k
    java.lang.Runnable startAlarm -> l
    java.lang.Runnable reconnect -> m
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void startSos() -> a
    android.media.MediaPlayer getMedia() -> b
    void stopSos() -> c
    void setWindowDialog() -> d
    void closeWindowSos() -> e
    void access$0(com.zgcar.com.account.ServiceBlueTooth) -> a
    void access$1(com.zgcar.com.account.ServiceBlueTooth) -> b
    void access$2(com.zgcar.com.account.ServiceBlueTooth) -> c
    com.zgcar.com.main.MyApplication access$3(com.zgcar.com.account.ServiceBlueTooth) -> d
    android.os.Handler access$4(com.zgcar.com.account.ServiceBlueTooth) -> e
    java.lang.Runnable access$5(com.zgcar.com.account.ServiceBlueTooth) -> f
    void access$6(com.zgcar.com.account.ServiceBlueTooth,boolean) -> a
    boolean access$7(com.zgcar.com.account.ServiceBlueTooth) -> g
    boolean access$8(com.zgcar.com.account.ServiceBlueTooth) -> h
    void access$9(com.zgcar.com.account.ServiceBlueTooth,boolean) -> b
    android.bluetooth.BluetoothGatt access$10(com.zgcar.com.account.ServiceBlueTooth) -> i
    android.bluetooth.BluetoothDevice access$11(com.zgcar.com.account.ServiceBlueTooth) -> j
    android.bluetooth.BluetoothGattCallback access$12(com.zgcar.com.account.ServiceBlueTooth) -> k
    void access$13(com.zgcar.com.account.ServiceBlueTooth,android.bluetooth.BluetoothGatt) -> a
    android.media.MediaPlayer access$14(com.zgcar.com.account.ServiceBlueTooth) -> l
com.zgcar.com.account.ServiceBlueTooth$1 -> com.zgcar.com.account.ed:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.account.ServiceBlueTooth$2 -> com.zgcar.com.account.ee:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int) -> onConnectionStateChange
com.zgcar.com.account.ServiceBlueTooth$3 -> com.zgcar.com.account.ef:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ServiceBlueTooth$4 -> com.zgcar.com.account.eg:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void run() -> run
com.zgcar.com.account.ServiceBlueTooth$5 -> com.zgcar.com.account.eh:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.zgcar.com.account.ServiceBlueTooth$6 -> com.zgcar.com.account.ei:
    com.zgcar.com.account.ServiceBlueTooth this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.account.adapter.AdapterBlueTooth -> com.zgcar.com.account.a.a:
    android.content.Context context -> a
    java.util.ArrayList devices -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void removeAllView() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.account.adapter.AdapterBlueTooth$Hold -> com.zgcar.com.account.a.b:
    android.widget.TextView text1 -> a
    android.widget.TextView text2 -> b
    void access$1(com.zgcar.com.account.adapter.AdapterBlueTooth$Hold,android.widget.TextView) -> a
    void access$2(com.zgcar.com.account.adapter.AdapterBlueTooth$Hold,android.widget.TextView) -> b
    android.widget.TextView access$3(com.zgcar.com.account.adapter.AdapterBlueTooth$Hold) -> a
    android.widget.TextView access$4(com.zgcar.com.account.adapter.AdapterBlueTooth$Hold) -> b
com.zgcar.com.account.adapter.AdapterCheckPhoneMessage -> com.zgcar.com.account.a.c:
    android.content.Context context -> a
    java.util.ArrayList list -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder -> com.zgcar.com.account.a.d:
    android.widget.TextView tv1 -> a
    android.widget.TextView tv2 -> b
    android.widget.TextView time -> c
    void access$1(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder,android.widget.TextView) -> a
    void access$2(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder,android.widget.TextView) -> b
    void access$3(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder,android.widget.TextView) -> c
    android.widget.TextView access$4(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder) -> a
    android.widget.TextView access$5(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder) -> b
    android.widget.TextView access$6(com.zgcar.com.account.adapter.AdapterCheckPhoneMessage$ViewHolder) -> c
com.zgcar.com.account.adapter.AdapterFamilyMembers -> com.zgcar.com.account.a.e:
    java.util.List familyList -> a
    java.util.List terminalListInfos -> b
    android.content.Context context -> c
    java.util.List child -> d
    int position -> e
    android.graphics.Bitmap bitmapTemp -> f
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder -> com.zgcar.com.account.a.f:
    android.widget.TextView tv -> a
    android.widget.TextView descTv -> b
    android.widget.TextView rlationDesc -> c
    com.zgcar.com.util.CircleImageView icon -> d
    void access$1(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder,android.widget.TextView) -> a
    void access$2(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder,android.widget.TextView) -> b
    void access$3(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder,android.widget.TextView) -> c
    void access$4(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    android.widget.TextView access$5(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder) -> a
    com.zgcar.com.util.CircleImageView access$6(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder) -> b
    android.widget.TextView access$7(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder) -> c
    android.widget.TextView access$8(com.zgcar.com.account.adapter.AdapterFamilyMembers$ViewHolder) -> d
com.zgcar.com.account.adapter.AdapterGuysMain -> com.zgcar.com.account.a.g:
    java.util.List guysInfosListInfos -> a
    android.content.Context context -> b
    android.graphics.Bitmap bitmap -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder -> com.zgcar.com.account.a.h:
    android.widget.TextView sex -> a
    android.widget.TextView name -> b
    com.zgcar.com.util.CircleImageView icon -> c
    void access$1(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    void access$2(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder,android.widget.TextView) -> a
    void access$3(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder,android.widget.TextView) -> b
    com.zgcar.com.util.CircleImageView access$4(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder) -> a
    android.widget.TextView access$5(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder) -> b
    android.widget.TextView access$6(com.zgcar.com.account.adapter.AdapterGuysMain$ViewHolder) -> c
com.zgcar.com.account.adapter.AdapterMyAlarmClock -> com.zgcar.com.account.a.i:
    java.util.List list -> a
    android.content.Context context -> b
    java.lang.String imei -> c
    java.lang.String jsonStr -> d
    android.widget.CheckBox box -> e
    android.widget.TextView time -> f
    android.widget.TextView days -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void sendRequesrt(int,boolean) -> a
    void getReequeestJsonStr(int) -> a
    void access$0(com.zgcar.com.account.adapter.AdapterMyAlarmClock,int) -> a
    void access$1(com.zgcar.com.account.adapter.AdapterMyAlarmClock,int,boolean) -> a
    java.lang.String access$2(com.zgcar.com.account.adapter.AdapterMyAlarmClock) -> a
    java.util.List access$3(com.zgcar.com.account.adapter.AdapterMyAlarmClock) -> b
    android.content.Context access$4(com.zgcar.com.account.adapter.AdapterMyAlarmClock) -> c
com.zgcar.com.account.adapter.AdapterMyAlarmClock$1 -> com.zgcar.com.account.a.j:
    com.zgcar.com.account.adapter.AdapterMyAlarmClock this$0 -> a
    int val$position -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.adapter.AdapterMyAlarmClock$2 -> com.zgcar.com.account.a.k:
    com.zgcar.com.account.adapter.AdapterMyAlarmClock this$0 -> a
    boolean val$isChecked -> b
    int val$position -> c
    void run() -> run
com.zgcar.com.account.adapter.AdapterSelectAdmin -> com.zgcar.com.account.a.l:
    android.content.Context context -> a
    java.util.List familyList -> b
    int a -> c
    android.graphics.Bitmap bitmap -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getA() -> a
    void access$0(com.zgcar.com.account.adapter.AdapterSelectAdmin,int) -> a
com.zgcar.com.account.adapter.AdapterSelectAdmin$1 -> com.zgcar.com.account.a.m:
    com.zgcar.com.account.adapter.AdapterSelectAdmin this$0 -> a
    com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder val$holder -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder -> com.zgcar.com.account.a.n:
    com.zgcar.com.util.CircleImageView icon -> a
    android.widget.TextView nickName -> b
    android.widget.TextView uName -> c
    android.widget.TextView desc -> d
    android.widget.CheckBox box1 -> e
    int b -> f
    void access$1(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    void access$2(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,android.widget.TextView) -> a
    void access$3(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,android.widget.TextView) -> b
    void access$4(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,android.widget.TextView) -> c
    void access$5(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,android.widget.CheckBox) -> a
    void access$6(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder,int) -> a
    com.zgcar.com.util.CircleImageView access$7(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> a
    android.widget.TextView access$8(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> b
    android.widget.TextView access$9(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> c
    android.widget.TextView access$10(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> d
    int access$11(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> e
    android.widget.CheckBox access$12(com.zgcar.com.account.adapter.AdapterSelectAdmin$ViewHolder) -> f
com.zgcar.com.account.model.FamilyParentInfos -> com.zgcar.com.account.b.a:
    java.lang.String imei -> a
    java.lang.String user_name -> b
    java.lang.String u_name -> c
    java.lang.String nick_name -> d
    boolean isMysel -> e
    boolean sos -> f
    boolean admin -> g
    int image_flag -> h
    java.lang.String image_link -> i
    java.lang.String localPath -> j
    java.lang.String getLocalPath() -> a
    void setLocalPath(java.lang.String) -> a
    boolean isMysel() -> b
    void setMysel(boolean) -> a
    void setImei(java.lang.String) -> b
    java.lang.String getUser_name() -> c
    void setUser_name(java.lang.String) -> c
    java.lang.String getU_name() -> d
    void setU_name(java.lang.String) -> d
    java.lang.String getNick_name() -> e
    void setNick_name(java.lang.String) -> e
    boolean getSos() -> f
    void setSos(boolean) -> b
    boolean isAdmin() -> g
    void setAdmin(boolean) -> c
    int getImage_flag() -> h
    void setImage_flag(int) -> a
    void setImage_link(java.lang.String) -> f
    java.lang.String toString() -> toString
com.zgcar.com.account.model.GuysInfos -> com.zgcar.com.account.b.b:
    java.lang.String mainImei -> a
    java.lang.String name -> b
    int sex -> c
    int age -> d
    java.lang.String imei -> e
    int imageFlag -> f
    java.lang.String imageLink -> g
    java.lang.String localPath -> h
    java.lang.String getLocalPath() -> a
    void setLocalPath(java.lang.String) -> a
    int getAge() -> b
    void setAge(int) -> a
    java.lang.String getMainImei() -> c
    void setMainImei(java.lang.String) -> b
    java.lang.String getName() -> d
    void setName(java.lang.String) -> c
    int getSex() -> e
    void setSex(int) -> b
    java.lang.String getImei() -> f
    void setImei(java.lang.String) -> d
    void setImageFlag(int) -> c
    void setImageLink(java.lang.String) -> e
    java.lang.String toString() -> toString
com.zgcar.com.account.model.ListInfosAccount -> com.zgcar.com.account.b.c:
    java.util.List familyList -> a
    java.util.List getFamilyList() -> a
    void setFamilyList(java.util.List) -> a
com.zgcar.com.account.model.MessageInfos -> com.zgcar.com.account.b.d:
    java.lang.String message -> a
    java.lang.String time -> b
    int flag -> c
    int id -> d
    java.lang.String getTime() -> a
    void setTime(java.lang.String) -> a
    java.lang.String getMessage() -> b
    void setMessage(java.lang.String) -> b
    int getFlag() -> c
    void setFlag(int) -> a
    void setId(int) -> b
    java.lang.String toString() -> toString
com.zgcar.com.account.model.MyAlarmInfos -> com.zgcar.com.account.b.e:
    java.lang.String imei -> a
    int alarm_sn -> b
    boolean isRepeat -> c
    java.lang.String time -> d
    java.lang.String week -> e
    java.lang.String weekDesc -> f
    int on_off -> g
    int alarm_ring -> h
    int alarmring_flag -> i
    java.lang.String alarmring_link -> j
    java.lang.String getImei() -> a
    void setImei(java.lang.String) -> a
    java.lang.String getWeek() -> b
    void setWeek(java.lang.String) -> b
    java.lang.String getWeekDesc() -> c
    void setWeekDesc(java.lang.String) -> c
    int getAlarm_sn() -> d
    void setAlarm_sn(int) -> a
    java.lang.String getTime() -> e
    boolean isRepeat() -> f
    void setRepeat(boolean) -> a
    void setTime(java.lang.String) -> d
    int getOn_off() -> g
    void setOn_off(int) -> b
    int getAlarm_ring() -> h
    void setAlarm_ring(int) -> c
    int getAlarmring_flag() -> i
    void setAlarmring_flag(int) -> d
    void setAlarmring_link(java.lang.String) -> e
    java.lang.String toString() -> toString
com.zgcar.com.account.model.StudyModelInfos -> com.zgcar.com.account.b.f:
    int work_sn -> a
    java.lang.String start_time -> b
    java.lang.String stop_time -> c
    java.lang.String week -> d
    java.lang.String weekDesc -> e
    int on_off -> f
    boolean isOpen -> g
    boolean isRepeat -> h
    void setWeekDesc(java.lang.String) -> a
    void setOpen(boolean) -> a
    void setRepeat(boolean) -> b
    int getWork_sn() -> a
    void setWork_sn(int) -> a
    java.lang.String getStart_time() -> b
    void setStart_time(java.lang.String) -> b
    java.lang.String getStop_time() -> c
    void setStop_time(java.lang.String) -> c
    java.lang.String getWeek() -> d
    void setWeek(java.lang.String) -> d
    int getOn_off() -> e
    void setOn_off(int) -> b
    java.lang.String toString() -> toString
com.zgcar.com.account.model.TerminalInfos -> com.zgcar.com.account.b.g:
    java.lang.String imei -> a
    int volume -> b
    int brightness -> c
    int local_mode -> d
    int wear -> e
    int temperature_alarm -> f
    int mute -> g
    int bodyAnswer -> h
    java.lang.String terminal_ver -> i
    java.lang.String joinTime -> j
    void setVolume(int) -> a
    void setBrightness(int) -> b
    int getLocal_mode() -> a
    void setLocal_mode(int) -> c
    int getWear() -> b
    void setWear(int) -> d
    int getTemperature_alarm() -> c
    void setTemperature_alarm(int) -> e
    int getMute() -> d
    void setMute(int) -> f
    int getBodyAnswer() -> e
    void setBodyAnswer(int) -> g
    java.lang.String getTerminal_ver() -> f
    void setTerminal_ver(java.lang.String) -> a
    java.lang.String getJoinTime() -> g
    void setJoinTime(java.lang.String) -> b
    void setImei(java.lang.String) -> c
    java.lang.String toString() -> toString
com.zgcar.com.db.DbHelper -> com.zgcar.com.a.a:
    java.lang.String tableName1 -> a
    java.lang.String tableName2 -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.zgcar.com.db.DbManager -> com.zgcar.com.a.b:
    com.zgcar.com.db.DbHelper dbHelper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    java.lang.String tableName1 -> c
    java.lang.String tableName2 -> d
    java.util.ArrayList query() -> a
    void insert(com.zgcar.com.account.model.MessageInfos) -> a
    void closeDb() -> b
    void deletTable(java.lang.String) -> a
    void deletPhoneTable(java.lang.String) -> b
com.zgcar.com.entity.FinalVariableLibrary -> com.zgcar.com.b.a:
    int ScreenHeight -> a
    int ScreenWidth -> b
    java.lang.String requestURL -> c
    java.lang.String MAP_TYPE -> d
    android.graphics.Bitmap bitmap -> e
    java.lang.String PATHS -> f
com.zgcar.com.entity.ShareItem -> com.zgcar.com.b.b:
    java.lang.String title -> a
    java.lang.String activityName -> b
    java.lang.String packageName -> c
com.zgcar.com.history.ActivitySosMeage1 -> com.zgcar.com.history.ActivitySosMeage1:
    com.amap.api.maps.AMap aMap -> a
    com.amap.api.maps.MapView mapView -> b
    android.widget.TextView titleTV -> c
    android.widget.TextView suggestTv -> d
    android.widget.TextView timeTv -> e
    android.widget.TextView addressTv -> f
    com.zgcar.com.main.MyApplication app -> g
    android.widget.ImageView people -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initAmap() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    com.amap.api.maps.model.LatLng getlalo(com.amap.api.maps.model.LatLng) -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.history.ActivitySosMeage2 -> com.zgcar.com.history.ActivitySosMeage2:
    com.zgcar.com.main.model.NotifyMessageEntity info -> a
    android.webkit.WebView webView -> b
    android.widget.TextView title -> c
    android.widget.TextView suggestionTv -> d
    android.widget.TextView timeTv -> e
    android.widget.TextView addressTv -> f
    android.app.Dialog dialog -> g
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    com.zgcar.com.main.model.NotifyMessageEntity access$0(com.zgcar.com.history.ActivitySosMeage2) -> a
    android.webkit.WebView access$1(com.zgcar.com.history.ActivitySosMeage2) -> b
    android.app.Dialog access$2(com.zgcar.com.history.ActivitySosMeage2) -> c
com.zgcar.com.history.ActivitySosMeage2$1 -> com.zgcar.com.history.a:
    com.zgcar.com.history.ActivitySosMeage2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.history.entity.RedFlowerNumInfos -> com.zgcar.com.history.a.a:
    java.lang.String imei -> a
    int quantity -> b
    int tote -> c
    java.lang.String reward -> d
    void setImei(java.lang.String) -> a
    int getQuantity() -> a
    void setQuantity(int) -> a
    int getTote() -> b
    void setTote(int) -> b
    java.lang.String getReward() -> c
    void setReward(java.lang.String) -> b
    java.lang.String toString() -> toString
com.zgcar.com.history.entity.TreePosition -> com.zgcar.com.history.a.b:
    double systemX -> a
    double systemY -> b
    double systemXx -> c
    double systemYy -> d
    float[] x -> e
    float[] y -> f
    float[] floatX -> g
    float[] floatY -> h
    float[] positionX -> i
    float[] positionY -> j
com.zgcar.com.history.util.FlowerAnimalSet -> com.zgcar.com.history.b.a:
    void startAnim(android.content.Context,android.widget.ImageView,float,float,android.os.Handler) -> a
    void startMoveAnim(android.content.Context,android.widget.ImageView,float,float,android.os.Handler) -> c
    void access$0(android.content.Context,android.widget.ImageView,float,float,android.os.Handler) -> b
com.zgcar.com.history.util.FlowerAnimalSet$1 -> com.zgcar.com.history.b.b:
    android.content.Context val$context -> a
    android.widget.ImageView val$image -> b
    float val$stopX -> c
    float val$stopY -> d
    android.os.Handler val$handler -> e
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.zgcar.com.history.util.FlowerAnimalSet$2 -> com.zgcar.com.history.b.c:
    android.os.Handler val$handler -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.zgcar.com.location.ActivityBindWatchSucceed -> com.zgcar.com.location.ActivityBindWatchSucceed:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
com.zgcar.com.location.ActivityBindWatchSucceed$1 -> com.zgcar.com.location.a:
    com.zgcar.com.location.ActivityBindWatchSucceed this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.location.ActivityBindingImei -> com.zgcar.com.location.ActivityBindingImei:
    android.widget.Button imeibinding_next_imeibt -> a
    android.widget.EditText imeibinding_edit_ed -> b
    java.lang.String imeitext -> c
    android.app.Dialog dialog -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void init() -> a
    void onClick(android.view.View) -> onClick
    boolean imeiIsRepeatBinding() -> b
    void checkImeiRequest() -> c
    void dismissDialog() -> d
    void showProgressDialog() -> e
    java.lang.String getRequestJson() -> f
    java.lang.String access$0(com.zgcar.com.location.ActivityBindingImei) -> a
    void access$1(com.zgcar.com.location.ActivityBindingImei) -> b
    java.lang.String access$2(com.zgcar.com.location.ActivityBindingImei) -> c
com.zgcar.com.location.ActivityBindingImei$1 -> com.zgcar.com.location.b:
    com.zgcar.com.location.ActivityBindingImei this$0 -> a
    void run() -> run
com.zgcar.com.location.ActivityBindingRelationShip -> com.zgcar.com.location.ActivityBindingRelationShip:
    com.zgcar.com.location.adapter.AdapterRelationShip mRelationAdapter -> a
    android.widget.GridView relativeGridView -> b
    java.lang.String[] nameArray -> c
    int[] head -> d
    java.lang.String imei -> e
    android.app.Dialog dialog -> f
    android.widget.EditText content -> g
    boolean isTheFirst -> h
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onDestroy() -> onDestroy
    void setAdapter() -> b
    void bindingThread(java.lang.String) -> a
    java.lang.String getRequestJson(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void showEditNameDialog() -> c
    void showProgressDialog() -> d
    void dismissDialog() -> e
    com.zgcar.com.location.adapter.AdapterRelationShip access$0(com.zgcar.com.location.ActivityBindingRelationShip) -> a
    java.lang.String[] access$1(com.zgcar.com.location.ActivityBindingRelationShip) -> b
    boolean access$2(com.zgcar.com.location.ActivityBindingRelationShip) -> c
    java.lang.String access$3(com.zgcar.com.location.ActivityBindingRelationShip) -> d
    void access$4(com.zgcar.com.location.ActivityBindingRelationShip) -> e
    void access$5(com.zgcar.com.location.ActivityBindingRelationShip,java.lang.String) -> a
    void access$6(com.zgcar.com.location.ActivityBindingRelationShip) -> f
    java.lang.String access$7(com.zgcar.com.location.ActivityBindingRelationShip,java.lang.String) -> b
    void access$8(com.zgcar.com.location.ActivityBindingRelationShip) -> g
com.zgcar.com.location.ActivityBindingRelationShip$1 -> com.zgcar.com.location.c:
    com.zgcar.com.location.ActivityBindingRelationShip this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.location.ActivityBindingRelationShip$2 -> com.zgcar.com.location.d:
    com.zgcar.com.location.ActivityBindingRelationShip this$0 -> a
    java.lang.String val$name -> b
    void run() -> run
com.zgcar.com.location.ActivityBindingSetAPN -> com.zgcar.com.location.ActivityBindingSetAPN:
    android.widget.EditText apnEt -> a
    android.widget.EditText nameEt -> b
    android.widget.EditText pswEt -> c
    java.lang.String phoneNo -> d
    java.lang.String imei -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void onClick(android.view.View) -> onClick
    void setApn() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.zgcar.com.location.ActivityBindingSim -> com.zgcar.com.location.ActivityBindingSim:
    android.widget.EditText phoneNum -> a
    java.lang.String imei -> b
    java.lang.String u_name -> c
    java.lang.String sim -> d
    android.os.Handler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    java.lang.String getRequestJson() -> b
    void newkalaRequest() -> c
    void showDialog() -> d
    void access$0(com.zgcar.com.location.ActivityBindingSim) -> a
    java.lang.String access$1(com.zgcar.com.location.ActivityBindingSim) -> b
    java.lang.String access$2(com.zgcar.com.location.ActivityBindingSim) -> c
    java.lang.String access$3(com.zgcar.com.location.ActivityBindingSim) -> d
    android.os.Handler access$4(com.zgcar.com.location.ActivityBindingSim) -> e
com.zgcar.com.location.ActivityBindingSim$1 -> com.zgcar.com.location.e:
    com.zgcar.com.location.ActivityBindingSim this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.location.ActivityBindingSim$2 -> com.zgcar.com.location.f:
    com.zgcar.com.location.ActivityBindingSim this$0 -> a
    void run() -> run
com.zgcar.com.location.ActivityBindingSim$3 -> com.zgcar.com.location.g:
    com.zgcar.com.location.ActivityBindingSim this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgcar.com.location.ActivityBindingSim$4 -> com.zgcar.com.location.h:
    com.zgcar.com.location.ActivityBindingSim this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.zgcar.com.location.ActivityLocationModelDesc -> com.zgcar.com.location.ActivityLocationModelDesc:
    void onCreate(android.os.Bundle) -> onCreate
com.zgcar.com.location.ActivityLocationModelDesc$1 -> com.zgcar.com.location.i:
    com.zgcar.com.location.ActivityLocationModelDesc this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.location.ActivityNaviRoute1 -> com.zgcar.com.location.ActivityNaviRoute1:
    com.amap.api.navi.AMapNaviView mAMapNaviView -> a
    com.amap.api.navi.AMapNavi mAMapNavi -> b
    boolean mDayNightFlag -> c
    boolean mDeviationFlag -> d
    boolean mJamFlag -> e
    boolean mTrafficFlag -> f
    boolean mCameraFlag -> g
    boolean mScreenFlag -> h
    com.zgcar.com.location.util.TTSController mTtsManager -> i
    android.widget.TextView title -> j
    com.amap.api.navi.model.NaviLatLng mNaviStart -> k
    com.amap.api.navi.model.NaviLatLng mNaviEnd -> l
    java.util.ArrayList mStartPoints -> m
    java.util.ArrayList mEndPoints -> n
    int type -> o
    com.zgcar.com.main.MyApplication app -> p
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView(android.os.Bundle) -> a
    void initData() -> b
    void setAmapNaviViewOptions() -> c
    void onClick(android.view.View) -> onClick
    void onInitNaviFailure() -> onInitNaviFailure
    void onInitNaviSuccess() -> onInitNaviSuccess
    void OnUpdateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> OnUpdateTrafficFacility
    void OnUpdateTrafficFacility(com.amap.api.navi.model.AMapNaviTrafficFacilityInfo) -> OnUpdateTrafficFacility
    void onCalculateRouteSuccess() -> onCalculateRouteSuccess
    void hideCross() -> hideCross
    void hideLaneInfo() -> hideLaneInfo
    void notifyParallelRoad(int) -> notifyParallelRoad
    void onArriveDestination() -> onArriveDestination
    void onArrivedWayPoint(int) -> onArrivedWayPoint
    void onCalculateMultipleRoutesSuccess(int[]) -> onCalculateMultipleRoutesSuccess
    void onCalculateRouteFailure(int) -> onCalculateRouteFailure
    void onEndEmulatorNavi() -> onEndEmulatorNavi
    void onGetNavigationText(int,java.lang.String) -> onGetNavigationText
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    void onLocationChange(com.amap.api.navi.model.AMapNaviLocation) -> onLocationChange
    void onNaviInfoUpdate(com.amap.api.navi.model.NaviInfo) -> onNaviInfoUpdate
    void onNaviInfoUpdated(com.amap.api.navi.model.AMapNaviInfo) -> onNaviInfoUpdated
    void onReCalculateRouteForTrafficJam() -> onReCalculateRouteForTrafficJam
    void onReCalculateRouteForYaw() -> onReCalculateRouteForYaw
    void onStartNavi(int) -> onStartNavi
    void onTrafficStatusUpdate() -> onTrafficStatusUpdate
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void showLaneInfo(com.amap.api.navi.model.AMapLaneInfo[],byte[],byte[]) -> showLaneInfo
    void onLockMap(boolean) -> onLockMap
    boolean onNaviBackClick() -> onNaviBackClick
    void onNaviCancel() -> onNaviCancel
    void onNaviMapMode(int) -> onNaviMapMode
    void onNaviSetting() -> onNaviSetting
    void onNaviTurnClick() -> onNaviTurnClick
    void onNaviViewLoaded() -> onNaviViewLoaded
    void onNextRoadClick() -> onNextRoadClick
    void onScanViewButtonClick() -> onScanViewButtonClick
com.zgcar.com.location.ActivityNaviRoute2 -> com.zgcar.com.location.ActivityNaviRoute2:
    boolean isDrive -> a
    android.webkit.WebView webView -> b
    com.zgcar.com.main.MyApplication app -> c
    android.app.Dialog dialog -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void doMapDir(double,double,double,double,int) -> a
    void onClick(android.view.View) -> onClick
    boolean access$0(com.zgcar.com.location.ActivityNaviRoute2) -> a
    com.zgcar.com.main.MyApplication access$1(com.zgcar.com.location.ActivityNaviRoute2) -> b
    android.app.Dialog access$2(com.zgcar.com.location.ActivityNaviRoute2) -> c
    android.webkit.WebView access$3(com.zgcar.com.location.ActivityNaviRoute2) -> d
com.zgcar.com.location.ActivityNaviRoute2$1 -> com.zgcar.com.location.j:
    com.zgcar.com.location.ActivityNaviRoute2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.location.ActivityNaviRoute2$2 -> com.zgcar.com.location.k:
    com.zgcar.com.location.ActivityNaviRoute2 this$0 -> a
    double val$from_lo -> b
    double val$from_la -> c
    double val$to_lo -> d
    double val$to_la -> e
    int val$mode -> f
    void run() -> run
com.zgcar.com.location.ActivityScanning -> com.zgcar.com.location.ActivityScanning:
    com.zgcar.com.zxing.decoding.ScanningActivityHandler handler -> a
    com.zgcar.com.zxing.view.ViewfinderView viewfinderView -> b
    boolean hasSurface -> c
    java.util.Vector decodeFormats -> d
    java.lang.String characterSet -> e
    com.zgcar.com.zxing.decoding.InactivityTimer inactivityTimer -> f
    android.media.MediaPlayer mediaPlayer -> g
    boolean playBeep -> h
    boolean vibrate -> i
    android.widget.Button scannig_addimiesim -> j
    android.media.MediaPlayer$OnCompletionListener beepListener -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initCamera(android.view.SurfaceHolder) -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    com.zgcar.com.zxing.view.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    void drawViewfinder() -> c
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void initBeepSound() -> d
    void playBeepSoundAndVibrate() -> e
com.zgcar.com.location.ActivityScanning$1 -> com.zgcar.com.location.l:
    com.zgcar.com.location.ActivityScanning this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.zgcar.com.location.ActivityScanning$2 -> com.zgcar.com.location.m:
    com.zgcar.com.location.ActivityScanning this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.location.ActivityScanning$3 -> com.zgcar.com.location.n:
    com.zgcar.com.location.ActivityScanning this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.location.ActivityShowHistoryInfo1 -> com.zgcar.com.location.ActivityShowHistoryInfo1:
    com.amap.api.maps.MapView mapView -> a
    com.amap.api.maps.AMap aMap -> b
    android.widget.PopupWindow popWindow -> c
    java.util.List list -> d
    com.zgcar.com.main.MyApplication app -> e
    android.widget.TextView titleDate -> f
    android.widget.TextView seekBarDescTv -> g
    com.zgcar.com.util.MyTextView addressTv -> h
    com.zgcar.com.util.MyTextView timeTv -> i
    android.app.Dialog progressDialog -> j
    boolean isSelectingDate -> k
    java.lang.String date -> l
    android.widget.LinearLayout selectDate -> m
    android.widget.ImageView dateState -> n
    int[] drawables -> o
    int tempPosition -> p
    boolean isPlayer -> q
    com.amap.api.maps.model.Polyline polyline -> r
    com.amap.api.maps.model.Marker mMoveMarker -> s
    com.amap.api.maps.model.Marker tempMarker -> t
    android.widget.Button player -> u
    com.amap.api.maps.model.LatLng moveMarkerPosition -> v
    int playerTime -> w
    android.widget.LinearLayout seekBarLayout -> x
    android.os.Handler handler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void setUpMap(android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    double getAngle(int) -> a
    double getAngle(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    double getInterception(double,com.amap.api.maps.model.LatLng) -> a
    double getSlope(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> b
    double getXMoveDistance(double) -> a
    void playBack() -> c
    void showSelectDatePopupWindow() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void doDrawJPoint() -> a
    java.lang.String getRequestJson() -> e
    void HistoryRequest() -> f
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
    void getDataHositoryInfos(java.lang.String) -> a
    void clearPlayerData() -> g
    void dismissDialog() -> h
    void showProgressDialog() -> i
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void access$0(com.zgcar.com.location.ActivityShowHistoryInfo1) -> a
    java.util.List access$1(com.zgcar.com.location.ActivityShowHistoryInfo1) -> b
    void access$2(com.zgcar.com.location.ActivityShowHistoryInfo1) -> c
    com.amap.api.maps.model.Marker access$3(com.zgcar.com.location.ActivityShowHistoryInfo1) -> d
    com.zgcar.com.util.MyTextView access$4(com.zgcar.com.location.ActivityShowHistoryInfo1) -> e
    com.zgcar.com.util.MyTextView access$5(com.zgcar.com.location.ActivityShowHistoryInfo1) -> f
    com.amap.api.maps.model.Marker access$6(com.zgcar.com.location.ActivityShowHistoryInfo1) -> g
    com.amap.api.maps.model.LatLng access$7(com.zgcar.com.location.ActivityShowHistoryInfo1) -> h
    com.amap.api.maps.model.Polyline access$8(com.zgcar.com.location.ActivityShowHistoryInfo1) -> i
    com.amap.api.maps.AMap access$9(com.zgcar.com.location.ActivityShowHistoryInfo1) -> j
    void access$10(com.zgcar.com.location.ActivityShowHistoryInfo1,com.amap.api.maps.model.Marker) -> a
    double access$11(com.zgcar.com.location.ActivityShowHistoryInfo1,int) -> a
    int access$12(com.zgcar.com.location.ActivityShowHistoryInfo1) -> k
    android.os.Handler access$13(com.zgcar.com.location.ActivityShowHistoryInfo1) -> l
    double access$14(com.zgcar.com.location.ActivityShowHistoryInfo1,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    double access$15(com.zgcar.com.location.ActivityShowHistoryInfo1,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> b
    double access$16(com.zgcar.com.location.ActivityShowHistoryInfo1,double) -> a
    boolean access$17(com.zgcar.com.location.ActivityShowHistoryInfo1) -> m
    void access$18(com.zgcar.com.location.ActivityShowHistoryInfo1,com.amap.api.maps.model.LatLng) -> a
    int access$19(com.zgcar.com.location.ActivityShowHistoryInfo1) -> n
    double access$20(com.zgcar.com.location.ActivityShowHistoryInfo1,double,com.amap.api.maps.model.LatLng) -> a
    void access$21(com.zgcar.com.location.ActivityShowHistoryInfo1,int) -> b
    android.widget.ImageView access$22(com.zgcar.com.location.ActivityShowHistoryInfo1) -> o
    void access$23(com.zgcar.com.location.ActivityShowHistoryInfo1,boolean) -> a
    int[] access$24(com.zgcar.com.location.ActivityShowHistoryInfo1) -> p
    void access$25(com.zgcar.com.location.ActivityShowHistoryInfo1,com.amap.api.maps.model.Polyline) -> a
    java.lang.String access$26(com.zgcar.com.location.ActivityShowHistoryInfo1) -> q
    void access$27(com.zgcar.com.location.ActivityShowHistoryInfo1,java.util.List) -> a
com.zgcar.com.location.ActivityShowHistoryInfo1$1 -> com.zgcar.com.location.o:
    com.zgcar.com.location.ActivityShowHistoryInfo1 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.location.ActivityShowHistoryInfo1$2 -> com.zgcar.com.location.p:
    com.zgcar.com.location.ActivityShowHistoryInfo1 this$0 -> a
    void run() -> run
com.zgcar.com.location.ActivityShowHistoryInfo1$3 -> com.zgcar.com.location.q:
    com.zgcar.com.location.ActivityShowHistoryInfo1 this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.location.ActivityShowHistoryInfo1$4 -> com.zgcar.com.location.r:
    com.zgcar.com.location.ActivityShowHistoryInfo1 this$0 -> a
    void run() -> run
com.zgcar.com.location.ActivityShowHistoryInfo1$5 -> com.zgcar.com.location.s:
    com.zgcar.com.location.ActivityShowHistoryInfo1 this$0 -> a
    void run() -> run
com.zgcar.com.location.ActivityShowHistoryInfo2 -> com.zgcar.com.location.ActivityShowHistoryInfo2:
    android.webkit.WebView webView -> a
    java.util.List list -> b
    com.zgcar.com.main.MyApplication app -> c
    android.app.Dialog progressDialog -> d
    android.widget.TextView titleDate -> e
    android.widget.ImageView dateState -> f
    android.widget.LinearLayout selectDate -> g
    boolean webViewFinished -> h
    boolean isSelectingDate -> i
    java.lang.String date -> j
    android.os.Handler handler -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void markToMap() -> b
    void initWebView() -> c
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void showSelectDatePopupWindow() -> d
    void onDestroy() -> onDestroy
    java.lang.String getRequestJson() -> e
    void historyRequest() -> f
    void dismissDialog() -> g
    void showProgressDialog() -> h
    void getDataHositoryInfos(java.lang.String) -> a
    void access$0(com.zgcar.com.location.ActivityShowHistoryInfo2) -> a
    void access$1(com.zgcar.com.location.ActivityShowHistoryInfo2,boolean) -> a
    android.widget.ImageView access$2(com.zgcar.com.location.ActivityShowHistoryInfo2) -> b
    void access$3(com.zgcar.com.location.ActivityShowHistoryInfo2,boolean) -> b
    java.lang.String access$4(com.zgcar.com.location.ActivityShowHistoryInfo2) -> c
    void access$5(com.zgcar.com.location.ActivityShowHistoryInfo2,java.util.List) -> a
    boolean access$6(com.zgcar.com.location.ActivityShowHistoryInfo2) -> d
    android.os.Handler access$7(com.zgcar.com.location.ActivityShowHistoryInfo2) -> e
    void access$8(com.zgcar.com.location.ActivityShowHistoryInfo2) -> f
com.zgcar.com.location.ActivityShowHistoryInfo2$1 -> com.zgcar.com.location.t:
    com.zgcar.com.location.ActivityShowHistoryInfo2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.location.ActivityShowHistoryInfo2$2 -> com.zgcar.com.location.u:
    com.zgcar.com.location.ActivityShowHistoryInfo2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.location.ActivityShowHistoryInfo2$3 -> com.zgcar.com.location.v:
    com.zgcar.com.location.ActivityShowHistoryInfo2 this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.location.ActivityShowHistoryInfo2$4 -> com.zgcar.com.location.w:
    com.zgcar.com.location.ActivityShowHistoryInfo2 this$0 -> a
    void run() -> run
com.zgcar.com.location.Entity.HistoryEntity -> com.zgcar.com.location.a.a:
    int number -> a
    java.lang.String gpstime -> b
    java.lang.String continued -> c
    int location_type -> d
    double lo -> e
    double la -> f
    double speed -> g
    int direction -> h
    int bat -> i
    int signal -> j
    int setp -> k
    java.lang.String status -> l
    java.lang.String alarm -> m
    java.lang.String address -> n
    java.lang.String getGpstime() -> a
    void setGpstime(java.lang.String) -> a
    java.lang.String getContinued() -> b
    void setContinued(java.lang.String) -> b
    int getLocation_type() -> c
    void setLocation_type(int) -> a
    double getLo() -> d
    void setLo(double) -> a
    double getLa() -> e
    void setLa(double) -> b
    void setSpeed(double) -> c
    void setDirection(int) -> b
    void setBat(int) -> c
    void setSignal(int) -> d
    void setStatus(java.lang.String) -> c
    void setAlarm(java.lang.String) -> d
    java.lang.String getAddress() -> f
    void setAddress(java.lang.String) -> e
    void setNumber(int) -> e
    java.lang.String toString() -> toString
com.zgcar.com.location.Entity.LocationTerminalListData -> com.zgcar.com.location.a.b:
    int number -> a
    java.lang.String gpstime -> b
    int continued -> c
    int location_type -> d
    double lo -> e
    double la -> f
    double speed -> g
    int direction -> h
    int bat -> i
    int signal -> j
    java.lang.Double temp -> k
    java.lang.String status -> l
    java.lang.String alarm -> m
    java.lang.String address -> n
    java.lang.String getGpstime() -> a
    void setGpstime(java.lang.String) -> a
    int getLocation_type() -> b
    void setLocation_type(int) -> a
    double getLo() -> c
    void setLo(double) -> a
    double getLa() -> d
    void setLa(double) -> b
    void setSpeed(double) -> c
    void setDirection(int) -> b
    int getBat() -> e
    void setBat(int) -> c
    void setSignal(int) -> d
    void setTemp(java.lang.Double) -> a
    void setStatus(java.lang.String) -> b
    void setAlarm(java.lang.String) -> c
    java.lang.String getAddress() -> f
    void setAddress(java.lang.String) -> d
    java.lang.String toString() -> toString
com.zgcar.com.location.Entity.SafetyAreaEntity -> com.zgcar.com.location.a.c:
    int id -> a
    java.lang.String name -> b
    double lo -> c
    double la -> d
    int rad -> e
    int alarmtype -> f
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    double getLo() -> c
    void setLo(double) -> a
    double getLa() -> d
    void setLa(double) -> b
    int getRad() -> e
    void setRad(int) -> b
    void setAlarmtype(int) -> c
    java.lang.String toString() -> toString
com.zgcar.com.location.Entity.SafetySearchInfos -> com.zgcar.com.location.a.d:
    java.lang.String address -> a
    double la -> b
    double lo -> c
    java.lang.String getAddress() -> a
    double getLa() -> b
    double getLo() -> c
    java.lang.String toString() -> toString
com.zgcar.com.location.adapter.AdapterAddBaby -> com.zgcar.com.location.b.a:
    android.content.Context context -> a
    java.util.List lst -> b
    int getCount() -> getCount
    void setLst(java.util.List) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder -> com.zgcar.com.location.b.b:
    android.widget.TextView text -> a
    com.zgcar.com.util.CircleImageView imageView -> b
    android.widget.ImageView onlineState -> c
    void access$0(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder,android.widget.TextView) -> a
    void access$1(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    void access$2(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder,android.widget.ImageView) -> a
    android.widget.ImageView access$3(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder) -> a
    android.widget.TextView access$4(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder) -> b
    com.zgcar.com.util.CircleImageView access$5(com.zgcar.com.location.adapter.AdapterAddBaby$ViewHolder) -> c
com.zgcar.com.location.adapter.AdapterRelationShip -> com.zgcar.com.location.b.c:
    android.content.Context context -> a
    java.lang.String[] name -> b
    int[] head -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.location.adapter.AdapterSafetyArea -> com.zgcar.com.location.b.d:
    android.content.Context context -> a
    java.util.List lst -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder -> com.zgcar.com.location.b.e:
    android.widget.ImageView icon -> a
    android.widget.TextView name -> b
    android.widget.TextView range -> c
    void access$1(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder,android.widget.TextView) -> a
    void access$2(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder,android.widget.TextView) -> b
    void access$3(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder,android.widget.ImageView) -> a
    android.widget.TextView access$4(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder) -> a
    android.widget.TextView access$5(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder) -> b
    android.widget.ImageView access$6(com.zgcar.com.location.adapter.AdapterSafetyArea$ViewHolder) -> c
com.zgcar.com.location.util.TTSController -> com.zgcar.com.location.c.a:
    com.zgcar.com.location.util.TTSController ttsManager -> a
    boolean isfinish -> b
    android.content.Context mContext -> c
    com.iflytek.cloud.speech.SpeechSynthesizer mSpeechSynthesizer -> d
    com.iflytek.cloud.speech.SpeechListener listener -> e
    com.zgcar.com.location.util.TTSController getInstance(android.content.Context) -> a
    void init() -> a
    void playText(java.lang.String) -> a
    void stopSpeaking() -> b
    void startSpeaking() -> c
    void initSpeechSynthesizer() -> e
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onSpeakResumed() -> onSpeakResumed
    void destroy() -> d
    void onArriveDestination() -> onArriveDestination
    void onArrivedWayPoint(int) -> onArrivedWayPoint
    void onCalculateRouteFailure(int) -> onCalculateRouteFailure
    void onCalculateRouteSuccess() -> onCalculateRouteSuccess
    void onEndEmulatorNavi() -> onEndEmulatorNavi
    void onGetNavigationText(int,java.lang.String) -> onGetNavigationText
    void onInitNaviFailure() -> onInitNaviFailure
    void onInitNaviSuccess() -> onInitNaviSuccess
    void onLocationChange(com.amap.api.navi.model.AMapNaviLocation) -> onLocationChange
    void onReCalculateRouteForTrafficJam() -> onReCalculateRouteForTrafficJam
    void onReCalculateRouteForYaw() -> onReCalculateRouteForYaw
    void onStartNavi(int) -> onStartNavi
    void onTrafficStatusUpdate() -> onTrafficStatusUpdate
    void onGpsOpenStatus(boolean) -> onGpsOpenStatus
    void onNaviInfoUpdated(com.amap.api.navi.model.AMapNaviInfo) -> onNaviInfoUpdated
    void onNaviInfoUpdate(com.amap.api.navi.model.NaviInfo) -> onNaviInfoUpdate
    void OnUpdateTrafficFacility(com.autonavi.tbt.TrafficFacilityInfo) -> OnUpdateTrafficFacility
    void OnUpdateTrafficFacility(com.amap.api.navi.model.AMapNaviTrafficFacilityInfo) -> OnUpdateTrafficFacility
    void showCross(com.amap.api.navi.model.AMapNaviCross) -> showCross
    void hideCross() -> hideCross
    void showLaneInfo(com.amap.api.navi.model.AMapLaneInfo[],byte[],byte[]) -> showLaneInfo
    void hideLaneInfo() -> hideLaneInfo
    void onCalculateMultipleRoutesSuccess(int[]) -> onCalculateMultipleRoutesSuccess
    void notifyParallelRoad(int) -> notifyParallelRoad
com.zgcar.com.location.util.TTSController$1 -> com.zgcar.com.location.c.b:
    com.zgcar.com.location.util.TTSController this$0 -> a
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.speech.SpeechError) -> onCompleted
    void onEvent(int,android.os.Bundle) -> onEvent
com.zgcar.com.main.ChatNotifyAdapter -> com.zgcar.com.main.a:
    java.util.List list -> a
    android.content.Context context -> b
    int positionBit -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.zgcar.com.main.ChatNotifyAdapter$ViewHolder -> com.zgcar.com.main.b:
    com.zgcar.com.util.CircleImageView icon -> a
    android.widget.TextView title -> b
    android.widget.TextView time -> c
    android.widget.TextView content -> d
    android.widget.ImageView warn -> e
    void access$1(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$2(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder,com.zgcar.com.util.CircleImageView) -> a
    void access$3(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder,android.widget.TextView) -> a
    void access$4(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder,android.widget.TextView) -> b
    void access$5(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder,android.widget.TextView) -> c
    android.widget.ImageView access$6(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder) -> a
    com.zgcar.com.util.CircleImageView access$7(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder) -> b
    android.widget.TextView access$8(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder) -> c
    android.widget.TextView access$9(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder) -> d
    android.widget.TextView access$10(com.zgcar.com.main.ChatNotifyAdapter$ViewHolder) -> e
com.zgcar.com.main.FragmentAccount -> com.zgcar.com.main.c:
    android.view.View view -> a
    com.zgcar.com.util.CircleImageView icon -> b
    com.zgcar.com.main.MyApplication app -> c
    android.widget.TextView name -> d
    android.widget.TextView renewalTime -> e
    int position -> f
    android.app.Dialog dialog -> g
    android.graphics.Bitmap bitmap -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void init() -> b
    void onClick(android.view.View) -> onClick
    void showProgressDialog() -> c
    void showFindWatchDialog() -> d
    void dismissDialog() -> e
    void sendFindWatchRequest(java.lang.String) -> a
    void showShutDownAction() -> f
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void setDrawableTop(android.widget.Button,int,int) -> a
    com.zgcar.com.main.MyApplication access$0(com.zgcar.com.main.FragmentAccount) -> a
    void access$1(com.zgcar.com.main.FragmentAccount) -> b
com.zgcar.com.main.FragmentAccount$1 -> com.zgcar.com.main.d:
    com.zgcar.com.main.FragmentAccount this$0 -> a
    java.lang.String val$cmd -> b
    void run() -> run
com.zgcar.com.main.FragmentHistory -> com.zgcar.com.main.e:
    android.widget.ListView listview -> a
    com.zgcar.com.main.MyApplication app -> b
    com.zgcar.com.main.ChatNotifyAdapter adapter -> c
    java.util.List list -> d
    com.zgcar.com.main.FragmentHistory$MyReceiver receiver -> e
    com.zgcar.com.main.model.NotifyMessageEntity pushInfo -> f
    java.lang.String imei -> g
    android.os.Handler handler -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void init(android.view.View) -> a
    void initReceiver() -> a
    void initView() -> b
    void distinguishType1() -> c
    void getPushInfo(android.os.Bundle) -> a
    void getNotifyMessage() -> d
    java.lang.String getJson() -> e
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onDestroy() -> onDestroy
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    void access$0(com.zgcar.com.main.FragmentHistory) -> a
    void access$1(com.zgcar.com.main.FragmentHistory,android.os.Bundle) -> a
    void access$2(com.zgcar.com.main.FragmentHistory) -> b
    android.os.Handler access$3(com.zgcar.com.main.FragmentHistory) -> c
    java.lang.String access$4(com.zgcar.com.main.FragmentHistory) -> d
    void access$5(com.zgcar.com.main.FragmentHistory,java.util.List) -> a
com.zgcar.com.main.FragmentHistory$1 -> com.zgcar.com.main.f:
    com.zgcar.com.main.FragmentHistory this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.main.FragmentHistory$2 -> com.zgcar.com.main.g:
    com.zgcar.com.main.FragmentHistory this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentHistory$MyReceiver -> com.zgcar.com.main.h:
    com.zgcar.com.main.FragmentHistory this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgcar.com.main.FragmentLocation1 -> com.zgcar.com.main.i:
    com.amap.api.maps.model.Marker marker1 -> b
    com.amap.api.maps.model.Marker marker2 -> c
    android.view.View rootView -> d
    android.widget.PopupWindow popWindow -> e
    android.widget.ListView listView -> f
    com.zgcar.com.util.CircleImageView watchIcon -> g
    com.amap.api.maps.MapView mapView -> h
    com.amap.api.maps.AMap aMap -> i
    com.zgcar.com.util.MyTextView locateAddress -> j
    com.zgcar.com.util.MyTextView locateTime -> k
    android.widget.TextView watchName -> l
    com.zgcar.com.location.adapter.AdapterAddBaby adapters -> m
    java.util.List list -> n
    com.zgcar.com.main.MyApplication app -> o
    int timerFlag -> p
    com.zgcar.com.util.CircleImageView myIcon -> q
    boolean isLocationFinish -> r
    android.widget.Button locateModel -> s
    android.widget.ImageButton mapModel -> t
    android.widget.TextView mapModelDesc -> u
    com.zgcar.com.main.LocationCallBack locationCallBack -> v
    com.zgcar.com.location.Entity.LocationTerminalListData terminalInfo -> w
    android.widget.LinearLayout navigation -> x
    android.graphics.Bitmap tempBitmap -> y
    android.content.SharedPreferences sf -> z
    com.zgcar.com.main.PhoneLocation phoneLocation -> A
    android.os.Handler handler -> a
    java.lang.Runnable timer2 -> B
    java.lang.Runnable timerWatchLocationRequest -> C
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initMap() -> d
    void init(android.os.Bundle) -> a
    void initPopupWindow() -> e
    void onClick(android.view.View) -> onClick
    void setLocationModel() -> f
    void getlalo(com.amap.api.maps.model.LatLng,boolean) -> a
    void newlocations() -> a
    void setLocationInfo(boolean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void getWatchListInfo() -> g
    void showGuideView() -> h
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    void bgFictory(android.widget.ImageView) -> a
    void erifyRequest() -> i
    void sendRequest(java.lang.String) -> a
    void doNavWithType(int) -> a
    void getTerminalListSucceed(java.util.List) -> a
    void getTerminalIconSucceed(java.util.List) -> b
    void getTerminalIconFail() -> b
    void getTerminalListFail() -> c
    void showDialog() -> j
    void dismissDialog() -> k
    void setLocationCallBack(com.zgcar.com.main.LocationCallBack) -> a
    void callBack(com.amap.api.location.AMapLocation) -> a
    java.lang.Runnable access$0(com.zgcar.com.main.FragmentLocation1) -> a
    void access$1(com.zgcar.com.main.FragmentLocation1,int) -> a
    void access$2(com.zgcar.com.main.FragmentLocation1,boolean) -> a
    int access$3(com.zgcar.com.main.FragmentLocation1) -> b
    void access$4(com.zgcar.com.main.FragmentLocation1) -> c
    android.widget.PopupWindow access$5(com.zgcar.com.main.FragmentLocation1) -> d
    void access$6(com.zgcar.com.main.FragmentLocation1) -> e
    com.zgcar.com.main.MyApplication access$7(com.zgcar.com.main.FragmentLocation1) -> f
    java.util.List access$8(com.zgcar.com.main.FragmentLocation1) -> g
    android.widget.TextView access$9(com.zgcar.com.main.FragmentLocation1) -> h
    void access$10(com.zgcar.com.main.FragmentLocation1,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$11(com.zgcar.com.main.FragmentLocation1) -> i
    com.zgcar.com.util.CircleImageView access$12(com.zgcar.com.main.FragmentLocation1) -> j
    java.lang.Runnable access$13(com.zgcar.com.main.FragmentLocation1) -> k
    android.content.SharedPreferences access$14(com.zgcar.com.main.FragmentLocation1) -> l
    void access$15(com.zgcar.com.main.FragmentLocation1) -> m
    void access$16(com.zgcar.com.main.FragmentLocation1,com.zgcar.com.location.Entity.LocationTerminalListData) -> a
    com.zgcar.com.location.Entity.LocationTerminalListData access$17(com.zgcar.com.main.FragmentLocation1) -> n
    void access$18(com.zgcar.com.main.FragmentLocation1) -> o
com.zgcar.com.main.FragmentLocation1$1 -> com.zgcar.com.main.j:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.main.FragmentLocation1$2 -> com.zgcar.com.main.k:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentLocation1$3 -> com.zgcar.com.main.l:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentLocation1$4 -> com.zgcar.com.main.m:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.main.FragmentLocation1$5 -> com.zgcar.com.main.n:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.main.FragmentLocation1$6 -> com.zgcar.com.main.o:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.main.FragmentLocation1$7 -> com.zgcar.com.main.p:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.main.FragmentLocation1$8 -> com.zgcar.com.main.q:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentLocation1$9 -> com.zgcar.com.main.r:
    com.zgcar.com.main.FragmentLocation1 this$0 -> a
    java.lang.String val$cmd -> b
    void run() -> run
com.zgcar.com.main.FragmentLocation2 -> com.zgcar.com.main.s:
    android.view.View rootView -> a
    android.webkit.WebView webView -> b
    com.zgcar.com.util.CircleImageView watchIcon -> c
    com.zgcar.com.util.CircleImageView phoneIcon -> d
    android.widget.TextView watchName -> e
    android.widget.TextView locationTime -> f
    com.zgcar.com.util.MyTextView locationAddress -> g
    android.widget.LinearLayout navigateLinearLayout -> h
    java.util.List listbInfos -> i
    com.zgcar.com.main.MyApplication app -> j
    android.graphics.Bitmap watchIconBitmap -> k
    android.widget.PopupWindow popupWindow -> l
    com.zgcar.com.location.adapter.AdapterAddBaby adapter -> m
    android.widget.RelativeLayout showPopRelativeLayout -> n
    android.widget.ListView listView -> o
    com.zgcar.com.location.Entity.LocationTerminalListData watchLocationInfo -> p
    int timerFlag -> q
    boolean webViewFinished -> r
    double tempLo -> s
    double tempLa -> t
    int flag -> u
    android.widget.Button locateModel -> v
    android.content.SharedPreferences sf -> w
    android.widget.TextView mapModelDesc -> x
    android.widget.ImageButton mapModel -> y
    com.zgcar.com.main.LocationCallBack locationCallBack -> z
    com.zgcar.com.main.PhoneLocation phoneLocation -> A
    android.os.Handler handler -> B
    java.lang.Runnable locateWatchOver -> C
    java.lang.Runnable getWatchLocationTimer -> D
    void onCreate(android.os.Bundle) -> onCreate
    void getWatchListInfo() -> a
    void showGuideView() -> d
    void initialize() -> e
    void markToMap(int,double,double) -> a
    void initWebView() -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void initView() -> g
    void initPopuWindow() -> h
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void showPhoneLocationInfo(com.amap.api.location.AMapLocation) -> b
    void naviRoute(java.lang.Boolean) -> a
    void showWatchPositionInfos() -> i
    void getDataRequest(java.lang.String) -> a
    void getTerminalListSucceed(java.util.List) -> a
    void getTerminalIconSucceed(java.util.List) -> b
    void getTerminalIconFail() -> b
    void getTerminalListFail() -> c
    void setLocationModel() -> j
    void showDialog() -> k
    void dismissDialog() -> l
    void setLocationCallBack(com.zgcar.com.main.LocationCallBack) -> a
    void callBack(com.amap.api.location.AMapLocation) -> a
    android.widget.LinearLayout access$0(com.zgcar.com.main.FragmentLocation2) -> a
    void access$1(com.zgcar.com.main.FragmentLocation2) -> b
    void access$2(com.zgcar.com.main.FragmentLocation2,int) -> a
    android.os.Handler access$3(com.zgcar.com.main.FragmentLocation2) -> c
    int access$4(com.zgcar.com.main.FragmentLocation2) -> d
    void access$5(com.zgcar.com.main.FragmentLocation2,java.lang.String) -> a
    android.content.SharedPreferences access$6(com.zgcar.com.main.FragmentLocation2) -> e
    void access$7(com.zgcar.com.main.FragmentLocation2) -> f
    void access$8(com.zgcar.com.main.FragmentLocation2) -> g
    void access$9(com.zgcar.com.main.FragmentLocation2,boolean) -> a
    void access$10(com.zgcar.com.main.FragmentLocation2) -> h
    com.zgcar.com.util.CircleImageView access$11(com.zgcar.com.main.FragmentLocation2) -> i
    java.lang.Runnable access$12(com.zgcar.com.main.FragmentLocation2) -> j
    android.webkit.WebView access$13(com.zgcar.com.main.FragmentLocation2) -> k
    com.zgcar.com.main.MyApplication access$14(com.zgcar.com.main.FragmentLocation2) -> l
    java.util.List access$15(com.zgcar.com.main.FragmentLocation2) -> m
    android.widget.TextView access$16(com.zgcar.com.main.FragmentLocation2) -> n
    void access$17(com.zgcar.com.main.FragmentLocation2,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$18(com.zgcar.com.main.FragmentLocation2) -> o
    android.widget.PopupWindow access$19(com.zgcar.com.main.FragmentLocation2) -> p
    void access$20(com.zgcar.com.main.FragmentLocation2,com.zgcar.com.location.Entity.LocationTerminalListData) -> a
    com.zgcar.com.location.Entity.LocationTerminalListData access$21(com.zgcar.com.main.FragmentLocation2) -> q
    boolean access$22(com.zgcar.com.main.FragmentLocation2) -> r
com.zgcar.com.main.FragmentLocation2$1 -> com.zgcar.com.main.t:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.main.FragmentLocation2$10 -> com.zgcar.com.main.u:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    java.lang.String val$cmd -> b
    void run() -> run
com.zgcar.com.main.FragmentLocation2$2 -> com.zgcar.com.main.v:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentLocation2$3 -> com.zgcar.com.main.w:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void run() -> run
com.zgcar.com.main.FragmentLocation2$4 -> com.zgcar.com.main.x:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.main.FragmentLocation2$5 -> com.zgcar.com.main.y:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.main.FragmentLocation2$6 -> com.zgcar.com.main.z:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.main.FragmentLocation2$7 -> com.zgcar.com.main.aa:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void onDismiss() -> onDismiss
com.zgcar.com.main.FragmentLocation2$8 -> com.zgcar.com.main.ab:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.zgcar.com.main.FragmentLocation2$9 -> com.zgcar.com.main.ac:
    com.zgcar.com.main.FragmentLocation2 this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.zgcar.com.main.FragmentStatistics -> com.zgcar.com.main.ad:
    android.view.View view -> a
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setDrawableTop(android.widget.Button,int,int) -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.main.LocationCallBack -> com.zgcar.com.main.ae:
    void showDialog() -> a
    void dismissDialog() -> b
com.zgcar.com.main.MainActivity -> com.zgcar.com.main.MainActivity:
    android.widget.RadioGroup radioGroup -> a
    android.app.FragmentManager fm -> b
    android.app.Fragment currentFragment -> c
    com.zgcar.com.main.MyApplication app -> d
    android.app.Dialog dialog -> e
    android.app.Dialog prgressDialog -> f
    java.util.List list -> g
    android.widget.TextView tvHasVoiceInfo -> h
    int tempId -> i
    android.content.BroadcastReceiver receiver -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void isTheFirst() -> c
    void fragentFactory(int) -> b
    void initialize() -> d
    void initView() -> e
    void initRadioGroupLisener() -> f
    void quitDialog() -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void changeFragment(int) -> a
    void onPause() -> onPause
    void removeFragment() -> h
    void setRadioButtonDrawableTop() -> i
    void setDrawableTop(android.widget.RadioButton,int,int) -> a
    void showDialog() -> a
    void dismissDialog() -> b
    android.app.Fragment access$0(com.zgcar.com.main.MainActivity) -> a
    com.zgcar.com.main.MyApplication access$1(com.zgcar.com.main.MainActivity) -> b
    android.widget.TextView access$2(com.zgcar.com.main.MainActivity) -> c
    void access$3(com.zgcar.com.main.MainActivity,int) -> a
    int access$4(com.zgcar.com.main.MainActivity) -> d
    android.widget.RadioGroup access$5(com.zgcar.com.main.MainActivity) -> e
com.zgcar.com.main.MainActivity$1 -> com.zgcar.com.main.af:
    com.zgcar.com.main.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zgcar.com.main.MainActivity$2 -> com.zgcar.com.main.ag:
    com.zgcar.com.main.MainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.zgcar.com.main.MyApplication -> com.zgcar.com.main.MyApplication:
    java.util.List pushList -> c
    int position -> d
    java.lang.String userName -> e
    java.lang.String imei -> f
    boolean isFirst -> g
    boolean isVoicePush -> h
    boolean isStandardsMap -> i
    boolean bluetoothDeviceIsConnected -> j
    int messageNum -> k
    boolean isAllowedToOpenBlue -> l
    android.bluetooth.BluetoothDevice tempBluetoothDevice -> m
    com.amap.api.location.AMapLocation tempMyLocation -> n
    com.zgcar.com.location.Entity.LocationTerminalListData tempWatchLocation -> o
    cn.jpush.android.api.TagAliasCallback mTagsCallback -> a
    android.os.Handler handle -> b
    void onCreate() -> onCreate
    void createFileCache(java.lang.String) -> c
    void getFlowerXY() -> o
    void addPushBundle(android.os.Bundle) -> a
    android.os.Bundle getPushBundle() -> a
    int getMessageNum() -> b
    void setMessageNum(int) -> a
    boolean isFirst() -> c
    void setFirst(boolean) -> a
    boolean userNameIsEmpty() -> d
    boolean imeiIsEmpty(android.content.Context,boolean) -> a
    java.lang.String getUserName() -> e
    void setUserName(java.lang.String) -> a
    java.lang.String getImei() -> f
    void setImei(java.lang.String) -> b
    int getPosition() -> g
    void setPosition(int) -> b
    boolean isVoicePush() -> h
    void setVoicePush(boolean) -> b
    boolean isStandardsMap() -> i
    void setStandardsMap(boolean) -> c
    android.bluetooth.BluetoothDevice getTempBluetoothDevice() -> j
    void setTempBluetoothDevice(android.bluetooth.BluetoothDevice) -> a
    boolean isBluetoothDeviceIsConnected() -> k
    void setBluetoothDeviceIsConnected(boolean) -> d
    boolean isAllowedToOpenBlue() -> l
    void setAllowedToOpenBlue(boolean) -> e
    com.amap.api.location.AMapLocation getTempMyLocation() -> m
    void setTempMyLocation(com.amap.api.location.AMapLocation) -> a
    com.zgcar.com.location.Entity.LocationTerminalListData getTempWatchLocation() -> n
    void setTempWatchLocation(com.zgcar.com.location.Entity.LocationTerminalListData) -> a
    java.lang.String access$0(com.zgcar.com.main.MyApplication) -> a
com.zgcar.com.main.MyApplication$1 -> com.zgcar.com.main.ah:
    com.zgcar.com.main.MyApplication this$0 -> a
    void gotResult(int,java.lang.String,java.util.Set) -> gotResult
com.zgcar.com.main.MyApplication$2 -> com.zgcar.com.main.ai:
    com.zgcar.com.main.MyApplication this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.main.PhoneLocation -> com.zgcar.com.main.aj:
    com.amap.api.location.AMapLocationClient locationClient -> a
    com.amap.api.location.AMapLocationClientOption locationOption -> b
    com.zgcar.com.main.PhoneLocation$CallBack callBack -> c
    void getPhoneLocation(android.content.Context,com.zgcar.com.main.PhoneLocation$CallBack) -> a
    void destroyLocation() -> a
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.zgcar.com.main.PhoneLocation$CallBack -> com.zgcar.com.main.ak:
    void callBack(com.amap.api.location.AMapLocation) -> a
com.zgcar.com.main.ServiceStartLocation -> com.zgcar.com.main.ServiceStartLocation:
    com.amap.api.location.AMapLocationClient locationClient -> a
    com.amap.api.location.AMapLocationClientOption locationOption -> b
    com.zgcar.com.main.MyApplication app -> c
    android.os.Handler handle -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void startLocation() -> a
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.zgcar.com.main.model.ListInfosEntity -> com.zgcar.com.main.a.a:
    java.util.List terminalListInfos -> a
    java.util.List pathList -> b
    java.util.List zoneSafetyData -> c
    java.util.List getTerminalListInfos() -> a
    void setTerminalListInfos(java.util.List) -> a
    void setZoneSafetyData(java.util.List) -> b
    java.util.List getPathList() -> b
    void setPathList(java.util.List) -> c
com.zgcar.com.main.model.NotifyMessageEntity -> com.zgcar.com.main.a.b:
    java.lang.String imei -> a
    java.lang.String msg -> b
    java.lang.String litle -> c
    java.lang.String geo -> d
    java.lang.String time -> e
    double lo -> f
    double la -> g
    java.lang.String alarm -> h
    java.lang.String getImei() -> a
    void setImei(java.lang.String) -> a
    java.lang.String getMsg() -> b
    void setMsg(java.lang.String) -> b
    java.lang.String getLitle() -> c
    void setLitle(java.lang.String) -> c
    java.lang.String getGeo() -> d
    void setGeo(java.lang.String) -> d
    java.lang.String getTime() -> e
    void setTime(java.lang.String) -> e
    double getLo() -> f
    void setLo(double) -> a
    double getLa() -> g
    void setLa(double) -> b
    java.lang.String getAlarm() -> h
    void setAlarm(java.lang.String) -> f
    java.lang.String toString() -> toString
com.zgcar.com.main.model.TerminalListInfos -> com.zgcar.com.main.a.c:
    java.lang.String imei -> a
    java.lang.String name -> b
    java.lang.String number -> c
    int age -> d
    int height -> e
    int weight -> f
    int sex -> g
    java.lang.String birthday -> h
    java.lang.String servicedate -> i
    int online -> j
    java.lang.String bl_mac -> k
    java.lang.String bl_switch -> l
    int image_flag -> m
    java.lang.String image_link -> n
    boolean admin -> o
    java.lang.String getImei() -> a
    void setImei(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    java.lang.String getNumber() -> c
    void setNumber(java.lang.String) -> c
    void setAge(int) -> a
    int getHeight() -> d
    void setHeight(int) -> b
    int getWeight() -> e
    void setWeight(int) -> c
    int getSex() -> f
    void setSex(int) -> d
    java.lang.String getBirthday() -> g
    void setBirthday(java.lang.String) -> d
    java.lang.String getServicedate() -> h
    void setServicedate(java.lang.String) -> e
    int getOnline() -> i
    void setOnline(int) -> e
    void setBl_mac(java.lang.String) -> f
    void setBl_switch(java.lang.String) -> g
    int getImage_flag() -> j
    void setImage_flag(int) -> f
    java.lang.String getImage_link() -> k
    void setImage_link(java.lang.String) -> h
    boolean isAdmin() -> l
    void setAdmin(boolean) -> a
    java.lang.String toString() -> toString
com.zgcar.com.main.util.SendLocationRequest -> com.zgcar.com.main.b.a:
    android.app.Activity activity -> a
    com.zgcar.com.main.MyApplication app -> b
    android.content.SharedPreferences sf -> c
    java.util.List paths -> d
    com.zgcar.com.main.util.SendLocationRequest$OnTerminalListLisener lisener -> e
    java.util.List listbInfos -> f
    android.os.Handler handler -> g
    void sendRequest() -> a
    java.lang.String getRequestJson() -> b
    void downloadImage(java.lang.String,java.lang.String,int) -> a
    void setLisener(com.zgcar.com.main.util.SendLocationRequest$OnTerminalListLisener) -> a
    com.zgcar.com.main.util.SendLocationRequest$OnTerminalListLisener access$0(com.zgcar.com.main.util.SendLocationRequest) -> a
    java.util.List access$1(com.zgcar.com.main.util.SendLocationRequest) -> b
    java.util.List access$2(com.zgcar.com.main.util.SendLocationRequest) -> c
    void access$3(com.zgcar.com.main.util.SendLocationRequest,java.util.List) -> a
    android.content.SharedPreferences access$4(com.zgcar.com.main.util.SendLocationRequest) -> d
    void access$5(com.zgcar.com.main.util.SendLocationRequest,java.lang.String,java.lang.String,int) -> a
    android.os.Handler access$6(com.zgcar.com.main.util.SendLocationRequest) -> e
    java.lang.String access$7(com.zgcar.com.main.util.SendLocationRequest) -> f
    void access$8(com.zgcar.com.main.util.SendLocationRequest,java.util.List) -> b
    android.app.Activity access$9(com.zgcar.com.main.util.SendLocationRequest) -> g
com.zgcar.com.main.util.SendLocationRequest$1 -> com.zgcar.com.main.b.b:
    com.zgcar.com.main.util.SendLocationRequest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.main.util.SendLocationRequest$2 -> com.zgcar.com.main.b.c:
    com.zgcar.com.main.util.SendLocationRequest this$0 -> a
    void run() -> run
com.zgcar.com.main.util.SendLocationRequest$MyAsyncTask -> com.zgcar.com.main.b.d:
    com.zgcar.com.main.util.SendLocationRequest this$0 -> a
    java.lang.Void doInBackground(com.zgcar.com.main.model.TerminalListInfos[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.zgcar.com.main.util.SendLocationRequest$OnTerminalListLisener -> com.zgcar.com.main.b.e:
    void getTerminalListSucceed(java.util.List) -> a
    void getTerminalIconSucceed(java.util.List) -> b
    void getTerminalIconFail() -> b
    void getTerminalListFail() -> c
com.zgcar.com.receiver.MyPushService -> com.zgcar.com.receiver.MyPushService:
    android.media.MediaPlayer mediaPlayer -> a
    android.content.res.AssetFileDescriptor assetFileDescriptor -> b
    android.view.WindowManager windowManager -> c
    android.view.View mView -> d
    com.zgcar.com.main.MyApplication app -> e
    java.lang.String imei -> f
    android.content.SharedPreferences sf -> g
    android.os.Handler handler -> h
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void dealPushMessage(android.os.Bundle) -> a
    void setWindowDialog(java.lang.String) -> a
    void init() -> a
    void closeWindowSos() -> b
    void startSos() -> c
    com.zgcar.com.account.model.MessageInfos sendRequestPhoneMessage(java.lang.String) -> b
    android.media.MediaPlayer getMedia() -> d
    void stopSos() -> e
    android.content.SharedPreferences access$0(com.zgcar.com.receiver.MyPushService) -> a
    void access$1(com.zgcar.com.receiver.MyPushService) -> b
    void access$2(com.zgcar.com.receiver.MyPushService,java.lang.String) -> a
    com.zgcar.com.main.MyApplication access$3(com.zgcar.com.receiver.MyPushService) -> c
    void access$4(com.zgcar.com.receiver.MyPushService,android.os.Bundle) -> a
    void access$5(com.zgcar.com.receiver.MyPushService) -> d
    void access$6(com.zgcar.com.receiver.MyPushService) -> e
    android.media.MediaPlayer access$7(com.zgcar.com.receiver.MyPushService) -> f
com.zgcar.com.receiver.MyPushService$1 -> com.zgcar.com.receiver.a:
    com.zgcar.com.receiver.MyPushService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.receiver.MyPushService$2 -> com.zgcar.com.receiver.b:
    com.zgcar.com.receiver.MyPushService this$0 -> a
    void run() -> run
com.zgcar.com.receiver.MyPushService$3 -> com.zgcar.com.receiver.c:
    com.zgcar.com.receiver.MyPushService this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.receiver.MyPushService$4 -> com.zgcar.com.receiver.d:
    com.zgcar.com.receiver.MyPushService this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.receiver.MyPushService$5 -> com.zgcar.com.receiver.e:
    com.zgcar.com.receiver.MyPushService this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.zgcar.com.receiver.MyReceiver -> com.zgcar.com.receiver.MyReceiver:
    android.os.Bundle bundle -> a
    com.zgcar.com.main.MyApplication app -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void goActivity(android.content.Context) -> a
    void init(org.json.JSONObject) -> a
com.zgcar.com.socket.GetJsonString -> com.zgcar.com.c.a:
    java.lang.String getRequestJson(java.lang.String,java.lang.String,int,java.lang.String) -> a
com.zgcar.com.socket.ResolveServiceData -> com.zgcar.com.c.b:
    java.lang.String getAppLink() -> a
    android.graphics.Bitmap getUserBasics(android.content.SharedPreferences,android.content.Context,com.zgcar.com.main.MyApplication) -> a
    com.zgcar.com.account.model.MessageInfos getPhoneMessage() -> b
    java.util.List zoneFence() -> c
    com.zgcar.com.account.model.TerminalInfos setInfos(java.lang.String) -> a
    java.util.List getStudyModelInfos(android.app.Activity) -> a
    com.zgcar.com.account.model.StudyModelInfos getStudyinfo(org.json.JSONObject,android.app.Activity) -> a
    java.util.List getMyAlarmInfos(android.app.Activity,java.lang.String) -> a
    java.util.List getFimilyInfos(android.content.SharedPreferences,com.zgcar.com.main.MyApplication,android.content.Context) -> a
    java.util.List getGuysListInfos(android.content.SharedPreferences,com.zgcar.com.main.MyApplication,android.content.Context) -> b
    java.lang.String downImage(java.lang.String,java.lang.String,java.lang.String,android.content.SharedPreferences,int) -> a
    com.zgcar.com.history.entity.RedFlowerNumInfos setRedFlowerInfos(java.lang.String) -> b
    java.util.List isSucceed() -> d
    java.util.List getHistoryInfos() -> e
    java.lang.String getJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List historyroute() -> f
    com.zgcar.com.location.Entity.LocationTerminalListData terminalhistory() -> g
com.zgcar.com.socket.SocketUtil -> com.zgcar.com.c.c:
    java.net.Socket socket -> b
    org.json.JSONObject data -> c
    int errorCode -> a
    boolean isClose -> d
    boolean connectService(java.lang.String) -> a
    boolean socketConnect(int) -> a
    java.lang.String isFail(android.content.Context) -> a
    void close(boolean) -> a
    org.json.JSONObject getData() -> a
com.zgcar.com.start.ActivityGetPasswordOne -> com.zgcar.com.start.ActivityGetPasswordOne:
    android.widget.Button goNext -> a
    android.widget.EditText phoneNo -> b
    java.lang.String phoneNoStr -> c
    android.app.Dialog dialog -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    boolean isEmpty() -> b
    void getPhoneCode() -> c
    java.lang.String getReqtestJson() -> d
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.zgcar.com.start.ActivityGetPasswordOne) -> a
    android.app.Dialog access$1(com.zgcar.com.start.ActivityGetPasswordOne) -> b
    java.lang.String access$2(com.zgcar.com.start.ActivityGetPasswordOne) -> c
com.zgcar.com.start.ActivityGetPasswordOne$1 -> com.zgcar.com.start.a:
    com.zgcar.com.start.ActivityGetPasswordOne this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityInputCode -> com.zgcar.com.start.ActivityInputCode:
    java.lang.String phoneNo -> a
    android.widget.TextView phoneNoTv -> b
    android.widget.Button timer -> c
    android.app.Dialog dialog -> d
    int timeString -> e
    android.widget.EditText inputCode -> f
    boolean isEn -> g
    java.lang.Runnable timeTask -> h
    android.os.Handler handler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void initCnView(android.widget.TextView,android.widget.ImageButton) -> a
    void initEnView(android.widget.TextView,android.widget.ImageButton) -> b
    void showProgressDialog() -> b
    void dismissDialog() -> c
    void onClick(android.view.View) -> onClick
    boolean codeIsCanEffective(java.lang.String) -> a
    void nextRequest(java.lang.String) -> b
    java.lang.String getRequestJson(java.lang.String) -> c
    void getPhoneCode() -> d
    java.lang.String getReqtestJson() -> e
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.os.Handler access$0(com.zgcar.com.start.ActivityInputCode) -> a
    java.lang.Runnable access$1(com.zgcar.com.start.ActivityInputCode) -> b
    int access$2(com.zgcar.com.start.ActivityInputCode) -> c
    void access$3(com.zgcar.com.start.ActivityInputCode,int) -> a
    android.widget.Button access$4(com.zgcar.com.start.ActivityInputCode) -> d
    java.lang.String access$5(com.zgcar.com.start.ActivityInputCode,java.lang.String) -> a
    java.lang.String access$6(com.zgcar.com.start.ActivityInputCode) -> e
    java.lang.String access$7(com.zgcar.com.start.ActivityInputCode) -> f
    void access$8(com.zgcar.com.start.ActivityInputCode) -> g
com.zgcar.com.start.ActivityInputCode$1 -> com.zgcar.com.start.b:
    com.zgcar.com.start.ActivityInputCode this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityInputCode$2 -> com.zgcar.com.start.c:
    com.zgcar.com.start.ActivityInputCode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.start.ActivityInputCode$3 -> com.zgcar.com.start.d:
    com.zgcar.com.start.ActivityInputCode this$0 -> a
    java.lang.String val$code -> b
    void run() -> run
com.zgcar.com.start.ActivityInputCode$4 -> com.zgcar.com.start.e:
    com.zgcar.com.start.ActivityInputCode this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityLoadingInputPassword -> com.zgcar.com.start.ActivityLoadingInputPassword:
    java.lang.String phoneNo -> a
    android.widget.EditText psw -> b
    android.app.Dialog dialog -> c
    android.content.SharedPreferences sf -> d
    com.zgcar.com.main.MyApplication app -> e
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initialze() -> a
    void sendLodingReqtest(java.lang.String) -> a
    java.lang.String getRequestData(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.app.Dialog access$0(com.zgcar.com.start.ActivityLoadingInputPassword) -> a
    java.lang.String access$1(com.zgcar.com.start.ActivityLoadingInputPassword,java.lang.String) -> a
    com.zgcar.com.main.MyApplication access$2(com.zgcar.com.start.ActivityLoadingInputPassword) -> b
    java.lang.String access$3(com.zgcar.com.start.ActivityLoadingInputPassword) -> c
    android.content.SharedPreferences access$4(com.zgcar.com.start.ActivityLoadingInputPassword) -> d
    android.os.Handler access$5(com.zgcar.com.start.ActivityLoadingInputPassword) -> e
com.zgcar.com.start.ActivityLoadingInputPassword$1 -> com.zgcar.com.start.f:
    com.zgcar.com.start.ActivityLoadingInputPassword this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.start.ActivityLoadingInputPassword$2 -> com.zgcar.com.start.g:
    com.zgcar.com.start.ActivityLoadingInputPassword this$0 -> a
    java.lang.String val$password -> b
    void run() -> run
com.zgcar.com.start.ActivityLoadingInputPhoneNo -> com.zgcar.com.start.ActivityLoadingInputPhoneNo:
    android.widget.EditText phoneNo -> a
    android.app.Dialog dialog -> b
    java.lang.String num -> c
    android.os.Handler handler -> d
    void onCreate(android.os.Bundle) -> onCreate
    void isAutoLoading() -> a
    java.lang.String getRequestData(java.lang.String) -> a
    void sendLodingReqtest(java.lang.String,android.content.SharedPreferences,com.zgcar.com.main.MyApplication) -> a
    void initialize() -> b
    void dismissDialog() -> c
    void showProgressDialog() -> d
    void onClick(android.view.View) -> onClick
    void sendTextPhoneNo() -> e
    void getPhoneCode() -> f
    void onDestroy() -> onDestroy
    boolean editIsEmpty() -> g
    java.lang.String getJsondata(java.lang.String) -> b
    android.widget.EditText access$0(com.zgcar.com.start.ActivityLoadingInputPhoneNo) -> a
    void access$1(com.zgcar.com.start.ActivityLoadingInputPhoneNo) -> b
    void access$2(com.zgcar.com.start.ActivityLoadingInputPhoneNo) -> c
    java.lang.String access$3(com.zgcar.com.start.ActivityLoadingInputPhoneNo,java.lang.String) -> a
    java.lang.String access$4(com.zgcar.com.start.ActivityLoadingInputPhoneNo) -> d
    android.os.Handler access$5(com.zgcar.com.start.ActivityLoadingInputPhoneNo) -> e
    java.lang.String access$6(com.zgcar.com.start.ActivityLoadingInputPhoneNo,java.lang.String) -> b
com.zgcar.com.start.ActivityLoadingInputPhoneNo$1 -> com.zgcar.com.start.h:
    com.zgcar.com.start.ActivityLoadingInputPhoneNo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.start.ActivityLoadingInputPhoneNo$2 -> com.zgcar.com.start.i:
    com.zgcar.com.start.ActivityLoadingInputPhoneNo this$0 -> a
    java.lang.String val$password -> b
    com.zgcar.com.main.MyApplication val$app -> c
    android.content.SharedPreferences val$sf -> d
    void run() -> run
com.zgcar.com.start.ActivityLoadingInputPhoneNo$3 -> com.zgcar.com.start.j:
    com.zgcar.com.start.ActivityLoadingInputPhoneNo this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityLoadingInputPhoneNo$4 -> com.zgcar.com.start.k:
    com.zgcar.com.start.ActivityLoadingInputPhoneNo this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityNewPassword -> com.zgcar.com.start.ActivityNewPassword:
    android.widget.Button finish -> a
    java.lang.String phoneNo -> b
    java.lang.String code -> c
    android.widget.EditText pswText1 -> d
    android.widget.EditText pswText2 -> e
    android.app.Dialog dialog -> f
    java.lang.String cmd -> g
    android.widget.TextView title -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void sendRegisterRequrst() -> b
    java.lang.String getJsonData(java.lang.String) -> a
    void showProgressDialog() -> c
    void dismissDialog() -> d
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.zgcar.com.start.ActivityNewPassword,java.lang.String) -> a
    void access$1(com.zgcar.com.start.ActivityNewPassword) -> a
com.zgcar.com.start.ActivityNewPassword$1 -> com.zgcar.com.start.l:
    com.zgcar.com.start.ActivityNewPassword this$0 -> a
    java.lang.String val$psw2 -> b
    void run() -> run
com.zgcar.com.start.ActivityRegisterInputCode -> com.zgcar.com.start.ActivityRegisterInputCode:
    android.widget.TextView registerInputNum -> a
    android.widget.TextView getMessageCode -> b
    android.app.Dialog dialog -> c
    java.lang.String phoneNo -> d
    int timeString -> e
    android.widget.EditText code -> f
    java.lang.Runnable timeTask -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void sendRequest() -> a
    java.lang.String getRequestJson() -> b
    void initialize() -> c
    void onClick(android.view.View) -> onClick
    void nextRequest(java.lang.String) -> a
    java.lang.String getRequestJson(java.lang.String) -> b
    android.os.Handler access$0(com.zgcar.com.start.ActivityRegisterInputCode) -> a
    java.lang.Runnable access$1(com.zgcar.com.start.ActivityRegisterInputCode) -> b
    int access$2(com.zgcar.com.start.ActivityRegisterInputCode) -> c
    android.widget.TextView access$3(com.zgcar.com.start.ActivityRegisterInputCode) -> d
    void access$4(com.zgcar.com.start.ActivityRegisterInputCode,int) -> a
    java.lang.String access$5(com.zgcar.com.start.ActivityRegisterInputCode) -> e
    android.app.Dialog access$6(com.zgcar.com.start.ActivityRegisterInputCode) -> f
    java.lang.String access$7(com.zgcar.com.start.ActivityRegisterInputCode,java.lang.String) -> a
    java.lang.String access$8(com.zgcar.com.start.ActivityRegisterInputCode) -> g
com.zgcar.com.start.ActivityRegisterInputCode$1 -> com.zgcar.com.start.m:
    com.zgcar.com.start.ActivityRegisterInputCode this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityRegisterInputCode$2 -> com.zgcar.com.start.n:
    com.zgcar.com.start.ActivityRegisterInputCode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.start.ActivityRegisterInputCode$3 -> com.zgcar.com.start.o:
    com.zgcar.com.start.ActivityRegisterInputCode this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityRegisterInputCode$4 -> com.zgcar.com.start.p:
    com.zgcar.com.start.ActivityRegisterInputCode this$0 -> a
    java.lang.String val$code -> b
    void run() -> run
com.zgcar.com.start.ActivityRegisterInputIMEI -> com.zgcar.com.start.ActivityRegisterInputIMEI:
    android.app.Dialog dialog -> a
    java.lang.String phoneNo -> b
    android.widget.EditText imei -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> a
    void onClick(android.view.View) -> onClick
    void nextRequest(java.lang.String) -> a
    java.lang.String getRequestJson(java.lang.String) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showProgressDialog() -> b
    void dismissDialog() -> c
    java.lang.String access$0(com.zgcar.com.start.ActivityRegisterInputIMEI,java.lang.String) -> a
    void access$1(com.zgcar.com.start.ActivityRegisterInputIMEI) -> a
    java.lang.String access$2(com.zgcar.com.start.ActivityRegisterInputIMEI) -> b
com.zgcar.com.start.ActivityRegisterInputIMEI$1 -> com.zgcar.com.start.q:
    com.zgcar.com.start.ActivityRegisterInputIMEI this$0 -> a
    java.lang.String val$imei -> b
    void run() -> run
com.zgcar.com.start.ActivityRegisterScanning -> com.zgcar.com.start.ActivityRegisterScanning:
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler handler -> a
    com.zgcar.com.zxing.view.ViewfinderView viewfinderView -> b
    boolean hasSurface -> c
    java.util.Vector decodeFormats -> d
    java.lang.String characterSet -> e
    com.zgcar.com.zxing.decoding.InactivityTimer inactivityTimer -> f
    android.media.MediaPlayer mediaPlayer -> g
    boolean playBeep -> h
    boolean vibrate -> i
    android.media.MediaPlayer$OnCompletionListener beepListener -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initCamera(android.view.SurfaceHolder) -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    com.zgcar.com.zxing.view.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    void drawViewfinder() -> c
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void initBeepSound() -> d
    void playBeepSoundAndVibrate() -> e
com.zgcar.com.start.ActivityRegisterScanning$1 -> com.zgcar.com.start.r:
    com.zgcar.com.start.ActivityRegisterScanning this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.zgcar.com.start.ActivityRegisterScanning$2 -> com.zgcar.com.start.s:
    com.zgcar.com.start.ActivityRegisterScanning this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.start.ActivityRegisterScanning$3 -> com.zgcar.com.start.t:
    com.zgcar.com.start.ActivityRegisterScanning this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.start.ActivityWelcome -> com.zgcar.com.start.ActivityWelcome:
    android.app.ProgressDialog progressDialog -> a
    java.lang.String link -> b
    android.os.Handler handler -> c
    void onCreate(android.os.Bundle) -> onCreate
    void showDialog() -> c
    void update() -> d
    void next() -> e
    void record() -> f
    java.lang.String getRequestJson() -> g
    void getAppVersionInfo() -> h
    void update(java.lang.String) -> a
    void downSucceed() -> a
    void downFailed() -> b
    void access$0(com.zgcar.com.start.ActivityWelcome) -> a
    void access$1(com.zgcar.com.start.ActivityWelcome) -> b
    android.app.ProgressDialog access$2(com.zgcar.com.start.ActivityWelcome) -> c
    android.os.Handler access$3(com.zgcar.com.start.ActivityWelcome) -> d
    void access$4(com.zgcar.com.start.ActivityWelcome) -> e
    java.lang.String access$5(com.zgcar.com.start.ActivityWelcome) -> f
    java.lang.String access$6(com.zgcar.com.start.ActivityWelcome) -> g
    void access$7(com.zgcar.com.start.ActivityWelcome,java.lang.String) -> a
com.zgcar.com.start.ActivityWelcome$1 -> com.zgcar.com.start.u:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.start.ActivityWelcome$2 -> com.zgcar.com.start.v:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.start.ActivityWelcome$3 -> com.zgcar.com.start.w:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.start.ActivityWelcome$4 -> com.zgcar.com.start.x:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityWelcome$5 -> com.zgcar.com.start.y:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityWelcome$6 -> com.zgcar.com.start.z:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityWelcome$7 -> com.zgcar.com.start.aa:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void run() -> run
com.zgcar.com.start.ActivityWelcome$8 -> com.zgcar.com.start.ab:
    com.zgcar.com.start.ActivityWelcome this$0 -> a
    void run() -> run
com.zgcar.com.statisty.ActivityAccStatisty -> com.zgcar.com.statisty.ActivityAccStatisty:
    android.widget.TextView timeTv -> a
    android.app.Dialog dialog -> b
    int tempCheckId -> c
    android.widget.Button endTimeBt -> d
    android.widget.Button startTimeBt -> e
    java.lang.String[] yearArray -> f
    java.lang.String[] monthArray -> g
    java.lang.String[] dayArray -> h
    java.lang.String[] hourArray -> i
    java.lang.String[] minArray -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showGetTimeView(boolean) -> a
    void initWheelview(com.zgcar.com.wheelview.WheelView) -> a
    void showSelectTimeView() -> b
    void dialogDismiss() -> c
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void showCostumTimeDialog() -> d
    java.lang.String[] access$0(com.zgcar.com.statisty.ActivityAccStatisty) -> a
    java.lang.String[] access$1(com.zgcar.com.statisty.ActivityAccStatisty) -> b
    void access$2(com.zgcar.com.statisty.ActivityAccStatisty,java.lang.String[]) -> a
    java.lang.String[] access$3(com.zgcar.com.statisty.ActivityAccStatisty) -> c
    android.widget.Button access$4(com.zgcar.com.statisty.ActivityAccStatisty) -> d
    java.lang.String[] access$5(com.zgcar.com.statisty.ActivityAccStatisty) -> e
    java.lang.String[] access$6(com.zgcar.com.statisty.ActivityAccStatisty) -> f
    android.widget.Button access$7(com.zgcar.com.statisty.ActivityAccStatisty) -> g
com.zgcar.com.statisty.ActivityAccStatisty$1 -> com.zgcar.com.statisty.a:
    com.zgcar.com.statisty.ActivityAccStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityAccStatisty$2 -> com.zgcar.com.statisty.b:
    com.zgcar.com.statisty.ActivityAccStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityAccStatisty$3 -> com.zgcar.com.statisty.c:
    com.zgcar.com.statisty.ActivityAccStatisty this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityAccStatisty$4 -> com.zgcar.com.statisty.d:
    com.zgcar.com.statisty.ActivityAccStatisty this$0 -> a
    boolean val$isStart -> b
    com.zgcar.com.wheelview.WheelView val$year -> c
    com.zgcar.com.wheelview.WheelView val$month -> d
    com.zgcar.com.wheelview.WheelView val$day -> e
    com.zgcar.com.wheelview.WheelView val$hour -> f
    com.zgcar.com.wheelview.WheelView val$min -> g
    android.app.Dialog val$dialog -> h
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityAlarmStatisty -> com.zgcar.com.statisty.ActivityAlarmStatisty:
    android.widget.TextView timeTv -> a
    android.app.Dialog dialog -> b
    int tempCheckId -> c
    android.widget.Button endTimeBt -> d
    android.widget.Button startTimeBt -> e
    java.lang.String[] yearArray -> f
    java.lang.String[] monthArray -> g
    java.lang.String[] dayArray -> h
    java.lang.String[] hourArray -> i
    java.lang.String[] minArray -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showGetTimeView(boolean) -> a
    void initWheelview(com.zgcar.com.wheelview.WheelView) -> a
    void showSelectTimeView() -> b
    void dialogDismiss() -> c
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void showCostumTimeDialog() -> d
    java.lang.String[] access$0(com.zgcar.com.statisty.ActivityAlarmStatisty) -> a
    java.lang.String[] access$1(com.zgcar.com.statisty.ActivityAlarmStatisty) -> b
    void access$2(com.zgcar.com.statisty.ActivityAlarmStatisty,java.lang.String[]) -> a
    java.lang.String[] access$3(com.zgcar.com.statisty.ActivityAlarmStatisty) -> c
    android.widget.Button access$4(com.zgcar.com.statisty.ActivityAlarmStatisty) -> d
    java.lang.String[] access$5(com.zgcar.com.statisty.ActivityAlarmStatisty) -> e
    java.lang.String[] access$6(com.zgcar.com.statisty.ActivityAlarmStatisty) -> f
    android.widget.Button access$7(com.zgcar.com.statisty.ActivityAlarmStatisty) -> g
com.zgcar.com.statisty.ActivityAlarmStatisty$1 -> com.zgcar.com.statisty.e:
    com.zgcar.com.statisty.ActivityAlarmStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityAlarmStatisty$2 -> com.zgcar.com.statisty.f:
    com.zgcar.com.statisty.ActivityAlarmStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityAlarmStatisty$3 -> com.zgcar.com.statisty.g:
    com.zgcar.com.statisty.ActivityAlarmStatisty this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityAlarmStatisty$4 -> com.zgcar.com.statisty.h:
    com.zgcar.com.statisty.ActivityAlarmStatisty this$0 -> a
    boolean val$isStart -> b
    com.zgcar.com.wheelview.WheelView val$year -> c
    com.zgcar.com.wheelview.WheelView val$month -> d
    com.zgcar.com.wheelview.WheelView val$day -> e
    com.zgcar.com.wheelview.WheelView val$hour -> f
    com.zgcar.com.wheelview.WheelView val$min -> g
    android.app.Dialog val$dialog -> h
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityMileageStatisty -> com.zgcar.com.statisty.ActivityMileageStatisty:
    android.widget.TextView timeTv -> a
    android.app.Dialog dialog -> b
    int tempCheckId -> c
    android.widget.Button endTimeBt -> d
    android.widget.Button startTimeBt -> e
    java.lang.String[] yearArray -> f
    java.lang.String[] monthArray -> g
    java.lang.String[] dayArray -> h
    java.lang.String[] hourArray -> i
    java.lang.String[] minArray -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showGetTimeView(boolean) -> a
    void initWheelview(com.zgcar.com.wheelview.WheelView) -> a
    void showSelectTimeView() -> b
    void dialogDismiss() -> c
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void showCostumTimeDialog() -> d
    java.lang.String[] access$0(com.zgcar.com.statisty.ActivityMileageStatisty) -> a
    java.lang.String[] access$1(com.zgcar.com.statisty.ActivityMileageStatisty) -> b
    void access$2(com.zgcar.com.statisty.ActivityMileageStatisty,java.lang.String[]) -> a
    java.lang.String[] access$3(com.zgcar.com.statisty.ActivityMileageStatisty) -> c
    android.widget.Button access$4(com.zgcar.com.statisty.ActivityMileageStatisty) -> d
    java.lang.String[] access$5(com.zgcar.com.statisty.ActivityMileageStatisty) -> e
    java.lang.String[] access$6(com.zgcar.com.statisty.ActivityMileageStatisty) -> f
    android.widget.Button access$7(com.zgcar.com.statisty.ActivityMileageStatisty) -> g
com.zgcar.com.statisty.ActivityMileageStatisty$1 -> com.zgcar.com.statisty.i:
    com.zgcar.com.statisty.ActivityMileageStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityMileageStatisty$2 -> com.zgcar.com.statisty.j:
    com.zgcar.com.statisty.ActivityMileageStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityMileageStatisty$3 -> com.zgcar.com.statisty.k:
    com.zgcar.com.statisty.ActivityMileageStatisty this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityMileageStatisty$4 -> com.zgcar.com.statisty.l:
    com.zgcar.com.statisty.ActivityMileageStatisty this$0 -> a
    boolean val$isStart -> b
    com.zgcar.com.wheelview.WheelView val$year -> c
    com.zgcar.com.wheelview.WheelView val$month -> d
    com.zgcar.com.wheelview.WheelView val$day -> e
    com.zgcar.com.wheelview.WheelView val$hour -> f
    com.zgcar.com.wheelview.WheelView val$min -> g
    android.app.Dialog val$dialog -> h
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityOverSpeedStatisty -> com.zgcar.com.statisty.ActivityOverSpeedStatisty:
    android.widget.TextView timeTv -> a
    android.app.Dialog dialog -> b
    int tempCheckId -> c
    android.widget.Button endTimeBt -> d
    android.widget.Button startTimeBt -> e
    java.lang.String[] yearArray -> f
    java.lang.String[] monthArray -> g
    java.lang.String[] dayArray -> h
    java.lang.String[] hourArray -> i
    java.lang.String[] minArray -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showGetTimeView(boolean) -> a
    void initWheelview(com.zgcar.com.wheelview.WheelView) -> a
    void showSelectTimeView() -> b
    void dialogDismiss() -> c
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void showCostumTimeDialog() -> d
    java.lang.String[] access$0(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> a
    java.lang.String[] access$1(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> b
    void access$2(com.zgcar.com.statisty.ActivityOverSpeedStatisty,java.lang.String[]) -> a
    java.lang.String[] access$3(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> c
    android.widget.Button access$4(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> d
    java.lang.String[] access$5(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> e
    java.lang.String[] access$6(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> f
    android.widget.Button access$7(com.zgcar.com.statisty.ActivityOverSpeedStatisty) -> g
com.zgcar.com.statisty.ActivityOverSpeedStatisty$1 -> com.zgcar.com.statisty.m:
    com.zgcar.com.statisty.ActivityOverSpeedStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityOverSpeedStatisty$2 -> com.zgcar.com.statisty.n:
    com.zgcar.com.statisty.ActivityOverSpeedStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityOverSpeedStatisty$3 -> com.zgcar.com.statisty.o:
    com.zgcar.com.statisty.ActivityOverSpeedStatisty this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityOverSpeedStatisty$4 -> com.zgcar.com.statisty.p:
    com.zgcar.com.statisty.ActivityOverSpeedStatisty this$0 -> a
    boolean val$isStart -> b
    com.zgcar.com.wheelview.WheelView val$year -> c
    com.zgcar.com.wheelview.WheelView val$month -> d
    com.zgcar.com.wheelview.WheelView val$day -> e
    com.zgcar.com.wheelview.WheelView val$hour -> f
    com.zgcar.com.wheelview.WheelView val$min -> g
    android.app.Dialog val$dialog -> h
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityTravelStatisty -> com.zgcar.com.statisty.ActivityTravelStatisty:
    android.widget.TextView timeTv -> a
    android.app.Dialog dialog -> b
    int tempCheckId -> c
    android.widget.Button endTimeBt -> d
    android.widget.Button startTimeBt -> e
    java.lang.String[] yearArray -> f
    java.lang.String[] monthArray -> g
    java.lang.String[] dayArray -> h
    java.lang.String[] hourArray -> i
    java.lang.String[] minArray -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showGetTimeView(boolean) -> a
    void initWheelview(com.zgcar.com.wheelview.WheelView) -> a
    void showSelectTimeView() -> b
    void dialogDismiss() -> c
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void showCostumTimeDialog() -> d
    java.lang.String[] access$0(com.zgcar.com.statisty.ActivityTravelStatisty) -> a
    java.lang.String[] access$1(com.zgcar.com.statisty.ActivityTravelStatisty) -> b
    void access$2(com.zgcar.com.statisty.ActivityTravelStatisty,java.lang.String[]) -> a
    java.lang.String[] access$3(com.zgcar.com.statisty.ActivityTravelStatisty) -> c
    android.widget.Button access$4(com.zgcar.com.statisty.ActivityTravelStatisty) -> d
    java.lang.String[] access$5(com.zgcar.com.statisty.ActivityTravelStatisty) -> e
    java.lang.String[] access$6(com.zgcar.com.statisty.ActivityTravelStatisty) -> f
    android.widget.Button access$7(com.zgcar.com.statisty.ActivityTravelStatisty) -> g
com.zgcar.com.statisty.ActivityTravelStatisty$1 -> com.zgcar.com.statisty.q:
    com.zgcar.com.statisty.ActivityTravelStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityTravelStatisty$2 -> com.zgcar.com.statisty.r:
    com.zgcar.com.statisty.ActivityTravelStatisty this$0 -> a
    com.zgcar.com.wheelview.WheelView val$year -> b
    com.zgcar.com.wheelview.WheelView val$month -> c
    com.zgcar.com.wheelview.WheelView val$day -> d
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.statisty.ActivityTravelStatisty$3 -> com.zgcar.com.statisty.s:
    com.zgcar.com.statisty.ActivityTravelStatisty this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.zgcar.com.statisty.ActivityTravelStatisty$4 -> com.zgcar.com.statisty.t:
    com.zgcar.com.statisty.ActivityTravelStatisty this$0 -> a
    boolean val$isStart -> b
    com.zgcar.com.wheelview.WheelView val$year -> c
    com.zgcar.com.wheelview.WheelView val$month -> d
    com.zgcar.com.wheelview.WheelView val$day -> e
    com.zgcar.com.wheelview.WheelView val$hour -> f
    com.zgcar.com.wheelview.WheelView val$min -> g
    android.app.Dialog val$dialog -> h
    void onClick(android.view.View) -> onClick
com.zgcar.com.util.CircleImageView -> com.zgcar.com.util.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.Bitmap$Config BITMAP_CONFIG -> b
    android.graphics.RectF mDrawableRect -> c
    android.graphics.RectF mBorderRect -> d
    android.graphics.Matrix mShaderMatrix -> e
    android.graphics.Paint mBitmapPaint -> f
    android.graphics.Paint mBorderPaint -> g
    int mBorderColor -> h
    int mBorderWidth -> i
    android.graphics.Bitmap mBitmap -> j
    android.graphics.BitmapShader mBitmapShader -> k
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mDrawableRadius -> n
    float mBorderRadius -> o
    boolean mReady -> p
    boolean mSetupPending -> q
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> a
    void updateShaderMatrix() -> b
com.zgcar.com.util.CrashHandler -> com.zgcar.com.util.a:
    java.lang.String TAG -> a
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    com.zgcar.com.util.CrashHandler instance -> e
    com.zgcar.com.util.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    void saveCrashInfo2File(java.lang.Throwable) -> b
com.zgcar.com.util.DownFile -> com.zgcar.com.util.b:
    boolean downFile(java.lang.String,java.io.File) -> a
    boolean upDateApp(java.lang.String,java.io.File,com.zgcar.com.util.DownFile$OnDownLoadLisener) -> a
com.zgcar.com.util.DownFile$OnDownLoadLisener -> com.zgcar.com.util.c:
    void update(java.lang.String) -> a
    void downSucceed() -> a
    void downFailed() -> b
com.zgcar.com.util.ErrorCode -> com.zgcar.com.util.d:
    java.lang.String getErrorMsg(int,android.content.Context) -> a
com.zgcar.com.util.GetScreenShotImage -> com.zgcar.com.util.e:
    android.app.Activity activity -> a
    java.lang.String getShareImagePath() -> a
    boolean savePic(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap takeScreenShot() -> b
com.zgcar.com.util.KCalendar -> com.zgcar.com.util.KCalendar:
    int COLOR_BG_WEEK_TITLE -> a
    int COLOR_TX_WEEK_TITLE -> b
    int COLOR_TX_THIS_MONTH_DAY -> c
    int COLOR_TX_OTHER_MONTH_DAY -> d
    int COLOR_TX_THIS_DAY -> e
    int COLOR_BG_THIS_DAY -> f
    int COLOR_BG_CALENDAR -> g
    android.view.GestureDetector gd -> i
    android.view.animation.Animation push_left_in -> j
    android.view.animation.Animation push_left_out -> k
    android.view.animation.Animation push_right_in -> l
    android.view.animation.Animation push_right_out -> m
    int ROWS_TOTAL -> n
    int COLS_TOTAL -> o
    java.lang.String[][] dates -> p
    float tb -> q
    android.content.Context context -> h
    com.zgcar.com.util.KCalendar$OnCalendarClickListener onCalendarClickListener -> r
    com.zgcar.com.util.KCalendar$OnCalendarDateChangedListener onCalendarDateChangedListener -> s
    java.lang.String[] weekday -> t
    int calendarYear -> u
    int calendarMonth -> v
    java.util.Date thisday -> w
    java.util.Date calendarday -> x
    android.widget.LinearLayout firstCalendar -> y
    android.widget.LinearLayout secondCalendar -> z
    android.widget.LinearLayout currentCalendar -> A
    java.util.Map marksMap -> B
    java.util.Map dayBgColorMap -> C
    void init() -> d
    void drawFrame(android.widget.LinearLayout) -> a
    void setCalendarDate() -> e
    void showCalendar(int,int) -> a
    void nextMonth() -> a
    void lastMonth() -> b
    int getCalendarYear() -> getCalendarYear
    int getCalendarMonth() -> getCalendarMonth
    void addMarks(java.util.List,int) -> a
    void setCalendarDayBgColor(java.lang.String,int) -> a
    void removeAllBgColor() -> c
    void setMarker(android.widget.RelativeLayout,int,int) -> a
    int getDateNum(int,int) -> b
    android.widget.RelativeLayout getDateView(int,int) -> c
    java.lang.String format(java.util.Date) -> a
    java.lang.String addZero(int,int) -> d
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    com.zgcar.com.util.KCalendar$OnCalendarClickListener getOnCalendarClickListener() -> getOnCalendarClickListener
    void setOnCalendarClickListener(com.zgcar.com.util.KCalendar$OnCalendarClickListener) -> setOnCalendarClickListener
    com.zgcar.com.util.KCalendar$OnCalendarDateChangedListener getOnCalendarDateChangedListener() -> getOnCalendarDateChangedListener
    void setOnCalendarDateChangedListener(com.zgcar.com.util.KCalendar$OnCalendarDateChangedListener) -> setOnCalendarDateChangedListener
    java.util.Date getThisday() -> getThisday
    void setThisday(java.util.Date) -> setThisday
    java.util.Map getDayBgColorMap() -> getDayBgColorMap
    void setDayBgColorMap(java.util.Map) -> setDayBgColorMap
    com.zgcar.com.util.KCalendar$OnCalendarClickListener access$0(com.zgcar.com.util.KCalendar) -> a
    java.lang.String[][] access$1(com.zgcar.com.util.KCalendar) -> b
com.zgcar.com.util.KCalendar$1 -> com.zgcar.com.util.f:
    com.zgcar.com.util.KCalendar this$0 -> a
    void onClick(android.view.View) -> onClick
com.zgcar.com.util.KCalendar$OnCalendarClickListener -> com.zgcar.com.util.g:
    void onCalendarClick(int,int,java.lang.String) -> a
com.zgcar.com.util.KCalendar$OnCalendarDateChangedListener -> com.zgcar.com.util.h:
    void onCalendarDateChanged(int,int) -> a
com.zgcar.com.util.MyTextView -> com.zgcar.com.util.MyTextView:
    boolean isFocused() -> isFocused
com.zgcar.com.util.PopupWindows -> com.zgcar.com.util.i:
    java.lang.String date -> a
    android.content.Context mContext -> b
    android.view.View parent -> c
    android.widget.TextView yearAndMonthTv -> d
    com.zgcar.com.util.PopupWindows$PopupWindowCallback callback -> e
    void initView() -> a
    void access$0(com.zgcar.com.util.PopupWindows,java.lang.String) -> a
    android.widget.TextView access$1(com.zgcar.com.util.PopupWindows) -> a
    java.lang.String access$2(com.zgcar.com.util.PopupWindows) -> b
    com.zgcar.com.util.PopupWindows$PopupWindowCallback access$3(com.zgcar.com.util.PopupWindows) -> c
com.zgcar.com.util.PopupWindows$1 -> com.zgcar.com.util.j:
    com.zgcar.com.util.PopupWindows this$0 -> a
    com.zgcar.com.util.KCalendar val$calendar -> b
    void onCalendarClick(int,int,java.lang.String) -> a
com.zgcar.com.util.PopupWindows$2 -> com.zgcar.com.util.k:
    com.zgcar.com.util.PopupWindows this$0 -> a
    void onCalendarDateChanged(int,int) -> a
com.zgcar.com.util.PopupWindows$PopupWindowCallback -> com.zgcar.com.util.l:
    void getDataHositoryInfos(java.lang.String) -> a
com.zgcar.com.util.Quit -> com.zgcar.com.util.m:
    java.util.List list -> a
    java.util.List cacheActivityList -> b
    void addCacheActivity(android.app.Activity) -> a
    void recyclingCacheActivity() -> a
    void addActivity(android.app.Activity) -> b
    void quit() -> b
    void recycling(int) -> a
com.zgcar.com.util.SetTitleBackground -> com.zgcar.com.util.n:
    void setTitleBg(android.app.Activity,int) -> a
com.zgcar.com.util.SystemBarTintManager -> com.zgcar.com.util.o:
    java.lang.String sNavBarOverride -> a
    com.zgcar.com.util.SystemBarTintManager$SystemBarConfig mConfig -> b
    boolean mStatusBarAvailable -> c
    boolean mNavBarAvailable -> d
    boolean mStatusBarTintEnabled -> e
    android.view.View mStatusBarTintView -> f
    android.view.View mNavBarTintView -> g
    void setStatusBarTintEnabled(boolean) -> a
    void setStatusBarTintResource(int) -> a
    void setupStatusBarView(android.content.Context,android.view.ViewGroup) -> a
    void setupNavBarView(android.content.Context,android.view.ViewGroup) -> b
    java.lang.String access$0() -> a
com.zgcar.com.util.SystemBarTintManager$SystemBarConfig -> com.zgcar.com.util.p:
    boolean mTranslucentStatusBar -> a
    boolean mTranslucentNavBar -> b
    int mStatusBarHeight -> c
    int mActionBarHeight -> d
    boolean mHasNavigationBar -> e
    int mNavigationBarHeight -> f
    int mNavigationBarWidth -> g
    boolean mInPortrait -> h
    float mSmallestWidthDp -> i
    int getActionBarHeight(android.content.Context) -> a
    int getNavigationBarHeight(android.content.Context) -> b
    int getNavigationBarWidth(android.content.Context) -> c
    boolean hasNavBar(android.content.Context) -> d
    int getInternalDimensionSize(android.content.res.Resources,java.lang.String) -> a
    float getSmallestWidthDp(android.app.Activity) -> a
    boolean isNavigationAtBottom() -> a
    int getStatusBarHeight() -> b
    boolean hasNavigtionBar() -> c
    int getNavigationBarHeight() -> d
    int getNavigationBarWidth() -> e
com.zgcar.com.util.UpLoadFile -> com.zgcar.com.util.q:
    boolean toUploadFile(java.io.File,java.lang.String) -> a
com.zgcar.com.util.Util -> com.zgcar.com.util.r:
    float dip2px(android.content.Context,float) -> a
    float px2dip(android.content.Context,float) -> b
    boolean isConnected(android.content.Context) -> a
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(java.lang.String,int,int) -> a
    boolean saveBitmapToSDCard(android.graphics.Bitmap,java.lang.String) -> a
    java.lang.String getTodayDate() -> a
    java.lang.String getCurrentTime() -> b
    java.lang.String getTime2(java.lang.String) -> a
    void showToastBottom(android.content.Context,java.lang.String) -> a
    void showToastCenter(android.content.Context,java.lang.String) -> b
    java.lang.String getSDPath() -> c
    boolean isCanPlayer(java.lang.String) -> b
    android.graphics.Bitmap createQRImage(java.lang.String,int,int) -> b
    boolean isAvilible(android.content.Context,java.lang.String) -> c
    java.lang.String[] getYearArray() -> d
    java.lang.String[] getMonthArray() -> e
    java.lang.String[] getDayArray(java.lang.String,java.lang.String) -> a
com.zgcar.com.wheelview.ItemsRange -> com.zgcar.com.wheelview.a:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
com.zgcar.com.wheelview.OnWheelChangedListener -> com.zgcar.com.wheelview.b:
    void onChanged(com.zgcar.com.wheelview.WheelView,int,int) -> a
com.zgcar.com.wheelview.OnWheelClickedListener -> com.zgcar.com.wheelview.c:
    void onItemClicked(com.zgcar.com.wheelview.WheelView,int) -> a
com.zgcar.com.wheelview.OnWheelScrollListener -> com.zgcar.com.wheelview.d:
    void onScrollingStarted(com.zgcar.com.wheelview.WheelView) -> a
    void onScrollingFinished(com.zgcar.com.wheelview.WheelView) -> b
com.zgcar.com.wheelview.WheelRecycle -> com.zgcar.com.wheelview.e:
    java.util.List items -> a
    java.util.List emptyItems -> b
    com.zgcar.com.wheelview.WheelView wheel -> c
    int recycleItems(android.widget.LinearLayout,int,com.zgcar.com.wheelview.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    void recycleView(android.view.View,int) -> a
    android.view.View getCachedView(java.util.List) -> a
com.zgcar.com.wheelview.WheelScroller -> com.zgcar.com.wheelview.f:
    com.zgcar.com.wheelview.WheelScroller$ScrollingListener listener -> a
    android.content.Context context -> b
    android.view.GestureDetector gestureDetector -> c
    android.widget.Scroller scroller -> d
    int lastScrollY -> e
    float lastTouchedY -> f
    boolean isScrollingPerformed -> g
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> h
    int MESSAGE_SCROLL -> i
    int MESSAGE_JUSTIFY -> j
    android.os.Handler animationHandler -> k
    void setInterpolator(android.view.animation.Interpolator) -> a
    void scroll(int,int) -> a
    void stopScrolling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setNextMessage(int) -> a
    void clearMessages() -> c
    void justify() -> d
    void startScrolling() -> e
    void finishScrolling() -> b
    void access$0(com.zgcar.com.wheelview.WheelScroller,int) -> a
    android.widget.Scroller access$1(com.zgcar.com.wheelview.WheelScroller) -> a
    int access$2(com.zgcar.com.wheelview.WheelScroller) -> b
    void access$3(com.zgcar.com.wheelview.WheelScroller,int) -> b
    com.zgcar.com.wheelview.WheelScroller$ScrollingListener access$4(com.zgcar.com.wheelview.WheelScroller) -> c
    android.os.Handler access$5(com.zgcar.com.wheelview.WheelScroller) -> d
    void access$6(com.zgcar.com.wheelview.WheelScroller) -> e
com.zgcar.com.wheelview.WheelScroller$1 -> com.zgcar.com.wheelview.g:
    com.zgcar.com.wheelview.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.zgcar.com.wheelview.WheelScroller$2 -> com.zgcar.com.wheelview.h:
    com.zgcar.com.wheelview.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.zgcar.com.wheelview.WheelScroller$ScrollingListener -> com.zgcar.com.wheelview.i:
    void onScroll(int) -> a
    void onStarted() -> a
    void onFinished() -> b
    void onJustify() -> c
com.zgcar.com.wheelview.WheelView -> com.zgcar.com.wheelview.WheelView:
    int[] SHADOWS_COLORS -> c
    int currentItem -> d
    int gravity -> e
    int textSize -> f
    int visibleItems -> g
    int itemHeight -> h
    android.graphics.drawable.Drawable centerDrawable -> i
    android.graphics.drawable.GradientDrawable topShadow -> j
    android.graphics.drawable.GradientDrawable bottomShadow -> k
    com.zgcar.com.wheelview.WheelScroller scroller -> l
    boolean isScrollingPerformed -> m
    int scrollingOffset -> n
    boolean isCyclic -> a
    android.widget.LinearLayout itemsLayout -> o
    int firstItem -> p
    com.zgcar.com.wheelview.adapters.WheelViewAdapter viewAdapter -> q
    com.zgcar.com.wheelview.WheelRecycle recycle -> r
    java.util.List changingListeners -> s
    java.util.List scrollingListeners -> t
    java.util.List clickingListeners -> u
    com.zgcar.com.wheelview.WheelScroller$ScrollingListener scrollingListener -> b
    android.database.DataSetObserver dataObserver -> v
    void initData(android.content.Context) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    int getVisibleItems() -> getVisibleItems
    void setVisibleItems(int) -> setVisibleItems
    com.zgcar.com.wheelview.adapters.WheelViewAdapter getViewAdapter() -> getViewAdapter
    void setViewAdapter(com.zgcar.com.wheelview.adapters.WheelViewAdapter) -> setViewAdapter
    void addChangingListener(com.zgcar.com.wheelview.OnWheelChangedListener) -> a
    void notifyChangingListeners(int,int) -> a
    void addScrollingListener(com.zgcar.com.wheelview.OnWheelScrollListener) -> a
    void notifyScrollingListenersAboutStart() -> a
    void notifyScrollingListenersAboutEnd() -> b
    void notifyClickListenersAboutClick(int) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> setCurrentItem
    boolean isCyclic() -> c
    void setCyclic(boolean) -> setCyclic
    void invalidateWheel(boolean) -> a
    void initResourcesIfNecessary() -> d
    int getDesiredHeight(android.widget.LinearLayout) -> a
    int getItemHeight() -> getItemHeight
    int calculateLayoutWidth(int,int) -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawItems(android.graphics.Canvas) -> a
    void drawCenterRect(android.graphics.Canvas) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> b
    void scroll(int,int) -> b
    com.zgcar.com.wheelview.ItemsRange getItemsRange() -> getItemsRange
    boolean rebuildItems() -> e
    void updateView() -> f
    void createItemsLayout() -> g
    void buildViewForMeasuring() -> h
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> c
    android.view.View getItemView(int) -> d
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    int getTextSize() -> getTextSize
    void setTextSize(int) -> setTextSize
    void access$0(com.zgcar.com.wheelview.WheelView,boolean) -> a
    void access$1(com.zgcar.com.wheelview.WheelView,int) -> a
    int access$2(com.zgcar.com.wheelview.WheelView) -> a
    void access$3(com.zgcar.com.wheelview.WheelView,int) -> b
    com.zgcar.com.wheelview.WheelScroller access$4(com.zgcar.com.wheelview.WheelView) -> b
    boolean access$5(com.zgcar.com.wheelview.WheelView) -> c
com.zgcar.com.wheelview.WheelView$1 -> com.zgcar.com.wheelview.j:
    com.zgcar.com.wheelview.WheelView this$0 -> a
    void onStarted() -> a
    void onScroll(int) -> a
    void onFinished() -> b
    void onJustify() -> c
com.zgcar.com.wheelview.WheelView$2 -> com.zgcar.com.wheelview.k:
    com.zgcar.com.wheelview.WheelView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.zgcar.com.wheelview.adapters.AbstractWheelAdapter -> com.zgcar.com.wheelview.a.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.zgcar.com.wheelview.adapters.AbstractWheelTextAdapter -> com.zgcar.com.wheelview.a.b:
    int textColor -> f
    int textSize -> g
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    int itemResourceId -> c
    int itemTextResourceId -> d
    int emptyItemResourceId -> e
    java.lang.CharSequence getItemText(int) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup,int,int) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView,int,int) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
com.zgcar.com.wheelview.adapters.ArrayWheelAdapter -> com.zgcar.com.wheelview.a.c:
    java.lang.Object[] items -> f
    java.lang.CharSequence getItemText(int) -> a
    int getItemsCount() -> a
com.zgcar.com.wheelview.adapters.NumericWheelAdapter -> com.zgcar.com.wheelview.a.d:
    int minValue -> f
    int maxValue -> g
    java.lang.String format -> h
    java.lang.CharSequence getItemText(int) -> a
    int getItemsCount() -> a
com.zgcar.com.wheelview.adapters.WheelViewAdapter -> com.zgcar.com.wheelview.a.e:
    int getItemsCount() -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup,int,int) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.zgcar.com.zxing.camera.AutoFocusCallback -> com.zgcar.com.zxing.a.a:
    java.lang.String TAG -> a
    android.os.Handler autoFocusHandler -> b
    int autoFocusMessage -> c
    void setHandler(android.os.Handler,int) -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.zgcar.com.zxing.camera.CameraConfigurationManager -> com.zgcar.com.zxing.a.b:
    java.lang.String TAG -> a
    java.util.regex.Pattern COMMA_PATTERN -> b
    android.content.Context context -> c
    android.graphics.Point screenResolution -> d
    android.graphics.Point cameraResolution -> e
    int previewFormat -> f
    java.lang.String previewFormatString -> g
    void initFromCameraParameters(android.hardware.Camera) -> a
    void setDesiredCameraParameters(android.hardware.Camera) -> b
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    int getPreviewFormat() -> c
    java.lang.String getPreviewFormatString() -> d
    android.graphics.Point getCameraResolution(android.hardware.Camera$Parameters,android.graphics.Point) -> a
    android.graphics.Point findBestPreviewSizeValue(java.lang.CharSequence,android.graphics.Point) -> a
    int findBestMotZoomValue(java.lang.CharSequence,int) -> a
    void setFlash(android.hardware.Camera$Parameters) -> a
    void setZoom(android.hardware.Camera$Parameters) -> b
    void setDisplayOrientation(android.hardware.Camera,int) -> a
com.zgcar.com.zxing.camera.CameraManager -> com.zgcar.com.zxing.a.c:
    java.lang.String TAG -> b
    int MAX_FRAME_WIDTH -> c
    int MAX_FRAME_HEIGHT -> d
    com.zgcar.com.zxing.camera.CameraManager cameraManager -> e
    int SDK_INT -> a
    android.content.Context context -> f
    com.zgcar.com.zxing.camera.CameraConfigurationManager configManager -> g
    android.hardware.Camera camera -> h
    android.graphics.Rect framingRect -> i
    android.graphics.Rect framingRectInPreview -> j
    boolean initialized -> k
    boolean previewing -> l
    boolean useOneShotPreviewCallback -> m
    com.zgcar.com.zxing.camera.PreviewCallback previewCallback -> n
    com.zgcar.com.zxing.camera.AutoFocusCallback autoFocusCallback -> o
    void init(android.content.Context) -> a
    com.zgcar.com.zxing.camera.CameraManager get() -> a
    void openDriver(android.view.SurfaceHolder) -> a
    void closeDriver() -> b
    void startPreview() -> c
    void stopPreview() -> d
    void requestPreviewFrame(android.os.Handler,int) -> a
    void requestAutoFocus(android.os.Handler,int) -> b
    android.graphics.Rect getFramingRect() -> e
    android.graphics.Rect getFramingRectInPreview() -> f
    com.zgcar.com.zxing.camera.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> a
com.zgcar.com.zxing.camera.FlashlightManager -> com.zgcar.com.zxing.a.d:
    java.lang.String TAG -> a
    java.lang.Object iHardwareService -> b
    java.lang.reflect.Method setFlashEnabledMethod -> c
    java.lang.Object getHardwareService() -> c
    java.lang.reflect.Method getSetFlashEnabledMethod(java.lang.Object) -> a
    java.lang.Class maybeForName(java.lang.String) -> a
    java.lang.reflect.Method maybeGetMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    void enableFlashlight() -> a
    void disableFlashlight() -> b
    void setFlashlight(boolean) -> a
com.zgcar.com.zxing.camera.PlanarYUVLuminanceSource -> com.zgcar.com.zxing.a.e:
    byte[] yuvData -> a
    int dataWidth -> b
    int dataHeight -> c
    int left -> d
    int top -> e
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    android.graphics.Bitmap renderCroppedGreyscaleBitmap() -> a
com.zgcar.com.zxing.camera.PreviewCallback -> com.zgcar.com.zxing.a.f:
    java.lang.String TAG -> a
    com.zgcar.com.zxing.camera.CameraConfigurationManager configManager -> b
    boolean useOneShotPreviewCallback -> c
    android.os.Handler previewHandler -> d
    int previewMessage -> e
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler -> com.zgcar.com.zxing.b.a:
    java.lang.String TAG -> a
    com.zgcar.com.start.ActivityRegisterScanning activity -> b
    com.zgcar.com.zxing.decoding.DecodeThreadRegister decodeThread -> c
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State state -> d
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
    void restartPreviewAndDecode() -> b
com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State -> com.zgcar.com.zxing.b.b:
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State PREVIEW -> a
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State SUCCESS -> b
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State DONE -> c
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State[] ENUM$VALUES -> d
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State[] values() -> values
    com.zgcar.com.zxing.decoding.ActivityRegisterScanningHandler$State valueOf(java.lang.String) -> valueOf
com.zgcar.com.zxing.decoding.DecodeFormatManager -> com.zgcar.com.zxing.b.c:
    java.util.regex.Pattern COMMA_PATTERN -> e
    java.util.Vector PRODUCT_FORMATS -> a
    java.util.Vector ONE_D_FORMATS -> b
    java.util.Vector QR_CODE_FORMATS -> c
    java.util.Vector DATA_MATRIX_FORMATS -> d
com.zgcar.com.zxing.decoding.DecodeHandler -> com.zgcar.com.zxing.b.d:
    java.lang.String TAG -> a
    com.zgcar.com.location.ActivityScanning activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> a
com.zgcar.com.zxing.decoding.DecodeHandlerRegister -> com.zgcar.com.zxing.b.e:
    java.lang.String TAG -> a
    com.zgcar.com.start.ActivityRegisterScanning activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> a
com.zgcar.com.zxing.decoding.DecodeThread -> com.zgcar.com.zxing.b.f:
    com.zgcar.com.location.ActivityScanning activity -> a
    java.util.Hashtable hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
com.zgcar.com.zxing.decoding.DecodeThreadRegister -> com.zgcar.com.zxing.b.g:
    com.zgcar.com.start.ActivityRegisterScanning activity -> a
    java.util.Hashtable hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
com.zgcar.com.zxing.decoding.FinishListener -> com.zgcar.com.zxing.b.h:
    android.app.Activity activityToFinish -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void run() -> run
com.zgcar.com.zxing.decoding.InactivityTimer -> com.zgcar.com.zxing.b.i:
    java.util.concurrent.ScheduledExecutorService inactivityTimer -> a
    android.app.Activity activity -> b
    java.util.concurrent.ScheduledFuture inactivityFuture -> c
    void onActivity() -> a
    void cancel() -> c
    void shutdown() -> b
com.zgcar.com.zxing.decoding.InactivityTimer$DaemonThreadFactory -> com.zgcar.com.zxing.b.j:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.zgcar.com.zxing.decoding.ScanningActivityHandler -> com.zgcar.com.zxing.b.k:
    java.lang.String TAG -> a
    com.zgcar.com.location.ActivityScanning activity -> b
    com.zgcar.com.zxing.decoding.DecodeThread decodeThread -> c
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State state -> d
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
    void restartPreviewAndDecode() -> b
com.zgcar.com.zxing.decoding.ScanningActivityHandler$State -> com.zgcar.com.zxing.b.l:
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State PREVIEW -> a
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State SUCCESS -> b
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State DONE -> c
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State[] ENUM$VALUES -> d
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State[] values() -> values
    com.zgcar.com.zxing.decoding.ScanningActivityHandler$State valueOf(java.lang.String) -> valueOf
com.zgcar.com.zxing.view.ViewfinderResultPointCallback -> com.zgcar.com.zxing.view.a:
    com.zgcar.com.zxing.view.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.zgcar.com.zxing.view.ViewfinderView -> com.zgcar.com.zxing.view.ViewfinderView:
    int ScreenRate -> b
    float density -> c
    android.graphics.Paint paint -> d
    int slideTop -> e
    int slideBottom -> f
    android.graphics.Bitmap resultBitmap -> g
    int maskColor -> h
    int resultColor -> i
    int resultPointColor -> j
    java.util.Collection possibleResultPoints -> k
    java.util.Collection lastPossibleResultPoints -> l
    boolean isFirst -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> a
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> a
